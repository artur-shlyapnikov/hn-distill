---
import StorySection from '../../components/StorySection.astro';
import '../../styles/global.css';
import { LANG } from '@config/lang';
import { PATHS } from '@config/paths';
import type { AggregatedItem } from '@config/schemas';
import { formatDateHuman } from '@utils/date';
import { indexById, loadAggregated, pickByIds } from '@utils/load-aggregated';
import { readJsonSafeOr } from '@utils/json';
import { z } from 'zod';

const DailyGroupFileSchema = z.object({
  updatedISO: z.string(),
  byDate: z.record(z.array(z.number())),
});

export async function getStaticPaths() {
  const dailyGroup = await readJsonSafeOr(PATHS.grouped.daily, DailyGroupFileSchema, {
    updatedISO: '',
    byDate: {},
  });
  const keys = Object.keys(dailyGroup.byDate);
  keys.sort((a, b) => (a < b ? 1 : a > b ? -1 : 0));
  return keys.map((key) => ({ params: { date: key } }));
}

const lang = LANG;
const dateParam = Astro.params.date ?? '';
const dateKey = typeof dateParam === 'string' ? dateParam : '';

const { items: allItems } = loadAggregated(PATHS.aggregated);
const itemsById = indexById(allItems);

const dailyGroup = await readJsonSafeOr(PATHS.grouped.daily, DailyGroupFileSchema, {
  updatedISO: '',
  byDate: {},
});

const dayIds = dailyGroup.byDate[dateKey] ?? [];
const dayItems = pickByIds(itemsById, dayIds);

// Format date for display
const displayDate = dateKey ? formatDateHuman(`${dateKey}T12:00:00Z`) : dateKey;

const i18n = {
  ru: {
    title: 'За сутки',
    noData: 'Нет данных для выбранной даты.',
    posts: 'Постов',
  },
  en: {
    title: 'Daily',
    noData: 'No data for the selected date.',
    posts: 'Posts',
  },
} as const;
const t = i18n[lang as 'ru' | 'en'];
const pageTitle = `${t.title}: ${displayDate} — Hacker News Digest`;
const description = `Hacker News Digest for ${displayDate}. ${dayItems.length} ${t.posts}.`;
---
<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <title>{pageTitle}</title>
    <meta name="description" content={description} />
    <meta name="robots" content="index,follow" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={Astro.url.href} />
    <meta property="og:site_name" content="Hacker News Digest" />
    <meta property="og:type" content="website" />
  </head>
  <body>
    <header>
      <h1><a href="/">Hacker News Digest</a></h1>
      <p class="meta">{t.title}: {displayDate}</p>
      <p class="meta">Постов: {dayItems.length}</p>
    </header>
    <main>
      {dayItems.length === 0 ? (
        <p class="meta">{t.noData}</p>
      ) : (
        dayItems.map((it) => <StorySection item={it} />)
      )}
    </main>
  </body>
  </html>
