---
import StorySection from '../components/StorySection.astro';
import '../styles/global.css';
import { env } from '@config/env';
import { formatDateHuman } from '@utils/date';
import { readFileSync, existsSync } from 'node:fs';

const lang = env.SUMMARY_LANG;
const dataPath = new URL('../../data/aggregated.json', import.meta.url).pathname;
const data = existsSync(dataPath) ? JSON.parse(readFileSync(dataPath, 'utf8')) : { items: [], updatedISO: '—' };

const items = Array.isArray((data as any).items) ? (data as any).items : [];
const updatedISO = typeof (data as any).updatedISO === 'string' ? (data as any).updatedISO : '—';
const updatedPretty = formatDateHuman(updatedISO);

const i18n = {
  ru: {
    updated: 'Обновлено',
    stories: 'Постов',
    noData: 'Нет данных для отображения. Попробуйте позже.'
  },
  en: {
    updated: 'Updated',
    stories: 'Stories',
    noData: 'No data to display. Please try again later.'
  }
};
const t = i18n[lang];
---
<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <title>Hacker News Digest</title>
    <meta name="robots" content="index,follow" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
  </head>
  <body>
    <header>
      <h1>Hacker News Digest</h1>
      <p class="meta">{t.updated}: {updatedPretty}</p>
      <p class="meta">{t.stories}: {items.length}</p>
    </header>
    <main>
      {items.length === 0 ? (
        <p class="meta">{t.noData}</p>
      ) : (
        items.map((it) => <StorySection item={it} />)
      )}
    </main>
  </body>
</html>