---
import StorySection from '../../components/StorySection.astro';
import '../../styles/global.css';
import { LANG } from '@config/lang';
import { PATHS } from '@config/paths';
import { WeeklyGroupFileSchema, type AggregatedItem } from '@config/schemas';
import { indexById, loadAggregated, pickByIds } from '@utils/load-aggregated';
import { readJsonSafeOr } from '@utils/json';

export async function getStaticPaths() {
  const weeklyGroup = await readJsonSafeOr(PATHS.grouped.weekly, WeeklyGroupFileSchema, {
    updatedISO: '',
    byWeek: {},
  });
  const keys = Object.keys(weeklyGroup.byWeek);
  keys.sort((a, b) => (a < b ? 1 : a > b ? -1 : 0));
  return keys.map((key) => ({ params: { week: key } }));
}

const lang = LANG;
const weekParam = Astro.params.week ?? '';
const weekKey = typeof weekParam === 'string' ? weekParam : '';

const { items: allItems } = loadAggregated(PATHS.aggregated);
const itemsById = indexById(allItems);

const weeklyGroup = await readJsonSafeOr(PATHS.grouped.weekly, WeeklyGroupFileSchema, {
  updatedISO: '',
  byWeek: {},
});

const weekIds = weeklyGroup.byWeek[weekKey] ?? [];
const weekItems = pickByIds(itemsById, weekIds);

// Format week for display
const displayWeek = weekKey ? `Неделя ${weekKey.split('-w')[1]}, ${weekKey.split('-w')[0]}` : weekKey;

const i18n = {
  ru: {
    title: 'По неделям',
    noData: 'Нет данных для выбранной недели.',
  },
  en: {
    title: 'Weekly',
    noData: 'No data for the selected week.',
  }
};
const t = i18n[lang];
const pageTitle = `${t.title}: ${displayWeek} — Hacker News Digest`;
const description = `Weekly Hacker News Digest for ${displayWeek}. ${weekItems.length} posts.`;
---
<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <title>{pageTitle}</title>
    <meta name="description" content={description} />
    <meta name="robots" content="index,follow" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={Astro.url.href} />
    <meta property="og:site_name" content="Hacker News Digest" />
    <meta property="og:type" content="website" />
  </head>
  <body>
    <header>
      <h1><a href="/">Hacker News Digest</a></h1>
      <p class="meta">{t.title}: {displayWeek}</p>
      <p class="meta">Posts: {weekItems.length}</p>
    </header>
    <main>
      {weekItems.length === 0 ? (
        <p class="meta">{t.noData}</p>
      ) : (
        weekItems.map((it) => <StorySection item={it} />)
      )}
    </main>
  </body>
  </html>
