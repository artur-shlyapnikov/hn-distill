{
  "id": 44854498,
  "lang": "ru",
  "summary": "**Кратко о сути**\n\nКонечные автоматы (FSM) умеют не только «считать», но и компактно хранить **упорядоченные множества/карты строк**, обеспечивая сверхбыстрый поиск.  \nАвтор реализовал это в крейте [`fst`](https://github.com/BurntSushi/fst) на Rust и показал, как:\n\n- за 18 с построить индекс из 16 млн заголовков Википедии (384 → 157 МБ);  \n- за 23 мс найти все статьи на «Homer the*»;  \n- за 94 мс выдать все варианты «Homer Simpson» с ошибками ≤ 2.\n\n**Ключевые идеи**\n\n1. **Три → FSA → FST**  \n   - Trie сжимается в минимальный конечный автомат (FSA).  \n   - Добавляем выходные значения — получаем FST (аналог карты).\n\n2. **Построение**  \n   - Сортируем входные строки.  \n   - Пошагово добавляем, объединяя общие префиксы и минимизируя автомат.  \n   - Поддерживаются потоковые операции и параллельная сборка.\n\n3. **Возможности библиотеки `fst`**  \n   - Поиск по префиксу, регуляркам, расстоянию Левенштейна.  \n   - Операции над множествами (объединение, пересечение, разность).  \n   - Работа через `mmap` без загрузки в RAM.\n\n4. **CLI-утилита `fst`**  \n   - `fst set` / `fst map` — построить индекс.  \n   - `fst grep`, `fst fuzzy`, `fst union`, `fst intersect` — запросы.\n\n**Эксперименты**\n\n| Данные | Записей | Исходник | fst | gzip | Поиск |\n|---|---|---|---|---|---|\n| словарь | 0.5 млн | 4.8 МБ | 0.9 МБ | 1.2 МБ | 0.4 мс |\n| Gutenberg | 3.7 млн | 47 МБ | 11 МБ | 9.5 МБ | 0.6 мс |\n| Вики-заголовки | 16 млн | 384 МБ | 157 МБ | 91 МБ | 23 мс |\n| DOI-ссылки | 86 млн | 4.9 ГБ | 1.2 ГБ | 0.9 ГБ | 0.1 мс |\n| Common Crawl | 1.6 млрд | 134 ГБ | 24 ГБ | 21 ГБ | 0.3 мс |\n\n**Выводы и ограничения**\n\n- FST не заменяет хэш-таблицы: требует **сортированный** ввод и **быстрый случайный доступ** (SSD лучше HDD).  \n- На 64-битных системах экономит память за счёт адресного пространства.  \n- Лучше всего для **статических** больших наборов строк с префиксным/фаззи-поиском.",
  "inputHash": "da163d68dbc97e2a70a994bba74204988bceb742969baf20ea3484b4be670b3c",
  "model": "moonshotai/kimi-k2:free",
  "createdISO": "2025-08-14T02:00:22.313Z"
}