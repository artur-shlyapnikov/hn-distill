{
  "id": 44778898,
  "lang": "ru",
  "summary": "![Изображение 1: Hyperactive](https://raw.githubusercontent.com/feathers-studio/comptime.ts/master/docs/comptime.ts.svg)\n\nПростой компилятор TypeScript для вычисления выражений с пометкой comptime на этапе сборки. Полезно для переноса вычислений из рантайма в компиляцию. Вдохновлено Bun macros и Zig comptime.\n\nВнимание: вы сами отвечаете за безопасность выражений, вычисляемых на этапе компиляции. Изоляции нет. Импорты comptime допускаются только в файлах проекта (не в node_modules), но можно импортировать из node_modules как comptime.\n\nСодержание\n- Что такое comptime.ts?\n- Примеры: 1) простая сумма; 2) CSS без рантайма; 3) константы во время сборки\n- Установка\n- Использование: Vite, Bun, CLI, API\n- Принудительная оценка и промисы, отказ от «вирусности»\n- Запуск кода после comptime, как работает, ограничения, практики, отладка, поддержка, лицензия\n\nЧто это\ncomptime.ts вычисляет выражения при компиляции, сокращая работу в рантайме.\n\nПримеры\n1) Простая сумма\nimport { sum } from \"./sum.ts\" with { type: \"comptime\" };\nconsole.log(sum(1, 2));\n// => console.log(3);\n\n2) Emotion CSS без рантайма\nimport { css } from \"@emotion/css\" with { type: \"comptime\" };\nconst style = css`color: red; font-size: 16px;`;\ndiv({ class: style });\n// => const style = \"css-x2wxma\"; div({ class: style });\n\nПримечание: импорт @emotion/css удаляется. Стили нужно вывести отдельно (после comptime или плагином бандлера).\n\n3) Константы на этапе сборки\nimport { ms } from \"ms\" with { type: \"comptime\" };\nconst HOUR = ms(\"1 hour\");\n// => const HOUR = 3600000;\n\nПоддерживаются многие выражения (включая индексацию и импортированные константы), результат должен быть сериализуем в JSON. Импорты с type: \"comptime\" удаляются; лишнее убирает ваш бандлер.\n\nУстановка\nbun add comptime.ts\npnpm add comptime.ts\nnpm install comptime.ts\n\nИспользование\n- Vite:\nimport { comptime } from \"comptime.ts/vite\";\nexport default defineConfig({ plugins: [comptime()] });\n\nТолько в прод-сборке, если поведение совпадает с рантаймом:\nexport default defineConfig({ build: { rollupOptions: { plugins: [comptime()] } } });\n\n- Bun:\nimport { comptime } from \"comptime.ts/bun\";\nawait Bun.build({ entrypoints: [\"./index.ts\"], ou ... })",
  "inputHash": "e13446d3fe602876a020dd5ffd9c8be8275a2d6f173daff450b0df065778e6a3",
  "model": "openrouter/horizon-beta",
  "createdISO": "2025-08-07T09:14:04.279Z"
}