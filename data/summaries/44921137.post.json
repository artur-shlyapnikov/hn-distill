{
  "id": 44921137,
  "lang": "ru",
  "summary": "**Всё, что я знаю о хорошем системном дизайне**\n\nСистемный дизайн — это то, как мы собираем *сервисы*, а не строки кода. Его примитивы: серверы, БД, кэши, очереди, прокси и т.д.\n\nХороший дизайн выглядит скучно: ничего не ломается, задачи решаются проще, чем ожидалось. Сложные системы с CQRS, консенсусом и прочими фокусами часто компенсируют плохие решения. Сложное должно расти из простого, а не строиться сразу.\n\n**Состояние и его минимизация**  \nСложность — в управлении состоянием. Stateless-сервисы (например, конвертер PDF → HTML) перезапускаются и живут вечно. Stateful-сервисы могут «испортиться» и требуют ручного лечения. Поэтому:\n\n- Один сервис пишет в БД, остальные общаются с ним по API/событиям.  \n- Чтение иногда проще делать напрямую, но писать — только через «владельца» данных.\n\n**Базы данных**  \nГлавный компонент.\n\n- **Схема**: читаемая человеком, достаточно гибкая, но не «всё в JSON».  \n- **Индексы**: под самые частые запросы, не больше.  \n- **Узкие места**: обращения к БД часто тормозят всё.",
  "inputHash": "a404680ac1efb3a625aad7d519906025895932fa4bfe6d113e57df5dcb450374",
  "model": "moonshotai/kimi-k2:free",
  "createdISO": "2025-08-16T08:29:22.807Z"
}