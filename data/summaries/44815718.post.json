{
  "id": 44815718,
  "lang": "ru",
  "summary": "Я недавно ушел из Microsoft и присоединился к программе MIT Media Arts and Sciences. Сразу встал вопрос: как выбирать курсы среди «неизвестных неизвестностей»? Найти то, что уже ищешь, легко. Но открыть курсы, о которых не подозревал, — нужна другая тактика и помощь ИИ.\n\nОфициальный каталог MIT — старый CGI с медленным интерфейсом без поиска по мере ввода. Hydrant ищет быстро, но показывает детали только одного курса, неудобен для одновременного сравнения. Оба инструмента ориентированы на человека, а не на LLM-агентов, и почти не дают машиночитаемых данных.\n\nЯ устроил мини-хакатон и сделал Courseek — проверку, как далеко можно зайти с «vibe-coding» и моим (Un)framework вместо React + Tailwind. Спойлер: получилось.\n\nДанные: в каталоге около 2.3 тыс. курсов. Я сначала скрапнул их с MIT Course Picker простым скриптом, получил ~343k токенов JSON. Это верхняя оценка; современные LLM с миллионным контекстом могут проглотить всё и помогать в навигации. Позже узнал, что Hydrant уже отдаёт готовый JSON по hydrant.mit.edu/latest.json — лучший код тот, что удалён.\n\nСравнение инструментов:\n- Hydrant: быстрый поиск, современно выглядит, но вынуждает линейный просмотр и мешает обзору «ландшафта» и сравнению нескольких курсов.\n- Официальный каталог: устаревший UI, перезагрузка страницы на каждый запрос, слабые фильтры и мало информации на выдаче.\n- Общая проблема: интерфейсы игнорируют ИИ-пользователей и не дают структурированных форматов для умной навигации.\n\nЦели: поиск «по мере ввода» и параллельный показ множества карточек.\n\nПрототипирование:\n- MVP: одна HTML-страница со всем JSON, показ/скрытие через JS. Работает, но лагает на больших подборках.\n- Дальше — web worker: рендер отделён от обработки, но всё ещё ощущается тормоз при >1000 совпадениях; дебаунс добавил «мертвые» паузы.\n- Узкое место — DOM. Виртуализация через @lit-labs/virtualizer решила проблему: рендерятся только видимые строки.\n\nГде «vibe-coding» буксует:\n- Для <3000 документов брутфорс-строковый матчинг даёт realtime без инвертированного индекса — гипотеза верна.\n- Но TDD с помощью LLM провалился: просил сначала тесты, потом реализацию — результаты оказались тревожными.",
  "inputHash": "310af15db68dd4485e7db24b9f3afa6e84d2d33f90dc7ecf2ecd4839ca3d7abf",
  "model": "openrouter/horizon-beta",
  "createdISO": "2025-08-07T12:35:16.807Z"
}