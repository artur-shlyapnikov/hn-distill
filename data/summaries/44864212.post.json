{
  "id": 44864212,
  "lang": "ru",
  "summary": "**Балансировка нагрузки в больших системах**\n\n**Цели**  \n- равномерное использование ресурсов;  \n- устойчивость к отказам;  \n- простота эксплуатации.\n\n**Почему сложно**\n\n1. **Запросы разные**  \n   round-robin не учитывает CPU/IO/объём данных.  \n   *Решения*: least-connections, Power-of-Two-Choices.\n\n2. **Привязка к серверу**  \n   кэш, сессии, шардирование.  \n   *Решения*: хэширование, consistent hashing с виртуальными узлами.\n\n3. **Список серверов меняется**  \n   деплой, автоскейлинг, падения узлов, Kubernetes.\n\n   **Добавление узла**  \n   - перераспределение активных соединений;  \n   - всплеск трафика на «холодный» узел;  \n   - необходимость прогрева JVM/кэша.  \n   *Митигируем*: consistent hashing, slow-start, взвешенная балансировка.\n\n4. **Warm-up / Slow-start**  \n   Java-сервисы и кэши требуют времени до пиковой производительности. Прокси должен плавно наращивать трафик, иначе латентность вырастет.",
  "inputHash": "94324a418d2d2fb8c29705dec1c81bfe183c7a5e3773175c6f0211e2c70099f6",
  "model": "moonshotai/kimi-k2:free",
  "createdISO": "2025-08-14T19:21:05.089Z"
}