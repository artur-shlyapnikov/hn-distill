{
  "id": 44833834,
  "lang": "ru",
  "summary": "Начав использовать Linear, я углубился в «локально-ориентированные» приложения: клиент хранит полную БД, изменения сначала пишутся локально, а фоновый sync-рантайн рассылает их по WebSocket/GraphQL. Пользователь видит мгновенные обновления без сетевой задержки.\n\nПроанализировав реверс-инжиниринг и доклады команды Linear, я понял: их sync-движок — это месяцы работы, чтобы решить офлайн-режим, конфликты, частичную синхронизацию, миграции схем и безопасность.\n\nВ 2025-м экосистема уже готова:\n\n- **Electric SQL** — Postgres-синхронизация  \n- **PowerSync** — корпоративный уровень  \n- **Jazz** — «обновляешь локальный state — всё синхронизируется»  \n- **Zero, Instant, Triplit, LiveStore** — упрощают разработку\n\nJazz предлагает CoValues: схема на Zod + автоматическая репликация. Пример:\n\n```ts\nconst Post = co.map({\n  title: z.string(),\n  comments: co.list(Comment)\n});\n```\n\nМеняешь `post.title` — изменение мгновенно отражается у всех участников.",
  "inputHash": "ddb514cc725094cf61eea82d0ab9c4bf55cb70b725577f48a1f4eff29de9274f",
  "model": "moonshotai/kimi-k2",
  "createdISO": "2025-08-08T06:40:28.820Z"
}