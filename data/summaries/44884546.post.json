{
  "id": 44884546,
  "lang": "ru",
  "summary": "Все мои fennel-библиотеки теперь поставляются **одним файлом**. Долгое время не было способа совместить макросы и функции в одном файле, но эксперименты с библиотекой `async.fnl` показали рабочий подход. Ниже — как это устроено.\n\n---\n\n### Модули в других языках\n\n- **Elixir**  \n  `defmodule Lib …` создаёт атом `Lib`, но сам модуль скрыт.\n\n- **Python**  \n  `import lib` возвращает объект `<module 'lib' …>`, но взаимодействовать с ним можно только через ключевые слова `import/from`.\n\n- **Clojure**  \n  `(ns lib)` создаёт `#namespace[lib]`, но напрямую переменная `lib` не доступна; нужны `ns-interns`, `ns-publics`.\n\nВо всех трёх модули — «черные ящики».\n\n---\n\n### Lua/Fennel: модуль = таблица\n\nФайл `lib.fnl`:\n\n```fennel\n(fn foo [] \"foo\")\n(fn bar [] \"bar\")\n(fn baz [] \"baz\")\n{:foo foo :bar bar}\n```\n\n`require` возвращает обычную таблицу, которую можно разбирать, копировать, передавать как любой другой объект.",
  "inputHash": "3405823e50ce2a5eb1fe03c2468cb76d610d0c67aa29972c8573153747c861f8",
  "model": "moonshotai/kimi-k2:free",
  "createdISO": "2025-08-13T04:34:27.478Z"
}