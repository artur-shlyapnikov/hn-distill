{
  "id": 44817979,
  "lang": "ru",
  "summary": "**p-fast trie** — упрощённая версия широкого x-fast trie для поиска префиксов, предшественников и преемников за *O(log k)*, где *k* — длина ключа.\n\n**Структура**  \n- Хранит лексикографически упорядоченные имена.  \n- Каждый уникальный префикс попадает в хеш-таблицу.  \n- Запись:  \n  - ссылка на ближайшее имя ≥ префикса;  \n  - длина префикса (не хранится явно);  \n  - битмапа возможных следующих символов.\n\n**Поиск префикса**  \n1. Ищем строку в хеше.  \n2. Если нет — уменьшаем длину префикса и повторяем.  \n3. Если префикс найден, проверяем бит следующего символа:  \n   - бит установлен — увеличиваем длину и идём дальше;  \n   - иначе текущий префикс — ответ.\n\n**Поиск предшественника**  \n- Бинпоиск по длине; при совпадении префикса сравниваем всё имя.  \n- Если оно больше запроса — смещаемся влево.  \n- Иначе ищем в битмапе максимальный символ < следующего символа запроса.  \n- После окончания бинпоиска спускаемся по поддереву до листа.\n\n**Заметки**  \n- Глубина qp-trie: 7–15 шагов.  \n- p-fast trie: ≤ 9 хеш-запросов для DNS-имён, в среднем 3–5.  \n- Поиск предшественника может потребовать до 30 запросов, поэтому список листьев может быть выгоднее.",
  "inputHash": "b84b2e83d6b181e8964014d0b705f9c777fae07794d844b606d5f6f6d35c0a60",
  "model": "moonshotai/kimi-k2:free",
  "createdISO": "2025-08-10T12:06:26.150Z"
}