{
  "id": 44888184,
  "lang": "ru",
  "summary": "**Активационный максимум для промптов**  \nНа задаче классификации Yelp Review Polarity 4 сгенерированных токена дают 95,9 % точности, тогда как ручной промпт — 57 %. Использован Llama-3.2-1B-Instruct, код на GitHub.\n\n**Идея**  \nВместо обучения весов фиксируем модель и градиентным спуском подбираем вход, который вызывает нужный выход. В PyTorch достаточно заменить цель оптимизатора: `optimizer = Adam([subject])`.\n\n**MNIST-демо**  \nОбучили свёрточную сеть на MNIST (99 %). Затем из шума 28×28 пикселей за 512 шагов получили изображение, которое модель уверенно классифицирует как «7» (или «3»), хотя выглядит как случайный шум.\n\n**Промпт-инженерия**  \nОбычно мы пишем длинные инструкции, тратя токены и время. Fine-tuning требует памяти и может забыть старые навыки. Промпт остаётся единственным способом «на лету» менять поведение общей модели.\n\n**Проблема токенизатора**  \nТекст превращается в дискретные id, поэтому градиентный спуск напрямую не работает. Однако это препятствие обходимо: можно оптимизировать не id, а их непрерывные эмбеддинги и потом декодировать ближайшие токены.",
  "inputHash": "0d98b95adcf167e66e04405813e3089c2f2102f011d9c39421cd91108c6aa0c8",
  "model": "moonshotai/kimi-k2:free",
  "createdISO": "2025-08-16T06:35:30.213Z"
}