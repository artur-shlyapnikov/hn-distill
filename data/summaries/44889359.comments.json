{
  "id": 44889359,
  "lang": "ru",
  "summary": "- Обсуждение началось с вопроса, совместимы ли макросы со строгой статической типизацией; большинство участников считают, что да, пример — Coalton.  \n- Coalton добавляет к Common Lisp ML-подобную систему типов, позволяя выявлять ошибки на этапе компиляции и давать новые абстракции (type classes, ad-hoc полиморфизм).  \n- Макросы в Coalton пишутся на самом Lisp’е и работают, но мечтают о «макросах для системы типов», которые бы расширяли и её.  \n- SBCL уже умеет выводить и оптимизировать типы, но не покрывает сложные параметрические типы вроде «список элементов T».  \n- Некоторые примеры на сайте coalton.app сломаны ( unmatched paren, ошибки в JSON-парсере), а вёрстка блога плывёт на узких окнах.",
  "sampleComments": [
    44891207,
    44892229,
    44890850,
    44890701,
    44891510
  ],
  "inputHash": "302808e27221e8fc19f33a6eb38a1c7be7f320ae29f20e4efb976b6912dbcef2",
  "model": "moonshotai/kimi-k2:free",
  "createdISO": "2025-08-13T19:20:05.709Z"
}