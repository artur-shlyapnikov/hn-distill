{
  "id": 44889359,
  "lang": "ru",
  "summary": "- Обсуждение началось с вопроса: «почему считают, что макросы несовместимы со статической типизацией?»  \n- Участники отметили, что Coalton показывает: макросы и статика могут сосуществовать, но макросы пишутся на самом Lisp, а не на Coalton.  \n- Ключевая ценность Coalton — это ML-подобная полиморфия, ad-hoc полиморфизм через type classes и проверка типов на этапе компиляции вместо рантайма.  \n- Некоторые примеров на сайте coalton.app оказались сломаны (ошибки парсинга и выполнения).  \n- SBCL без Coalton уже «безопасен», но ошибки ловятся только во время выполнения; Coalton же выдаёт их сразу при компиляции, что ускоряет разработку крупных проектов.",
  "sampleComments": [
    44891207,
    44890850,
    44890701,
    44892229,
    44891510
  ],
  "inputHash": "c22f7228b16769d03aed28a8cc2e6d5c0f478bc1c4c26914dcbe697215423353",
  "model": "moonshotai/kimi-k2:free",
  "createdISO": "2025-08-13T21:24:15.499Z"
}