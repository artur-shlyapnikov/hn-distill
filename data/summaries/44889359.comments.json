{
  "id": 44889359,
  "lang": "ru",
  "summary": "- Обсуждение началось с вопроса, почему многие считают макросы несовместимыми со строгой статической типизацией; участники сошлись на том, что это не так, примером служит Coalton.  \n- Coalton добавляет к Common Lisp ML-подобную статическую типизацию и ad-hoc полиморфизм через type classes, что повышает выразительность и позволяет компилятору делать агрессивные оптимизации.  \n- SBCL уже «безопасен» и умеет выводить типы, но ошибки выявляются лишь во время исполнения, тогда как Coalton сообщает о них на этапе компиляции.  \n- Некоторые примеры на сайте coalton.app пока выдают синтаксические ошибки, а вёрстка блога плывёт в неразвёрнутом окне.  \n- Сторонники статической типизации считают её критически важной для больших проектов, ускоряющей разработку и повышающей надёжность кода.",
  "sampleComments": [
    44891207,
    44890850,
    44890701,
    44891510,
    44890914
  ],
  "inputHash": "e0b886bb1bf7d57b8748215ff3fc57651e84c89839239effc259061ba9757015",
  "model": "moonshotai/kimi-k2:free",
  "createdISO": "2025-08-13T18:35:02.271Z"
}