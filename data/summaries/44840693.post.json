{
  "id": 44840693,
  "lang": "ru",
  "summary": "- **Выбор хранилища метаданных рабочих процессов** оказался ключевым. Нужно было простое: чекпойнт состояния и восстановление после сбоя. Postgres выбрали за технические возможности, а не только за популярность и 40-летнюю проверку временем.\n\n- **Масштабируемые очереди**  \n  Классическая таблица-очередь страдает от конкуренции: все воркеры пытаются взять одни и те же задачи. Postgres решает это через `FOR UPDATE SKIP LOCKED`: строки блокируются и пропускаются, если уже захвачены. Воркеры без конфликтов берут следующие N записей, позволяя обрабатывать десятки тысяч задач в секунду.\n\n- **Наблюдаемость**  \n  Каждый шаг сохраняется, поэтому можно строить дашборды и фильтры. SQL позволяет писать сложные запросы напрямую; индексы по `created_at`, `executor_id`, `status` ускоряют выборки из миллионов записей без лишних затрат.\n\n- **Exactly-once для шагов с БД**  \n  Обычно гарантируется «по крайней мере один раз», но если шаг меняет данные в той же транзакции, что и чекпойнт, Postgres обеспечит, что изменения зафиксируются ровно один раз даже после перезапуска.",
  "inputHash": "b0c8f2af9fd92bb73f2e97edaa0dae4838a65ae3f98f926bac8c569a71ba55c6",
  "model": "moonshotai/kimi-k2:free",
  "createdISO": "2025-08-08T20:28:17.493Z"
}