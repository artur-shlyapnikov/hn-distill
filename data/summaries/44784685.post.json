{
  "id": 44784685,
  "lang": "ru",
  "summary": "**Как приложение получает фокус в Wayland**  \nВ X11 окно могло «захватить» внимание само; в Wayland это невозможно. Приложение может лишь *получить* фокус, если композитор одобрит запрос. Для этого используется протокол **XDG Activation**.\n\n1. Приложение-источник (например, мессенджер) запрашивает у композитора токен активации.  \n2. Токен передаётся целевому приложению через переменную окружения `XDG_ACTIVATION_TOKEN` или поле `activation-token` в DBus.  \n3. Получив токен, приложение просит композитор активировать своё окно.  \n4. Композитор проверяет подлинность: наличие токена, серийный номер события, ID приложения и т.д. При сомнении запрос отклоняется.\n\n**Готовые решения в KDE/Qt**  \n- `QWindow::requestActivate()` сама использует токен из окружения или запрашивает новый.  \n- `OpenUrlJob`, `ApplicationLauncherJob`, `KDBusService` уже умеют работать с токенами.  \nБлагодаря этому большинство KDE-приложений работают без изменений.\n\n**Почему X11 не идеален**  \nУ KWin-X11 была «защита от кражи фокуса», но она опиралась на эвристики и могла быть обойдена.\n\n**Тестируем правильность**  \nВ свежем KWin включите «Extreme»-режим предотвращения кражи фокуса: окно поднимется только при валидном токене. За последние дни исправлены:  \n- Dolphin терял токен при новом запуске;  \n- KRunner, Kickoff и прочие плазмоиды не запрашивали токен;  \n- LayerShell-Qt теперь читает переменную и запрашивает активацию при показе;  \n- привилегированные клиенты (Plasma, KGlobalAccel) могут получать токены;  \n- нажатия модификаторов больше не считаются «пользовательским взаимодействием».\n\nСпецификация DBusRunner получила метод `SetActivationToken`, который теперь используют Baloo и KClock для корректного открытия файлов в уже запущенных окнах.",
  "inputHash": "a43f9039ce989a60bf31a8ccaa80280fc53e67bee3b9156ffe983ff97bb65aad",
  "model": "moonshotai/kimi-k2:free",
  "createdISO": "2025-08-08T12:55:43.653Z"
}