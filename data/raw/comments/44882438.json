[
  {
    "id": 44885442,
    "by": "eviks",
    "timeISO": "2025-08-13T07:05:59.000Z",
    "textPlain": "Would be cooler if the whole system were more flexible: you simply define 2 anchor points (one on the target, another on the source, so center bottom would be bottom width 50% and top width 50%) instead of being limited to the 9 predefined areas",
    "parent": 44882438,
    "depth": 1
  },
  {
    "id": 44884741,
    "by": "quantummagic",
    "timeISO": "2025-08-13T04:52:21.000Z",
    "textPlain": "Unless there is a polyfill for Firefox, it will be at least a couple of years before you can rely on this for public sites.",
    "parent": 44882438,
    "depth": 1
  },
  {
    "id": 44883211,
    "by": "falcor84",
    "timeISO": "2025-08-13T00:02:36.000Z",
    "textPlain": "As mentioned at the end of TFA, Codepip's Anchoreum  is an excellent way of learning this.[0] https://anchoreum.com/",
    "parent": 44882438,
    "depth": 1
  },
  {
    "id": 44885230,
    "by": "Antrikshy",
    "timeISO": "2025-08-13T06:28:48.000Z",
    "textPlain": "`position-area` syntax feels a little tough to remember, but I'm glad top/right/bottom/left is still available.",
    "parent": 44882438,
    "depth": 1
  },
  {
    "id": 44883777,
    "by": "xswhiskey",
    "timeISO": "2025-08-13T01:35:49.000Z",
    "textPlain": "It being available on WebKit makes me hopeful for general adoption then.",
    "parent": 44882438,
    "depth": 1
  },
  {
    "id": 44883550,
    "by": "rtkwe",
    "timeISO": "2025-08-13T01:00:38.000Z",
    "textPlain": "I was expecting boat anchors haha.",
    "parent": 44882438,
    "depth": 1
  },
  {
    "id": 44882946,
    "by": "pupppet",
    "timeISO": "2025-08-12T23:23:53.000Z",
    "textPlain": "Any day now, Firefox.",
    "parent": 44882438,
    "depth": 1
  },
  {
    "id": 44882991,
    "by": "efilife",
    "timeISO": "2025-08-12T23:31:09.000Z",
    "textPlain": "Do we really need this? Why won't position: absolute and setting top/left/bottom/right suffice?",
    "parent": 44882438,
    "depth": 1
  },
  {
    "id": 44883714,
    "by": "RobRivera",
    "timeISO": "2025-08-13T01:27:08.000Z",
    "textPlain": "Anchor post",
    "parent": 44882438,
    "depth": 1
  },
  {
    "id": 44882627,
    "by": "danielvaughn",
    "timeISO": "2025-08-12T22:42:27.000Z",
    "textPlain": "Anchor positioning sounds cool, but I ran into some very unintuitive behavior when I tried to use it. Can’t remember the details, it was a couple years ago.",
    "parent": 44882438,
    "depth": 1
  },
  {
    "id": 44885551,
    "by": "jaffathecake",
    "timeISO": "2025-08-13T07:24:56.000Z",
    "textPlain": "`position-anchor` is a high-level simple way of doing it, and it comes with the restrictions you mention. However, the `anchor()` function, which is also mentioned in the article, gives you the kind of flexibility you want.https://developer.mozilla.org/en-US/docs/Web/CSS/anchor",
    "parent": 44885442,
    "depth": 2
  },
  {
    "id": 44884396,
    "by": "MBCook",
    "timeISO": "2025-08-13T03:27:04.000Z",
    "textPlain": "I’m surprised it’s not in Firefox. I don’t remember the last time I ran into something in Safari and Chrome but not FF.I was reading the article and thinking it would be a great thing to adopt for some code we recently wrote, but we have to support Firefox. And since we already have an existing solution that works, no point cleaning it up with this until Firefox adopts it.Still, looks like a very nice feature.",
    "parent": 44883777,
    "depth": 2
  },
  {
    "id": 44885436,
    "by": "lelanthran",
    "timeISO": "2025-08-13T07:05:02.000Z",
    "textPlain": "> Any day now, Firefox.Very true, they started 2 years ago and it has been constantly worked on with the latest update 12 days ago: https://bugzilla.mozilla.org/show_bug.cgi?id=1838746So, it literally will be \"any day now\" :-/",
    "parent": 44882946,
    "depth": 2
  },
  {
    "id": 44883254,
    "by": "adamschwartz",
    "timeISO": "2025-08-13T00:08:23.000Z",
    "textPlain": "It solves many of the pain points Tether[0] tried to solve.For example it helps when the anchoring element is inside of an oveflow hidden/scroll container, but geometrically you need the tethered element to sit/extend outside of the container (so—for now at least—its DOM node needs to be outside of the container).[0] https://tetherjs.dev",
    "parent": 44882991,
    "depth": 2
  },
  {
    "id": 44885146,
    "by": "netghost",
    "timeISO": "2025-08-13T06:14:58.000Z",
    "textPlain": "Yes. Unless you want to rely on JavaScript libraries like popper and FloatingUI, we definitely need this for many use cases.The simplest example is if you have content that it not contained by the box you're positioning against. Think tooltips, popovers, etc.For some usecases like annotating content, this hugely simplifies things.",
    "parent": 44882991,
    "depth": 2
  },
  {
    "id": 44885224,
    "by": "Antrikshy",
    "timeISO": "2025-08-13T06:28:01.000Z",
    "textPlain": "That's fine for a lot of stuff. It becomes tricky to do certain other things. CSS-only tooltips are notoriously limited in scope.",
    "parent": 44882991,
    "depth": 2
  },
  {
    "id": 44884014,
    "by": "cyral",
    "timeISO": "2025-08-13T02:13:37.000Z",
    "textPlain": "This always results in a ton of hacky JS to detect how the element should reposition itself if it overflows the screen (depending on the content and screen size)",
    "parent": 44882991,
    "depth": 2
  },
  {
    "id": 44884236,
    "by": "pupppet",
    "timeISO": "2025-08-13T02:57:51.000Z",
    "textPlain": "This relies on being able to set the position relative to a parent selector, this doesn't work if the element you are positioning is not a descendant of the element you wish to anchor to.",
    "parent": 44882991,
    "depth": 2
  },
  {
    "id": 44884274,
    "by": "bee_rider",
    "timeISO": "2025-08-13T03:05:16.000Z",
    "textPlain": "Fundamentally no, html was fine. But hey it’s one fewer reason to reach for JavaScript, right?",
    "parent": 44882991,
    "depth": 2
  },
  {
    "id": 44882790,
    "by": "bombcar",
    "timeISO": "2025-08-12T23:04:33.000Z",
    "textPlain": "My problem is always been on sites that have a menu or something similar at the top. The anchor always inevitably goes to the very top of the screen gets covered by whatever menu it is.",
    "parent": 44882627,
    "depth": 2
  },
  {
    "id": 44884873,
    "by": "jaffathecake",
    "timeISO": "2025-08-13T05:20:30.000Z",
    "textPlain": "I guess you're being downvoted as a general nay-sayer, but you're right. I tried this feature last month and a bunch of browser bugs and design issues got in the way. I reported them, and they're being worked on https://github.com/w3c/csswg-drafts/issues/12466The `margin:0` issue was particularly frustrating & imo should have been covered in the article, as it's a real gotcha when trying to use popover & anchor positioning in combination.",
    "parent": 44882627,
    "depth": 2
  }
]