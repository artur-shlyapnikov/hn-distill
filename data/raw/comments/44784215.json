[
  {
    "id": 44831698,
    "by": "burnt-resistor",
    "timeISO": "2025-08-07T23:34:13.000Z",
    "textPlain": "There's already a Q language from KX.https://code.kx.com/q/",
    "parent": 44784215,
    "depth": 1
  },
  {
    "id": 44834436,
    "by": "IshKebab",
    "timeISO": "2025-08-08T07:22:45.000Z",
    "textPlain": "Yeah normally I hate those \"but there's already an abandoned programming language from the 80s that had a total of 2 users called X\" but in this case the Q array language is pretty well known.",
    "parent": 44784215,
    "depth": 1
  },
  {
    "id": 44830155,
    "by": "rickcarlino",
    "timeISO": "2025-08-07T20:48:42.000Z",
    "textPlain": "It really ought to have a simple example in the readme to give people a feel of the syntax.",
    "parent": 44784215,
    "depth": 1
  },
  {
    "id": 44785215,
    "by": "pbohun",
    "timeISO": "2025-08-04T13:04:14.000Z",
    "textPlain": "This looks very interesting. I'm hoping there will be more documentation. For example, docs for the standard library/packages and explanation about the design of the language (does it use garbage collection? how does the type system work? how does the foreign function interface work? etc.).Technically I could find all these things out by reading all the source code, but that's a lot of work just to see if the language meets my needs.",
    "parent": 44784215,
    "depth": 1
  },
  {
    "id": 44832560,
    "by": "anta40",
    "timeISO": "2025-08-08T01:51:08.000Z",
    "textPlain": "Can build the compiler on macOS 15.6 but it crashes../q examples/hello/hello.qsignal: killed./q examples/collatz/collatz.qsignal: killedEven copying q files into q's folder doesn't workAh, didn't notice the issue is already in discussion:\nhttps://git.urbach.dev/cli/q/issues/6Interesting that one of the goals is not to depend on llvm :D",
    "parent": 44784215,
    "depth": 1
  },
  {
    "id": 44831232,
    "by": "thisislife2",
    "timeISO": "2025-08-07T22:34:11.000Z",
    "textPlain": "A quick look suggests strong typing and that's a huge plus. The syntax is easy to understand and read, but I hope it will be consistent - if writeInt, why not writeStr etc. too?",
    "parent": 44784215,
    "depth": 1
  },
  {
    "id": 44832488,
    "by": "hmry",
    "timeISO": "2025-08-08T01:39:31.000Z",
    "textPlain": "From reading the readme, it seems the Language was designed to explore increasing compile speed, and producing optimized code without using LLVM. Yet all the comments are about the syntax. Never change, programmers. Personally, I would have painted the bikeshed blue.",
    "parent": 44784215,
    "depth": 1
  },
  {
    "id": 44833815,
    "by": "weiwenhao",
    "timeISO": "2025-08-08T05:41:36.000Z",
    "textPlain": "I did something similar. Similar in every way.\nhttps://github.com/nature-lang/nature",
    "parent": 44784215,
    "depth": 1
  },
  {
    "id": 44830125,
    "by": "tromp",
    "timeISO": "2025-08-07T20:45:39.000Z",
    "textPlain": "Not to be confused with any ofhttps://en.wikipedia.org/wiki/Q_(programming_language_from_K...https://en.wikipedia.org/wiki/Q_Sharphttps://q-lang.sourceforge.net/qdoc.pdf",
    "parent": 44784215,
    "depth": 1
  },
  {
    "id": 44831319,
    "by": "koehr",
    "timeISO": "2025-08-07T22:44:43.000Z",
    "textPlain": "I think the syntax is really pretty!",
    "parent": 44784215,
    "depth": 1
  },
  {
    "id": 44832093,
    "by": "fsckboy",
    "timeISO": "2025-08-08T00:33:43.000Z",
    "textPlain": "I wish we could get away from putting syntax and naming betweeen us and languages.io.write is really annoying to me. rw.read and rw.write makes much more sense, or io.in io.out.io.writeInt writes an int as what, ascii/unicode, or binary? an Int is likely already binary/2's complement, and the language should print strings too, it's just a bad name.leaving parentheses out surrounding predicates and/or a semicolon at the end should be my choice, not yours, it has nothing to do with the language and I have preferences.If languages provided flexible syntax per user, divorcing themselves from syntax, then the further description of the language would be semantic. I have no idea what the semantics of this Q are, or are intended to be, and that's what matters. Compilation speed? that's not a language.",
    "parent": 44784215,
    "depth": 1
  },
  {
    "id": 44830322,
    "by": "draxil",
    "timeISO": "2025-08-07T21:02:58.000Z",
    "textPlain": "does quickly draw attention to it's examples directory though",
    "parent": 44830155,
    "depth": 2
  },
  {
    "id": 44785274,
    "by": "pbohun",
    "timeISO": "2025-08-04T13:10:42.000Z",
    "textPlain": "Looking through the code a bit. This is quite impressive for such a short time working on it.",
    "parent": 44785215,
    "depth": 2
  },
  {
    "id": 44833155,
    "by": "debo_",
    "timeISO": "2025-08-08T03:40:17.000Z",
    "textPlain": "Yup. I really like the design goals. It's neat to think of golang being used to make a compiler that builds very tight executables! They might end up with a 100+mb go executable as a compiler.The syntax of the language itself seems somewhat go-inspired, which I suppose is natural.",
    "parent": 44832488,
    "depth": 2
  },
  {
    "id": 44835006,
    "by": "a96",
    "timeISO": "2025-08-08T09:10:54.000Z",
    "textPlain": "Why oh why don't these projects even do simple web searches or stop to think that their users might want to search (and find relevant answers for) their language, library, or other project before picking the same bad names over and over again?",
    "parent": 44830125,
    "depth": 2
  },
  {
    "id": 44833091,
    "by": "kagevf",
    "timeISO": "2025-08-08T03:29:57.000Z",
    "textPlain": "When I saw the headline, I thought it referred to \"Q\" the array programming language (looks like your first link).",
    "parent": 44830125,
    "depth": 2
  },
  {
    "id": 44832569,
    "by": "theamk",
    "timeISO": "2025-08-08T01:51:57.000Z",
    "textPlain": "Sounds like you may like Perl, with its TIMTOWTDI (\"There's more than one way to do it\") principle. For example you can do \"if\" and \"unless\", in regular or suffix notation... If you go to Perl 6 (Raku) you can redefine major parts of the language like operators.Of course this flexibility is one of the reasons why Perl is no longer popular - everyone has \"preferences\" and allowing too much freedom just means you cannot read others' programs easily.",
    "parent": 44832093,
    "depth": 2
  }
]