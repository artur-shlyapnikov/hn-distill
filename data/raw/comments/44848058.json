[
  {
    "id": 44848656,
    "by": "Palomides",
    "timeISO": "2025-08-09T18:04:47.000Z",
    "textPlain": "Qt with QML for a somewhat embedded use case.  I think it hits a really nice intersection of native speed, GPU acceleration, interfacing with C++, and ease of development.I wouldn't really recommend a career out of it.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848849,
    "by": "gwbennett",
    "timeISO": "2025-08-09T18:25:53.000Z",
    "textPlain": "For both iOS and Android app:\n- Xcode\n- SwiftUI\n- Supabase\n- Claude CLI\n- Skip.tools (converts SwiftUI to native Katlin code)Been developing mobile apps for over 15 years. This is by far the best stack for developing mobile apps. Speed, total control, native UI's. Love it.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848729,
    "by": "dazzawazza",
    "timeISO": "2025-08-09T18:13:53.000Z",
    "textPlain": "Within game development it's Dear ImGui. https://github.com/ocornut/imguiNormally with the Windows DX12 backend, sometimes with the SDL+OpenGL backend if you want cross platform support.Other frameworks are sort of disappearing. C++ all the way although some use it with C#.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848843,
    "by": "vladdoster",
    "timeISO": "2025-08-09T18:25:14.000Z",
    "textPlain": "Flutter is a super compelling framework (https://flutter.dev/multi-platform/desktop), but I’d live in fear of it randomly being sent to the Google graveyard.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848660,
    "by": "mg",
    "timeISO": "2025-08-09T18:05:50.000Z",
    "textPlain": "Now that Chromium supports the File System Access API on desktop and mobile, I am building every software I need as HTML+JS+CSS.Before that, handling files in the browser was cumbersome. You had to offer download and upload links for users to manage files. And handling whole directories was impossible.But now web apps are like native software tools that you can use to edit and manage files on the file system.And the bonus point is that what you build this way is fully functional on mobile too. Right away, without any changes. At least on Android.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848552,
    "by": "bsoles",
    "timeISO": "2025-08-09T17:50:45.000Z",
    "textPlain": "To my dismay, my company uses JavaScript, HTML, CSS with a custom Chromium-based web browser installed on your PC. The performance is shit: GUI performance that should take milliseconds takes seconds to render with constant pinging of corporate servers and user activity logging. Development mostly done in IntelliJ or VS Code.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848764,
    "by": "AaronAPU",
    "timeISO": "2025-08-09T18:17:24.000Z",
    "textPlain": "I’m using JUCE C++ which is very popular for audio software. But it can be used for more general purpose applications. The latest version has some kind of HTML based UI system but I’ve not migrated yet.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848845,
    "by": "Philpax",
    "timeISO": "2025-08-09T18:25:25.000Z",
    "textPlain": "Rust + egui, but it's a far cry from the convenience or iteration speed of the web. Wherever possible, I build webapps instead, just because it's so much faster to get results (especially with LLMs!)With that being said, I'd like to try the modern .NET stack sometime. Shame that the UI side of things is still largely Windows-only, and even Microsoft themselves don't know which UI framework they're using this week.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848740,
    "by": "gisborne",
    "timeISO": "2025-08-09T18:15:08.000Z",
    "textPlain": "Flutter builds pretty decent desktop apps these days.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848616,
    "by": "dochtman",
    "timeISO": "2025-08-09T17:59:46.000Z",
    "textPlain": "Tauri seems interesting. It combines a Rust core with the platform-native browser engine for presentation. Of course a potential downside is rendering incompatibilities between engines/platforms.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848515,
    "by": "mikewarot",
    "timeISO": "2025-08-09T17:46:37.000Z",
    "textPlain": "Lazarus is the open source equivalent to Delphi these days, and for the most part it's awesome. (The documentation, on the other hand... just isn't fit for purpose)I've been using Visual Studio Code and Github Copilot together, and it seems to work ok. I've not used it heavily, though, as I'm retired.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848648,
    "by": "pragmatic",
    "timeISO": "2025-08-09T18:03:49.000Z",
    "textPlain": "Windows Forms are alive and well.Still supported in latest .net versions.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848828,
    "by": "self_awareness",
    "timeISO": "2025-08-09T18:23:42.000Z",
    "textPlain": "C++ and Qt.Rust as a statically linked library where it makes sense.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848872,
    "by": "adamnemecek",
    "timeISO": "2025-08-09T18:28:32.000Z",
    "textPlain": "I have been recently playing with Dioxus and I kinda like it. I too am dismayed that we are using browser to target desktop but here we are I guess.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848644,
    "by": "dev08979",
    "timeISO": "2025-08-09T18:03:23.000Z",
    "textPlain": "I support Java software using a Swing GUI. It's fairly performant, but requires a fair bit of boilerplate for setting up the GUI and can take longer than typical web development.",
    "parent": 44848058,
    "depth": 1
  },
  {
    "id": 44848815,
    "by": "diego_moita",
    "timeISO": "2025-08-09T18:22:17.000Z",
    "textPlain": "For Windows only (because that's the most common platform in the world): C# and .Net. The UI is mostly either WPF or WindowsForms.For Mac only: new apps use Swift, legacy ones use Objective-C, both with AppKit.Linux only: these are quite rare and there is a broad mix of them: C++, Java, etc.Cross-platform: C++ with Qt seems to be the standard. Go and Rust seem to be rising. Rising UI libraries are Tauri, Slint and Iced. There are other alternatives like cross-platform .Net, Java or Flutter. But they don't look very solid and widely adopted.Then there are other UI frameworks for some specific use cases (games, scientific applications, etc).",
    "parent": 44848058,
    "depth": 1
  }
]