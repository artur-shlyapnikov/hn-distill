[
  {
    "id": 44896417,
    "by": "paulirish",
    "timeISO": "2025-08-14T03:21:27.000Z",
    "textPlain": "So glad to find some like-minded folk who care about this! Nice post, Shane.Thanks for calling out my research on this. Really glad you found it.https://github.com/paulirish/lite-youtube-embed/pull/167 has my solution. Basically we only attempt the hqdefault.jpg and the sddefault.webp; no other ones. Based on my research this is (probably) the best solution that optimizes for both latency and coverage. Though, I could see switching the order of two in the future.Pretty sure the oEmbed solutions folks are mentioning are only reasonable if you're doing this work server-side/eagerly. Obviously that changes things quite a bit.",
    "parent": 44865908,
    "depth": 1
  },
  {
    "id": 44894373,
    "by": "mzajc",
    "timeISO": "2025-08-13T22:00:52.000Z",
    "textPlain": "If you can afford to add a little extra logic to your web server, you can solve this without JavaScript shenanigans (plus it doesn't leak your visitors' IPs to Google. On Nginx, for example:  location ~ /vi/(.*)/thumbnail($|\\..*) {\n      error_page 404 = @hqdefault;\n      proxy_intercept_errors on;\n      proxy_pass https://img.youtube.com/vi/$1/maxresdefault$2;\n  }\n  \n  location @hqdefault {\n      proxy_pass https://img.youtube.com/vi/$1/hqdefault$2;\n  }\n\nThen simply use /vi/<id>/thumbnail.webp as the image source or adapt the location regex as needed. This can be chained with yet more fallback URLs.",
    "parent": 44865908,
    "depth": 1
  },
  {
    "id": 44895457,
    "by": "xp84",
    "timeISO": "2025-08-14T00:23:25.000Z",
    "textPlain": "I seem to remember this stupid behavior with maxresdefault going back at least a decade.As though there is no way that it could default to the correct thumbnail for any video -- surely it would not just help random hackers like OP, but also be more efficient for internal teams at Google to be able to render a preview for a video knowing only its ID, instead of making an API call to get the correct thumbnail name.Great example of a 10-minute bug being prioritized at #837,434,212 and never resolved. I'd like to judge harshly, but let's be honest, most codebases older than a month have their share of these embarrassments.",
    "parent": 44865908,
    "depth": 1
  },
  {
    "id": 44894721,
    "by": "dylan604",
    "timeISO": "2025-08-13T22:38:47.000Z",
    "textPlain": "If you're designing the website, why depend on a YT thumbnail? Can't you just use your own image that you have control over, and then load the actual YT when clicked? So many image gallery style components do this. Even if you don't need a gallery, it shows it is clearly possible. It's not like you're trying to work when JS is blocked",
    "parent": 44865908,
    "depth": 1
  },
  {
    "id": 44865921,
    "by": "shaneos",
    "timeISO": "2025-08-11T16:12:08.000Z",
    "textPlain": "Author here, hi all. There are a number of ways to skin this cat. This is my preferred method. What's yours?",
    "parent": 44865908,
    "depth": 1
  },
  {
    "id": 44895851,
    "by": "onestay42",
    "timeISO": "2025-08-14T01:33:18.000Z",
    "textPlain": "Please, please close that parenthese. Please, I beg of you. I can do it for you if you'd like.) There. Sorry.",
    "parent": 44894373,
    "depth": 2
  },
  {
    "id": 44895988,
    "by": "cubefox",
    "timeISO": "2025-08-14T02:01:54.000Z",
    "textPlain": "That reminds me of another YouTube embarrassment: Some ten years ago, Facebook added a \"translate\" button to every comment. The translations were pretty bad (they used Bing Translate rather than the much better Google Translate), but it was really useful to understand people from all over the world.You would think YouTube (owned by Google) would in short order also add such a button to comments. Haha, no. They didn't.About a decade later, probably more, they finally implemented it, albeit only in desktop mode. Not a big deal, just millions and millions of unreadable comments for millions of users for many years. Was probably prioritized at #837,434,211.",
    "parent": 44895457,
    "depth": 2
  },
  {
    "id": 44895420,
    "by": "mcphage",
    "timeISO": "2025-08-14T00:14:05.000Z",
    "textPlain": "You’d probably want it to match YouTube’s preview image, so if your reader sees the video on YouTube proper at a later date, they’ll recognize it.  I’m not sure of a good way to do that, since it’s not necessarily a screengrab from the middle of the video.",
    "parent": 44894721,
    "depth": 2
  },
  {
    "id": 44895824,
    "by": "schiffern",
    "timeISO": "2025-08-14T01:29:37.000Z",
    "textPlain": "Easiest solution is just to use the highest resolution thumbnail the official documentation says is supported on all videos (vs \"some\"), which is hqdefault.https://developers.google.com/youtube/v3/docs/thumbnailsMaxresdefault is overkill for this purpose IMO. Why waste the data? Incidentally this is why I run an add-on that redirects all youtube thumbnails to mqdefault, it saves me a nice chunk of bandwidth / memory / perf.",
    "parent": 44865921,
    "depth": 2
  },
  {
    "id": 44895729,
    "by": "degamad",
    "timeISO": "2025-08-14T01:12:33.000Z",
    "textPlain": "I just took a look at the code that's returned when you open https://www.youtube.com/embed/<videoid>?feature=oembed and noticed a couple of additional image file names you may want to check.        iurl: \"default.jpg\",\n        iurlmq: \"mqdefault.jpg\",\n        iurlhq: \"hqdefault.jpg\",\n        iurlsd: \"sddefault.jpg\",\n        iurlpop1: \"pop1.jpg\",\n        iurlpop2: \"pop2.jpg\",\n        iurlhq720: \"hq720.jpg\",\n        iurlmaxres: \"maxresdefault.jpg\"\n\n        120: \"default.jpg\",\n        320: \"mqdefault.jpg\",\n        480: \"hqdefault.jpg\",\n        560: \"pop1.jpg\",\n        640: \"sddefault.jpg\",\n        854: \"pop2.jpg\",\n        1280: \"hq720.jpg\"",
    "parent": 44865921,
    "depth": 2
  },
  {
    "id": 44894144,
    "by": "degamad",
    "timeISO": "2025-08-13T21:35:44.000Z",
    "textPlain": "I generally prefer the oEmbed approach. It's mentioned on the SO question linked in Paul Irish's write-up. I'll throw together a sample at some point.",
    "parent": 44865921,
    "depth": 2
  },
  {
    "id": 44894474,
    "by": "insin",
    "timeISO": "2025-08-13T22:11:04.000Z",
    "textPlain": "I made an Astro component for this [1] which does the iframe srcdoc thing [2] (example page with dozens of videos [3]). Most of the code is just TypeScript types and building a big srcdoc string, so easy to repurpose if anybody wants to.Handling the fallback image has been sitting as an issue in the repo for a while, in favour of just checking it with the Astro dev server when I'm adding new videos, so… yoink‽[1] https://github.com/insin/astro-lazy-youtube-embed#readme[2] https://css-tricks.com/lazy-load-embedded-youtube-videos/[3] https://jbscript.dev/notes/undefined/the-banterbox",
    "parent": 44865921,
    "depth": 2
  }
]