[
  {
    "id": 44785930,
    "by": "simonw",
    "timeISO": "2025-08-04T14:04:15.000Z",
    "textPlain": "New vibe coding definition just dropped! \"Vibe-Coding is a dialogue-based coding process between a human and an AI where the human guides and the AI implements.\"Reminds me of Steve Yegge's short-lived CHOP - Chat Oriented Programming: https://sourcegraph.com/blog/chat-oriented-programming-in-ac...I remain a Karpathy originalist: I still define vibe coding as where you don't care about the code being produced at all. The moment you start reviewing the code you're not vibe coding any more, by the definition I like.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44785999,
    "by": "ericpauley",
    "timeISO": "2025-08-04T14:09:13.000Z",
    "textPlain": "Personally, I find that if a model can vibe-code the functionality I'm working on then it's not very high-value functionality. Perhaps (a) it's boilerplate (fine), (b) I'm not creating enough/the right abstraction, or (c) the code could easily be written by a junior dev. If I'm working on truly new functionality, modeling complex states and assumptions, or producing something that generalizes to many settings, the model does poorly beyond being a souped up auto-complete.That's not to say that these models don't provide value, especially when writing code that is straightforward but can't be easily generalized/abstracted (e.g., some test-case writing, lots of boilerplate idioms in Go, and basic CRUD).In terms of labor I potentially see this increasing the value (and therefore cost) of actual experienced developers who can approach novel and challenging problems, because their productivity can be dramatically amplified through proper use of AI tooling. At the other end of spectrum, someone who just writes CRUD all day is going to be less and less valuable.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44787867,
    "by": "BadBadJellyBean",
    "timeISO": "2025-08-04T16:13:30.000Z",
    "textPlain": "We have a simple rule: You commit it, you own it. If you vibe coded it that's okay. If it's garbage that's on you. Blaming the LLM doesn't count. So of course you have to read the code. You have to read it and understand it. Works well for us.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44786093,
    "by": "yanis_t",
    "timeISO": "2025-08-04T14:15:31.000Z",
    "textPlain": "If you write code yourself your productivity is limited by how much code you can write. If you read/review code generated by AI, then it's limited by how much you can read/review. The latter is not that much bigger than the former. I believe at some point we'll have to let go.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44786162,
    "by": "jedimastert",
    "timeISO": "2025-08-04T14:19:27.000Z",
    "textPlain": "This comment section is unbelievable lol. I'm genuinely struggling to believe this many people would let code into a codebase without review.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44786174,
    "by": "andix",
    "timeISO": "2025-08-04T14:20:03.000Z",
    "textPlain": "Coding with AI agents is very similar to working with junior developers (or even other developers) in a team. Someone needs to give the project direction, keep the code organized, suggest refactorings, and many more things.I guess it's really hard to work with AI agents, if you don't have real project experience in a more senior position.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44791773,
    "by": "redhale",
    "timeISO": "2025-08-04T21:53:38.000Z",
    "textPlain": "> It’s always easier to straighten a sapling than a grown tree.Ok, but in this case you can just throw away the tree and a new one will grow immediately for you to review anew. Rinse and repeat.I'm not saying the author's proposed approach is never the right one, but there is a meaningfully different approach between the two suggested. You can look at the result of a fully autonomous agent, note the issues, tweak your prompt + inputs and then start over. You get the benefits of more closely-steered output without the drag of having to constantly monitor it synchronously. For some things, this approach is token-wasteful, but for small (yet critical / high-value) features, I have found it to work quite well. And an ancillary benefit is that your starting prompts and inputs improve over time.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44785914,
    "by": "vermon",
    "timeISO": "2025-08-04T14:03:38.000Z",
    "textPlain": "Part of the definition of vibe coding is not looking at the code. If you read code you are not \"vibing\" anymore, you are just using AI tools to write code.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44786134,
    "by": "joe8756438",
    "timeISO": "2025-08-04T14:17:49.000Z",
    "textPlain": "Currently, the only way to understand code is to read it. You no longer need to understand code to produce it (maybe in some pre-AI cases that was also true).So no, you don’t _need_ to read code anymore. But not reading code is a risk.That risk is proportional to characteristics that are very difficult, and in many cases impossible, to measure.So currently best practice would be to continue reading code. Sigh.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44785966,
    "by": "ollysb",
    "timeISO": "2025-08-04T14:06:17.000Z",
    "textPlain": "You can be an architect without reading the code. My process involves building a detailed plan before starting, at which point I ask lots of questions about architecture. After implementation I have a custom agent for reviewing the architecture and I usually ask a few questions at this point as well.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44785950,
    "by": "fxtentacle",
    "timeISO": "2025-08-04T14:05:29.000Z",
    "textPlain": "That article is like advising a blind person to thoroughly look at the road before crossing it.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44786098,
    "by": "kbrannigan",
    "timeISO": "2025-08-04T14:15:48.000Z",
    "textPlain": "Are LMM  compilers that are generating computer understandable instructions. I think of back in the day people use to chisel assembly code by hand. then came a system that all people to code more in english-like commands(prompts).",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44794369,
    "by": "AdieuToLogic",
    "timeISO": "2025-08-05T04:31:46.000Z",
    "textPlain": "It is funny how \"vibe coding\" best practices are indistinguishable from stakeholders defining functional requirements.  Both require sufficient formalization of what is needed such that it can be delivered and neither is overly concerned with how the solution is encoded.It is almost as if understanding the problem to be solved is the hard part.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44786225,
    "by": "broast",
    "timeISO": "2025-08-04T14:23:03.000Z",
    "textPlain": "Reading code is just as fun as writing it, to be honest",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44786113,
    "by": "_jab",
    "timeISO": "2025-08-04T14:16:42.000Z",
    "textPlain": "I've found that there's a pretty consistent relationship between how clearly I can imagine what the code should look like, and how effective vibe coding is. Part of the reason for that is that it means I'll be more opinionated about the output of the model, and can more quickly tell whether it's done something reasonable.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44785915,
    "by": "alphazard",
    "timeISO": "2025-08-04T14:03:39.000Z",
    "textPlain": "I'm not going to read code created by an AI.  The AI exists to prevent me from having to deal with the complexity of a task.  The absolute most I want to read and write are type signatures.  I'll set those up, let the AI go, see if it works.  If it doesn't, maybe retry with a better prompt.  If it still doesn't work, then I'll have to get involved.  Start implementing from the top down, and once there is enough architectural structure, the AI can usually finish up.This still happens quite a bit, and it's just like taking away a hard task from someone less experienced.  The difference is there is no point in investing your time teaching or explaining anything to the AI.  It can't learn in that way, and it's not a person.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44786088,
    "by": "chanux",
    "timeISO": "2025-08-04T14:15:10.000Z",
    "textPlain": "Related reading: Programming as theory building ~ Peter Naur[PDF] https://pages.cs.wisc.edu/~remzi/Naur.pdf",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44786062,
    "by": "chrisjj",
    "timeISO": "2025-08-04T14:13:50.000Z",
    "textPlain": "> Not reviewing AI-generated code will lead to serious problems.A requirement to do so might lead to more. Like loss of job for the illiterate \"programmer\".",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44792600,
    "by": "SubiculumCode",
    "timeISO": "2025-08-04T23:36:49.000Z",
    "textPlain": "ANyone else getting a warning when they go to the linked https site that there is a security risk?",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44786945,
    "by": "MomsAVoxell",
    "timeISO": "2025-08-04T15:11:26.000Z",
    "textPlain": "I have found the following methods to be workable and productive when using AI/ML in a project:* Treat the AI/ML as a junior programmer, not a senior - albeit one willing to make a leap on basically any subject, nevertheless - a junior is someone whose code must always be questioned, reviewed, and understood - before execution.  Senior code is only admissible from a human being.  However, human beings may have as many junior AI’s in their armpit as they want, as long as those humans do not break this rule.* Have good best practices in the first f’in place!!Vibe-coding is crap because ‘agile hacking’ is crap.  Put your code through a proper software process, with a real workflow - i.e. don’t just build it and ship it.  Like, ever.  Even if you’ve written every line of code yourself - but especially if you haven’t - never ship code you haven’t tested, reviewed, proven, demonstrated in a production analog environment, and certified before release.  Yes, I mean it, your broken FNORD hacking habits will be force-magnified immediately by any AI/ML system you puke them into.  Waterfall or gtfo, vibe-code’rs…* Embrace Reading Code.  Look, if you’re gonna churn milk into butter, know what both milk and butter taste like, at least for your sake.  Don’t ship sour butter unless you’re making cheese, and even then, taste your own cheese.  AI/ML is there to make you a more competent human being; if you’re doing it to avoid actually doing any work, you’re doing it wrong.  Do it to make work worth doing again….",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44785902,
    "by": "davidmurdoch",
    "timeISO": "2025-08-04T14:02:56.000Z",
    "textPlain": "Title made me think this was about writing code for vibrators.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44786027,
    "by": "bbqfog",
    "timeISO": "2025-08-04T14:11:10.000Z",
    "textPlain": "These tools continue to increase in power. It’s incredible and there’s no use denying it. Asking people to read ai generated code will soon make as much sense as asking people to read compiler generated ASTs.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44786119,
    "by": "glitchc",
    "timeISO": "2025-08-04T14:17:02.000Z",
    "textPlain": "I'm waiting for LLMs to vibe-code new algorithms.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44793848,
    "by": "vdupras",
    "timeISO": "2025-08-05T02:55:32.000Z",
    "textPlain": "> Everyone keeps saying it these days: treat your AI like a (brilliant) new junior dev.Really? You mean that person that drains senior developer time, but in which we still invest time because we're confident they're going to turn out great after the onboarding?Until then, they're a net time sink, aren't they? Unless the projects you've got to deliver are fantastically boring.So is this really what it's all about? Perpetual onboarding?",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44785983,
    "by": "energy123",
    "timeISO": "2025-08-04T14:08:00.000Z",
    "textPlain": "In what other area is it fashionable to use your own shortcomings and lack of knowledge as evidence that something is a bad idea?",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44786215,
    "by": "goodspc",
    "timeISO": "2025-08-04T14:22:42.000Z",
    "textPlain": "we can arrange them, not arranged by them",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44785942,
    "by": "davidmurdoch",
    "timeISO": "2025-08-04T14:05:04.000Z",
    "textPlain": "\"You cannot delegate the act of thinking\"This is very dumb. Of course you can.",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44787216,
    "by": "pvds78",
    "timeISO": "2025-08-04T15:30:25.000Z",
    "textPlain": "[dead]",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44785894,
    "by": "swedishPerson1",
    "timeISO": "2025-08-04T14:02:13.000Z",
    "textPlain": "[dead]",
    "parent": 44785562,
    "depth": 1
  },
  {
    "id": 44786314,
    "by": "exasperaited",
    "timeISO": "2025-08-04T14:29:21.000Z",
    "textPlain": "I am not struggling to believe it at all. Because I am an old guy with a CS degree but decades of web development experience. Apparently this is called being \"a legacy developer\".This is the logical conclusion of the indiscipline of undereducated developers who have copied and pasted throughout their career.This reality is then expressed as \"but humans also copy and paste\" as if this makes it OK to just hand that task over now to an AI that might do it better, where the solution is to train people to not copy and paste.Everything about AI is the same story, over and over again: just pump it out. Consequences are what lawyers are for.It's really interesting to me that within basically a generation we've gone from people sneering at developers with old fashioned, niche development skills and methodologies (fortran, cobol, Ada) to sneering at people with the old-fashioned mindset that knowing what your code is doing is a fundamental facet of the job.",
    "parent": 44786162,
    "depth": 2
  },
  {
    "id": 44786288,
    "by": "apwell23",
    "timeISO": "2025-08-04T14:27:29.000Z",
    "textPlain": "why should we give even tiny bit F about our employer when they are using AI to do interviews?",
    "parent": 44786162,
    "depth": 2
  },
  {
    "id": 44786598,
    "by": "funkyfourier",
    "timeISO": "2025-08-04T14:49:34.000Z",
    "textPlain": "In my experience it is more like a quite skilled developer, but who is dead drunk.",
    "parent": 44786174,
    "depth": 2
  },
  {
    "id": 44786263,
    "by": "apwell23",
    "timeISO": "2025-08-04T14:25:42.000Z",
    "textPlain": "junior developer doesn't delete tests to \"make tests pass\"",
    "parent": 44786174,
    "depth": 2
  },
  {
    "id": 44792543,
    "by": "aDyslecticCrow",
    "timeISO": "2025-08-04T23:29:41.000Z",
    "textPlain": "But once you have carefully inspected 8 trees and thrown them away, you may need to start from sapling after-all.And what about when you need a Forrest? Seed from trees grow new trees. A whole Forrest cannot be inspected and discarded over and over.> but for small (yet critical / high-value) featuresThese are the features than need the human attention. These are the features that are the most fun for a human to make. These are the features that make the human improve the most. So it's the last ones i would leave to the AI.",
    "parent": 44791773,
    "depth": 2
  },
  {
    "id": 44787298,
    "by": "Uehreka",
    "timeISO": "2025-08-04T15:36:09.000Z",
    "textPlain": "“using AI tools to write code” is too clunky of a phrase. Unless someone proposes a sticky two/three-syllable verb (that people actually want to use, inb4 some sarcastic person suggests “poop-coding” or something) then people are going to fall back on vibe-coding because it’s quick to say, its definition will become blurred, and we’ll have no one to blame but ourselves.",
    "parent": 44785914,
    "depth": 2
  },
  {
    "id": 44796429,
    "by": "eddd-ddde",
    "timeISO": "2025-08-05T10:41:08.000Z",
    "textPlain": "Personally I love reading code and reviewing code. I always find it funny when people say that LLMs result in their job having less of what they like (coding) and more of what they hate (reviewing).",
    "parent": 44786225,
    "depth": 2
  },
  {
    "id": 44785995,
    "by": "Cheer2171",
    "timeISO": "2025-08-04T14:08:50.000Z",
    "textPlain": "Then enjoy your security holes, placeholder fake features, and miles of atrocious 'clever' hacks.",
    "parent": 44785915,
    "depth": 2
  },
  {
    "id": 44786082,
    "by": "chrisjj",
    "timeISO": "2025-08-04T14:14:57.000Z",
    "textPlain": "> I'll set those up, let the AI go, see if it works.Hmm. And maintenance?",
    "parent": 44785915,
    "depth": 2
  },
  {
    "id": 44786512,
    "by": "tempodox",
    "timeISO": "2025-08-04T14:43:43.000Z",
    "textPlain": "That would be safety-critical, so you had better not vibe code it.",
    "parent": 44785902,
    "depth": 2
  },
  {
    "id": 44786195,
    "by": "danielbln",
    "timeISO": "2025-08-04T14:21:18.000Z",
    "textPlain": "Soon, but not yet. At this point one should at least skim the code, and have a veritable zoo of validation and correction mechanisms in place (tests, LSP, complexity eval, completion eval, bot review, human review etc).That said, if you spend most of your time sussing out function signatures and micromanaging every little code decision the LLM makes, then that's time wasted imo and something that will become unacceptable before long.Builders will rejoice, artisan programmers maybe not so much.",
    "parent": 44786027,
    "depth": 2
  }
]