[
  {
    "id": 44858248,
    "by": "Waterluvian",
    "timeISO": "2025-08-10T21:03:20.000Z",
    "textPlain": "I often imagine state and events as the two impulses that drive an application. I like React a lot, but a common pitfall is that it is 95% focused on state, and so you get odd cases where you end up trying to encode events as state.You’ll see this anywhere you see a usePrevious-like hook that you then use to determine if something changed and act on it (eg. I hold state that a robot is offline, but I want to do something special when a robot goes offline). This is inferring an event from state.I’ve had luck adding an event bus as a core driver of a complex react application for events I don’t want to track as state. But it always feels that it’s a bit in conflict with the state-driven nature of the application.",
    "parent": 44858009,
    "depth": 1
  },
  {
    "id": 44858010,
    "by": "aanthonymax",
    "timeISO": "2025-08-10T20:22:24.000Z",
    "textPlain": "Event capturing and bubbling and much more",
    "parent": 44858009,
    "depth": 1
  },
  {
    "id": 44858025,
    "by": "cranberryturkey",
    "timeISO": "2025-08-10T20:24:47.000Z",
    "textPlain": "MDN is the best.",
    "parent": 44858010,
    "depth": 2
  }
]