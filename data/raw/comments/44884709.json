[
  {
    "id": 44887365,
    "by": "csdreamer7",
    "timeISO": "2025-08-13T11:57:45.000Z",
    "textPlain": "This means their servers are very old ones that do not support x86-64-v2. Intel Core 2 Duo days?https://developers.redhat.com/blog/2021/01/05/building-red-h...Think of how much faster their servers would be with one of those Epyc consumer cpus.I was about to ask people to donate, but they have $80k in their coffers. I realize their budget is only $17,000 a year, but I am curious why they haven't spent $2-3k on one of those Zen4 or Zen5 matx consumer Epyc servers as they are around under $2k under budget. If they have a fleet of these old servers I imagine a Zen5 one can replace at least a few of them and consume far less power and space.https://opencollective.com/f-droid#category-BUDGETNot sure if this includes their Librapay donations either:https://liberapay.com/F-Droid-Data/donate",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44886143,
    "by": "ivanjermakov",
    "timeISO": "2025-08-13T08:59:33.000Z",
    "textPlain": "Why not recompile aapt2 to correct target? It seems to be source available.https://android.googlesource.com/platform/frameworks/base/+/...",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44887735,
    "by": "nativeforks",
    "timeISO": "2025-08-13T12:41:02.000Z",
    "textPlain": "There are even some \"Unknown problem\" on IzzyOnDroid repo for app publishing, even ensuring reproducible build, izzy says >>Not necessarily \"your fault\" – baseline often has such issues: https://github.com/CompassMB/MBCompass/issues/90Seems like he is talking about the developer being responsible for that also!",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44884865,
    "by": "benrutter",
    "timeISO": "2025-08-13T05:19:23.000Z",
    "textPlain": "This is pretty concerning, especially as FDroid is by far the largest non-google android store at the moment, something that I feel is really needed, regardless of your feelings about google.Does anyone know of plans to resolve this? Will FDroid update their servers? Are google looking into rolling back the requirement? (this last one sounds unlikely)",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44885476,
    "by": "karteum",
    "timeISO": "2025-08-13T07:11:24.000Z",
    "textPlain": "I don't fully understand: aren't gradle and aapt2 open-source ?If you want to build buildroot or openwrt, the first thing it will do is compiling your own toolchain (rather than reusing the one from your distro) so that it can lead to predictable results. I would have the same rationale for f-droid : why not compile the whole toolchain from source rather than using a binary gradle/aapt2 that uses unsupported instructions?",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44884904,
    "by": "mjevans",
    "timeISO": "2025-08-13T05:24:43.000Z",
    "textPlain": "https://en.wikipedia.org/wiki/Streaming_SIMD_Extensions#Late...Even my last, crazy long in the tooth, desktop supported this and it lived to almost 10 years old before being replaced.However at the same time, not even offering a fallback path in non-assembly?",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44885007,
    "by": "jchw",
    "timeISO": "2025-08-13T05:45:06.000Z",
    "textPlain": "Apparently it was fixed upstream by Google?https://gitlab.com/fdroid/admin/-/issues/593#note_2681207153Not sure how long it will take to get resolved but that thread seems reassuring even if there isn't a direct source that it was fixed.",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44887084,
    "by": "tetris11",
    "timeISO": "2025-08-13T11:21:15.000Z",
    "textPlain": "I'm a bit lost in this thread, but I've written up what I know for other dummies like meAapt2 is an x86_64 standalone binary used to build android APKs for various CPU targetsPrevious versions of it used a simpler instruction set, but the new version requires an extra SIMD instruction SSE4. A lot of CPUs after 2008 support this, but not F-droid's current server farm?",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44885181,
    "by": "micw",
    "timeISO": "2025-08-13T06:19:36.000Z",
    "textPlain": "As far as I can see, sse4.1 has been introduced in CPUs in 2011. That's more than 10 years ago. I wonder why such old servers are still in use. I'd assume that a modern CPU would do the same amount of work with a fraction of energy so that it does not even make economical sense to run such outdated hardware.Does anyone know the numbers of build servers and the specs?",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44885138,
    "by": "yjftsjthsd-h",
    "timeISO": "2025-08-13T06:13:50.000Z",
    "textPlain": "> Google’s new aapt2 binary in AGP 8.12.0Given F-Droid's emphasis on isolating and protecting their build environment, I'm kind of surprised that they're just using upstream binaries and not building from source.",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44886460,
    "by": "yyyk",
    "timeISO": "2025-08-13T09:49:27.000Z",
    "textPlain": "Their servers are so old, even an entirely different architecture emulating x86_64 would still see a performance increase... So there's no OSS argument here - they could even buy a Talos, have no closed firmware, and still see a performance increase with emulation. If they don't care about the firmware, there are plenty of very cheap x86 options which are still more modern.",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44884781,
    "by": "nativeforks",
    "timeISO": "2025-08-13T05:01:18.000Z",
    "textPlain": "References:F-Droid admin issue: https://gitlab.com/fdroid/admin/-/issues/593Catima example: https://github.com/CatimaLoyalty/Android/issues/2608MBCompass case: https://github.com/CompassMB/MBCompass/issues/88",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44887579,
    "by": "CommenterPerson",
    "timeISO": "2025-08-13T12:24:36.000Z",
    "textPlain": "Non-hacker here. The title says \"modern\". I don't need modern, have a 10 year old phone, can I still get the occasional simple app from F-Droid?I upped my (small) monthly contribution. Hope more people contribute, and also work to build public support.Also, for developers .. please include old fashioned credit cards as a payment method. I'd like to contribute but don't want to sign up for yet another payment method.",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44885018,
    "by": "roywashere",
    "timeISO": "2025-08-13T05:47:37.000Z",
    "textPlain": "This is sort of like a bug I hit last year when the mysql docker container suddenly started requiring x86-64-v2 after a patch level upgrade and failed to start: https://github.com/docker-library/mysql/issues/1055",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44884889,
    "by": "wtallis",
    "timeISO": "2025-08-13T05:22:22.000Z",
    "textPlain": "It seems quite implausible that F-Droid is actually running on hardware that predates those instruction set extensions. They're seeing wider adoption by default these days precisely because hardware which doesn't support them is getting very rare, especially in servers still in production use. Are you sure this isn't simply a matter of F-Droid using VMs that are configured to not expose those instructions as supported?",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44885993,
    "by": "edgan",
    "timeISO": "2025-08-13T08:38:28.000Z",
    "textPlain": "That F-Droid even requires to do the build is one of the reasons I created Discoverium.https://github.com/cygnusx-1-org/Discoverium/",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44887629,
    "by": "andix",
    "timeISO": "2025-08-13T12:28:48.000Z",
    "textPlain": "Do I get it correctly, that they run their build infrastructure on at least 15 year old hardware?",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44885022,
    "by": "userbinator",
    "timeISO": "2025-08-13T05:48:13.000Z",
    "textPlain": "Fortunately the source code is available:https://android.googlesource.com/platform/frameworks/base/+/...If I had the time, I'd try to compile a binary of it that will run on Win95 just to give my fuckings to the planned obsolescence crowd.",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44886468,
    "by": "Arech",
    "timeISO": "2025-08-13T09:50:35.000Z",
    "textPlain": "This is super annoying how SW vendors forcefully deprecate good enough hardware.Genuinely hate that, as Mozilla has deprived me from Firefox's translation feature because of that.",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44884925,
    "by": "exabrial",
    "timeISO": "2025-08-13T05:29:19.000Z",
    "textPlain": "Man, Android could have been way cooler if it actually used real virtual machines, or at least the JVMs.",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44884847,
    "by": "trenchpilgrim",
    "timeISO": "2025-08-13T05:17:05.000Z",
    "textPlain": "I thought SSE 4.1 dates back to 2008 or so?",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44885070,
    "by": "wpm",
    "timeISO": "2025-08-13T05:59:19.000Z",
    "textPlain": "I’ve got an old Ivy Bridge-EP Dell workstation they can borrow goddamn SSE4.1 is nearly old enough to drink.",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44884926,
    "by": "o11c",
    "timeISO": "2025-08-13T05:29:49.000Z",
    "textPlain": "Note: the underlying blame here fundamentally belongs to whoever built AGP / Gradle with non-universal flags, then distributed it.It's fine to ship binaries with hard-coded cpu flag requirements if you control the universe, but otherwise not, especially if you are in an ecosystem where you make it hard for users to rebuild everything from source.",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44884959,
    "by": "nicman23",
    "timeISO": "2025-08-13T05:37:04.000Z",
    "textPlain": "wtf they cannot be still running opterons. it was to be that they are using qemu with g3 as a cpu profile.. right?",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44886284,
    "by": "fancythat",
    "timeISO": "2025-08-13T09:22:22.000Z",
    "textPlain": "I don't know how much servers are they using or server specs besides ancient Opterons, but how is this even an issue in 2025?On Hetnzer (not affiliated), at this moment, i7-8700 (AVX2 supported) with 128 GB RAM, 2x1 TB SSD and 1 Gbit uplink costs 42.48 eur per month, VAT included, in their server auction section.What are we missing here, besides that build farm was left to decay?",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44884939,
    "by": "kijin",
    "timeISO": "2025-08-13T05:32:34.000Z",
    "textPlain": "Requiring (supposedly) universally available CPU instructions is one thing. Starting to require it in a minor version update (8.11.1 -> 8.12.0) is a whole different thing. What the heck happened to semantic versioning? We can't even trust patch updates anymore these days. The version numbers might as well be git commit IDs.",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44884973,
    "by": "shmerl",
    "timeISO": "2025-08-13T05:39:36.000Z",
    "textPlain": "Can't cross compilation help for that? The CPU compiling doesn't need to match the target.",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44885430,
    "by": "hulitu",
    "timeISO": "2025-08-13T07:04:21.000Z",
    "textPlain": "> The root cause: Google’s new aapt2 binary in AGP 8.12.0 started requiring CPU instructions (SSE4.1, SSSE3) that F-Droid’s build farm hardware doesn’t support.Very intelligent move from Google. Now you can't compile \"Hello World\" without SSE4.1, SSSE3. /sAre there any X86 tablets with Android ?",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44884891,
    "by": "do_not_redeem",
    "timeISO": "2025-08-13T05:22:37.000Z",
    "textPlain": "Encourage your users to use Obtainium instead. Cut out the middleman.https://github.com/ImranR98/Obtainium",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44885539,
    "by": "42lux",
    "timeISO": "2025-08-13T07:21:50.000Z",
    "textPlain": ">> This has led to multiple “maintenance” versions in a short time, confusing users and wasting developer time, just to work around infrastructure issues outside the developer’s control.What an entitled conclusion.",
    "parent": 44884709,
    "depth": 1
  },
  {
    "id": 44887665,
    "by": "FirmwareBurner",
    "timeISO": "2025-08-13T12:33:31.000Z",
    "textPlain": ">they have $80k in their coffers  but I am curious why they haven't spent $2-3k on one of those Zen4 or Zen5 matx consumer Epyc serversI would also like to know this.",
    "parent": 44887365,
    "depth": 2
  },
  {
    "id": 44886875,
    "by": "munchlax",
    "timeISO": "2025-08-13T10:52:43.000Z",
    "textPlain": "Have you tried building AOSP from available sources?Binaries everywhere. Tried to rebuild some of them with the available sources and noped the f out because that breaks the build so bad it's ridiculous.",
    "parent": 44886143,
    "depth": 2
  },
  {
    "id": 44884902,
    "by": "dannyw",
    "timeISO": "2025-08-13T05:24:21.000Z",
    "textPlain": "I agree it’s a bit concerning but please keep in mind F-Droid is a volunteer-run community project. Especially with some EU countries moving to open source software, it would be nice to see some public funding for projects like F-Droid.",
    "parent": 44884865,
    "depth": 2
  },
  {
    "id": 44885039,
    "by": "happosai",
    "timeISO": "2025-08-13T05:54:02.000Z",
    "textPlain": "Maybe if f-droid is important to you, donate, so they can buy newer build server?",
    "parent": 44884865,
    "depth": 2
  },
  {
    "id": 44884943,
    "by": "Jyaif",
    "timeISO": "2025-08-13T05:33:23.000Z",
    "textPlain": "> FDroid is by far the largest non-google android store at the momentNot even sure it's in the top 10",
    "parent": 44884865,
    "depth": 2
  },
  {
    "id": 44884905,
    "by": "charcircuit",
    "timeISO": "2025-08-13T05:24:51.000Z",
    "textPlain": ">FDroid is by far the largest non-google android store at the momentSamsung Galaxy Store is much much bigger.",
    "parent": 44884865,
    "depth": 2
  },
  {
    "id": 44886275,
    "by": "a2128",
    "timeISO": "2025-08-13T09:20:21.000Z",
    "textPlain": "SDK binaries provided by Google are still used, see https://forum.f-droid.org/t/call-for-help-making-free-softwa...",
    "parent": 44885476,
    "depth": 2
  },
  {
    "id": 44884948,
    "by": "wtallis",
    "timeISO": "2025-08-13T05:34:19.000Z",
    "textPlain": "> However at the same time, not even offering a fallback path in non-assembly?There's probably not any hand-written assembly at issue here, just a compiler told to target x86_64-v2. Among others, RHEL 9 and derivatives were built with such options. (RHEL 10 bumped up the minimum spec again to x86_64-v3, allowing use of AVX.)",
    "parent": 44884904,
    "depth": 2
  },
  {
    "id": 44886215,
    "by": "CJefferson",
    "timeISO": "2025-08-13T09:11:06.000Z",
    "textPlain": "The problem with offering fallbacks is testing -- there isn't any reasonable hardware which you could use, because as you say it's all very old and slow.",
    "parent": 44884904,
    "depth": 2
  },
  {
    "id": 44885099,
    "by": "vocx2tx",
    "timeISO": "2025-08-13T06:05:59.000Z",
    "textPlain": "Looking at the issue their builders seem to be Opterons G3 (K10?)[0][0] https://en.wikipedia.org/wiki/AMD_10h",
    "parent": 44884904,
    "depth": 2
  },
  {
    "id": 44887475,
    "by": "pestatije",
    "timeISO": "2025-08-13T12:12:47.000Z",
    "textPlain": "I'm sure theyll appreciate your old desktop donation",
    "parent": 44884904,
    "depth": 2
  },
  {
    "id": 44886387,
    "by": "AnssiH",
    "timeISO": "2025-08-13T09:39:57.000Z",
    "textPlain": "It is not fixed.In the thread you linked to people are confusing a typo correction (\"mas fixed\" => \"was fixed\") as a claim about this new issue being fixed.The one that was fixed is this similar old issue from years ago: https://issuetracker.google.com/issues/172048751",
    "parent": 44885007,
    "depth": 2
  },
  {
    "id": 44885016,
    "by": "nativeforks",
    "timeISO": "2025-08-13T05:47:06.000Z",
    "textPlain": "Still haven't. Currently, most of the devs aren't aware of this underlying issue!",
    "parent": 44885007,
    "depth": 2
  },
  {
    "id": 44887208,
    "by": "its-summertime",
    "timeISO": "2025-08-13T11:37:23.000Z",
    "textPlain": "> Our machines run older server grade CPUsSo a bit of both of older hardware, and not-matched-with-consumer-featureset hardware. I'd imagine some server hardware vendors supported SSE4 way earlier than most, and some probably supported it way later than most too.",
    "parent": 44887084,
    "depth": 2
  },
  {
    "id": 44886750,
    "by": "eadmund",
    "timeISO": "2025-08-13T10:35:47.000Z",
    "textPlain": "> I'd assume that a modern CPU would do the same amount of work with a fraction of energy so that it does not even make economical sense to run such outdated hardware.There are 8,760 hours in a non-leap year.  Electricity in the U.S. averages 12.53 cents per kilowatt hour[1].  A really power-hungry CPU running full-bore at 500 W for a year would thus use about $550 of electricity.  Even if power consumption dropped by half, that’s only about 10% of the cost of a new computer, so the payoff date of an upgrade is ten years in the future (ignoring the cost of performing the upgrade, which is non-negligible — as is the risk).And of course buying a new computer is a capital expense, while paying for electricity is an operating expense.1: https://www.eia.gov/electricity/monthly/epm_table_grapher.ph...",
    "parent": 44885181,
    "depth": 2
  },
  {
    "id": 44885536,
    "by": "adrian_b",
    "timeISO": "2025-08-13T07:21:09.000Z",
    "textPlain": "It has been introduced in Intel Penryn, in November 2007.However the AMD CPUs did not implement it until Bulldozer, in mid 2011.While they lacked the many additional instructions provided by Bulldozer, also including AVX and FMA, for many applications the older Opteron CPUs were significantly faster than the Bulldozer-based CPUs, so there were few incentives for upgrading them, before the launch of AMD Epyc in mid 2017.SSE 4.1 is a cut point in supporting old CPUs for many software packages, because older CPUs have a very high overhead for divergent computations (e.g. with if ... else ...) inside loops that are parallelized with SIMD instructions.",
    "parent": 44885181,
    "depth": 2
  },
  {
    "id": 44885380,
    "by": "cjaackie",
    "timeISO": "2025-08-13T06:57:15.000Z",
    "textPlain": "I haven’t seen the real answer that I suspect here - the build servers are that one dual socket AMD board which runs open firmware and has no ME/PSP .",
    "parent": 44885181,
    "depth": 2
  },
  {
    "id": 44886189,
    "by": "ffaser5gxlsll",
    "timeISO": "2025-08-13T09:08:19.000Z",
    "textPlain": "On the server side, probably not, but I'd like to point out that old hardware is not uncommon, and it's going to be more and more likely as time passes especially in the desktop space.I was hit by this scenario in the 2000s with an old desktop pc I had, also in the 10ys range, I was using just for boring stuff and random browsing, which was old, but perfectly adequate for the purpose. With time programs got rebuilt with some version of SSE it didn't support. When even firefox switched to the new instruction set, I had to essentially trash a perfectly working desktop pc as it became useless for the purpose.",
    "parent": 44885181,
    "depth": 2
  },
  {
    "id": 44887473,
    "by": "Pyrodogg",
    "timeISO": "2025-08-13T12:12:40.000Z",
    "textPlain": "A few months ago Adobe finally updated Lightroom Classic to require these processor extensions. To squeeze all of the matrix mults it can for AI features also in CPU mode.It's amazing how long of a run top end hardware from ~2011 has had (just missed the cutoff by a few months). It's taken this long for stuff to really require these features.",
    "parent": 44885181,
    "depth": 2
  },
  {
    "id": 44885308,
    "by": "LukeShu",
    "timeISO": "2025-08-13T06:42:53.000Z",
    "textPlain": "I was going to say that I assume that the reason for such old CPUs is the ability to use Canoeboot/GNU Boot.  But you absolutely can put an SSE4.2 CPU in a KGPE-D16 motherboard.  So IDK.",
    "parent": 44885181,
    "depth": 2
  }
]