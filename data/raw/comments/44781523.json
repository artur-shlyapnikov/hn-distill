[
  {
    "id": 44782247,
    "by": "johnfn",
    "timeISO": "2025-08-04T04:58:44.000Z",
    "textPlain": "Sometimes at work I can't figure out some TS type and start thinking it's impossible. Then I remember that repos like this exist, and if some guy really managed to parse Typescript types in Typescript, that my problem is peanuts compared to that.That usually motivates me to solve my problem.",
    "parent": 44781523,
    "depth": 1
  },
  {
    "id": 44782824,
    "by": "drej",
    "timeISO": "2025-08-04T07:03:51.000Z",
    "textPlain": "For those not familiar with this kind of computing challenges, I must link this wonderful video about TypeScript types running... DOOM. https://www.youtube.com/watch?v=0mCsluv5FXA",
    "parent": 44781523,
    "depth": 1
  },
  {
    "id": 44782901,
    "by": "mpoteat",
    "timeISO": "2025-08-04T07:20:47.000Z",
    "textPlain": "If folks are interested in this sort of thing, but want to play around with higher order building blocks, http://hkt.code.lol may be worth checking out.In addition to type-level analogues of your normal Lodash-esque functions, it includes a suite of type-level parser combinator utilities and is built on higher-kinded type abstractions.",
    "parent": 44781523,
    "depth": 1
  },
  {
    "id": 44782058,
    "by": "tmcanada",
    "timeISO": "2025-08-04T04:13:05.000Z",
    "textPlain": "How does it compare to TypeBox?https://github.com/sinclairzx81/typebox#syntax",
    "parent": 44781523,
    "depth": 1
  },
  {
    "id": 44783705,
    "by": "nottorp",
    "timeISO": "2025-08-04T09:45:53.000Z",
    "textPlain": "I thought we have C++ for meta-meta-meta-meta programming...Can you run your whole payroll app at compile time via TypeScript types too?",
    "parent": 44781523,
    "depth": 1
  },
  {
    "id": 44794533,
    "by": "ygritte",
    "timeISO": "2025-08-05T05:12:40.000Z",
    "textPlain": "Has Doom been implemented yet in TypeScript types?",
    "parent": 44781523,
    "depth": 1
  },
  {
    "id": 44784514,
    "by": "maxloh",
    "timeISO": "2025-08-04T11:46:22.000Z",
    "textPlain": "FYI, TypeScript's type system is turing-complete.https://github.com/Microsoft/TypeScript/issues/14833",
    "parent": 44781523,
    "depth": 1
  },
  {
    "id": 44783430,
    "by": "owebmaster",
    "timeISO": "2025-08-04T09:01:52.000Z",
    "textPlain": "Typescript looks more and more like a cult",
    "parent": 44781523,
    "depth": 1
  },
  {
    "id": 44782751,
    "by": "dvt",
    "timeISO": "2025-08-04T06:49:16.000Z",
    "textPlain": "(removed)",
    "parent": 44781523,
    "depth": 1
  },
  {
    "id": 44783625,
    "by": "valenterry",
    "timeISO": "2025-08-04T09:35:30.000Z",
    "textPlain": "<Sorry, wrong thread>",
    "parent": 44781523,
    "depth": 1
  },
  {
    "id": 44785139,
    "by": "phplovesong",
    "timeISO": "2025-08-04T12:55:09.000Z",
    "textPlain": "This is actually WHY i think typescript is going downhill. I feel the sweetspot was around 2.x (iirc) when things like this was not possible.Everytime i hear Ocaml has a complex type system i refer them to Typescript.",
    "parent": 44781523,
    "depth": 1
  }
]