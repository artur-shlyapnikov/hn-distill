[
  {
    "id": 44857043,
    "by": "Contortion",
    "timeISO": "2025-08-10T18:07:17.000Z",
    "textPlain": "Microsoft documentation is a nightmare, it doesn't surprise me there are vulnerabilities.I recently built an SSO login using Entra ID (which was thankfully single-tenant) and I basically had to keep randomly stabbing in the dark until I got it to work with the correct scopes and extra fields returned with the access token.Trying to search for any kind of Getting started guide just took me to child pages several levels deep full of incomprehensible Microsoft jargon and hyperlinks to helpful-sounding but ultimately similarly useless articles.",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44853635,
    "by": "Too",
    "timeISO": "2025-08-10T08:12:52.000Z",
    "textPlain": "Not surprising at all. The configuration and docs for Oauth2 on Entra is an absolute cluster-f. Evidently, it’s so confusing that not even Microsoft themselves can get it right.Their solution to this will be to add even more documentation, as if anyone had the stomach to read through the spaghetti that exist today.",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44851519,
    "by": "medhir",
    "timeISO": "2025-08-10T00:00:53.000Z",
    "textPlain": "ohhhh the gifts multi-tenant app authorization keeps giving!(laid off) Microsoft PM here that worked on the patch described as a result of the research from Wiz.One correction I’d like to suggest to the article: the guidance given is to check either the “iss” or “tid” claim when authorizing multi-tenant apps.The actual recommended guidance we provided is slightly more involved. There is a chance that when only validating the tenant, any service principal could be granted authorized access.You should always validate the subject in addition to validating the tenant for the token being authorized. One method for this would be to validate the token using a combined key (for example, tid+oid) or perform checks on both the tenant and subject before authorizing access. More info can be found here:https://learn.microsoft.com/en-us/entra/identity-platform/cl...",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44852564,
    "by": "beoberha",
    "timeISO": "2025-08-10T03:33:26.000Z",
    "textPlain": "Ignoring the ridiculous complexity of Entra and how easy it is to not realize you’re making a mistake with it (especially internal at Microsoft where there’s no delineation between all the internal tenants you need to support and 3P customer tenants), it’s really scary how people think an auth token is the only layer of security you need. These sites shouldn’t have ever been exposed to public internet (they’re not now). Network security is such an afterthought but it’s the best layer of defense you can have!",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44851391,
    "by": "muststopmyths",
    "timeISO": "2025-08-09T23:39:26.000Z",
    "textPlain": "Move to the cloud they said. It will be more secure then your intranet they said. Only fools pay for their own Ops team they said.I’m so old and dumb that I don’t even understand why an app for internal Microsoft use is even accesible from outside its network.",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44853363,
    "by": "bobbyraduloff",
    "timeISO": "2025-08-10T07:11:13.000Z",
    "textPlain": "$0 in rewards for RCE on the Windows build servers is crazy. I understand he didn’t find an actual zero-day, only a configuration issue, but still. Imagine the global havoc you can cause if you can pollute the build environment with backdoored DLLs…",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44854565,
    "by": "Keyframe",
    "timeISO": "2025-08-10T11:49:40.000Z",
    "textPlain": "It's Microsoft. I'm sure there are wonderful people there, but haven't we witnessed recently their master key leak, their engineers begging GPT in PRs to do stuff, their CEO boasting 'backend' engineers are going away.. I wouldn't rely on that company for anything, but I acknowledge a ton of people are not in that position. If they do stay however, it's malpractice.",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44853189,
    "by": "yyyk",
    "timeISO": "2025-08-10T06:27:05.000Z",
    "textPlain": "It's all very simple: Entra* (Azure AD or however you'd call it) should not be used for AuthZ. Entra AuthN is okayish, but forget about Entra AuthZ, do it all yourself. It's all very simple to avoid once you do AuthZ.* No idea why the rename happened. Does some manager in Microsoft have the plaque: \"Renomino, ergo sum.\"?",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44852939,
    "by": "moi2388",
    "timeISO": "2025-08-10T05:19:01.000Z",
    "textPlain": "That’s what you get. Entra ID doesn’t allow you to blacklist or whitelist specific tenants for multi tenant apps, which causes problems like this.Add the fact that MSAL doesn’t work for stuff like browser extensions, so people have to implement their own security solutions to interact with Entra ID and it’s not surprising there are so many issues.",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44855105,
    "by": "victor106",
    "timeISO": "2025-08-10T13:36:21.000Z",
    "textPlain": "Azure is a true cluster F.Okta (the other elephant in the room) has its own issues but at least it has decent documentation and even though it’s more expensive I think it’s worth paying that price just to keep security in a separate domain than co-mingle it with other Azure services.",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44852020,
    "by": "9cb14c1ec0",
    "timeISO": "2025-08-10T01:26:53.000Z",
    "textPlain": "OAuth is frequently marketed as \"more secure\".  But implementations often confuse authentication with authorization, resulting in problems like this.",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44857153,
    "by": "denysvitali",
    "timeISO": "2025-08-10T18:23:36.000Z",
    "textPlain": "0$ for all this? Microsoft security is a joke.",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44853861,
    "by": "rootsudo",
    "timeISO": "2025-08-10T09:08:35.000Z",
    "textPlain": "This is still very effective for other organizations, not just microsoft. Of course they won't pay a bounty but any org that uses Micorosft 365/Office 365, Entrea ID which was Azure Active Directory can be polled and abused.Was not new news, AFAIK from the article they just patched the microsoft tools but they won't be pushing it tenant wide for all orgs.",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44854351,
    "by": "firesteelrain",
    "timeISO": "2025-08-10T10:58:57.000Z",
    "textPlain": "This dumb stuff is why even Microsoft should use a common, secured and vetted pipeline for service principals so this does not happen.",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44853702,
    "by": "fock",
    "timeISO": "2025-08-10T08:27:09.000Z",
    "textPlain": "Does this have a CVE or something? I have the weird feeling the cloud initiative here won't notice this ever otherwise...",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44852915,
    "by": "janci",
    "timeISO": "2025-08-10T05:11:31.000Z",
    "textPlain": "Ohh, that's probably why our integration suddenly stopped working for single-tenant app registrations right before release. We were using the /common endpoint for everyone. That is disallowed now.",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44851537,
    "by": "therein",
    "timeISO": "2025-08-10T00:04:06.000Z",
    "textPlain": "Did he really get no bounties out of this? The guy found a way into build boxes retail Windows is built on, potentially found the private key that would be used to generate license keys, likely could have dived in a little bit more after getting RCE on the build box to exfil the latest Windows 11 source code. He even found a way to issue rewards. They still gave him nothing?",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44851285,
    "by": "gjsman-1000",
    "timeISO": "2025-08-09T23:20:02.000Z",
    "textPlain": "Now remember these dimwits are bragging that 30% of their code is now written by AI; and have mandated Microsoft Accounts, set up OneDrive backup by default, and are providing infrastructure to OpenAI who is currently required to preserve even deleted chats. They also own LinkedIn.This totally has no foreseeable potential consequences. It would be a real shame if some foreign hostile government with nuclear weapons managed to connect MS Account, LinkedIn Profile, and OpenAI accounts together by shared emails and phone numbers. Is it really worth starting a war for the crime of depantsing the nation?",
    "parent": 44850681,
    "depth": 1
  },
  {
    "id": 44860093,
    "by": "seemaze",
    "timeISO": "2025-08-11T01:48:10.000Z",
    "textPlain": "I find this consistent across the Microsoft ecosystem. I thought maybe Copilot would have an edge, but it’s just as lost as us (which i guess makes sense..)",
    "parent": 44857043,
    "depth": 2
  },
  {
    "id": 44853804,
    "by": "trallnag",
    "timeISO": "2025-08-10T08:51:50.000Z",
    "textPlain": "Ran into this just a few weeks ago. According to the documentation it should be impossible to perform the authorization code flow with a scope that targets multiple resource servers. But if I request \"openid $clientid/.default\" it works. Kinda. At the end of the flow I get back an ID token and and access token. The ID token indicates that Azure has acknowledged the OIDC scope. But when I check the access token I can see that the scope has been adjusted to not include \"openid\". And indeed I'm unable to call Microsoft Graph which serves as the UserInfo endpoint. I was unable to find any good explanation for this behavior.",
    "parent": 44853635,
    "depth": 2
  },
  {
    "id": 44851623,
    "by": "reactordev",
    "timeISO": "2025-08-10T00:17:52.000Z",
    "textPlain": "Assume every token is forged. Secure by default. Even if it wastes cpu, validate each and every field. Signatures only work if verified. While you're at it, validate it against your identity database as well. Double check, triple check if you must. This is what I taught my devs.Tenant, User, Group, Resource - validate it all before allowing it through.",
    "parent": 44851519,
    "depth": 2
  },
  {
    "id": 44852382,
    "by": "JB_Dev",
    "timeISO": "2025-08-10T02:43:15.000Z",
    "textPlain": "You are 100% correct but really these engineers should go read the guidance - it’s pretty clear what is required: https://learn.microsoft.com/en-us/entra/identity-platform/cl...",
    "parent": 44851519,
    "depth": 2
  },
  {
    "id": 44855970,
    "by": "sidewndr46",
    "timeISO": "2025-08-10T15:47:06.000Z",
    "textPlain": "How is their \"guidance\" on what to check? Shouldn't it be a yes / no type thing? I've never worked on a system that had some checkbox for permissions that was labelled something like \"maybe users in this group should be able to read everyone's personal notes\".",
    "parent": 44851519,
    "depth": 2
  },
  {
    "id": 44855327,
    "by": "xtajv",
    "timeISO": "2025-08-10T14:14:16.000Z",
    "textPlain": "> Network security is such an afterthought but it’s the best layer of defense you can have!I mean, it's an additional layer.Defense-in-depth is about having multiple.",
    "parent": 44852564,
    "depth": 2
  },
  {
    "id": 44851408,
    "by": "jameskilton",
    "timeISO": "2025-08-09T23:42:09.000Z",
    "textPlain": "The last decade has seen an increase push in what Google started calling \"Zero Trust\"[0] and dropping VPNs entirely. The issue being that once someone got into a VPN it was much, much harder to prevent them from accessing important data.So everything \"internal\" is now also external and required to have its own layer of permissions and the like, making it much harder for, e.g. the article, to use one exploit to access another service.[0] https://cloud.google.com/learn/what-is-zero-trust",
    "parent": 44851391,
    "depth": 2
  },
  {
    "id": 44856425,
    "by": "securesaml",
    "timeISO": "2025-08-10T16:50:33.000Z",
    "textPlain": "For me, I don't think that the application is public exposed is really the problem (i.e. not in intranet).I think the real problem is that these applications (Entra ID) are multi-tenant, rather than a dedicated single-tenant instance.Here, we have critical identity information that is being stored and shared in the same database with other tenants (malicious attackers). This makes multi-tenancy violations common.\nEven if Entra ID had a robust mechanism to perform tenancy checks i.e. object belongs to some tenant, there are still vulnerabilities.\nFor example, as you saw in the blog post, multi-tenant requests (requests that span >= 2 tenants), are fundamentally difficult to authorize. A single mistake, can lead to complete compromise.Compare this to a single tenant app. First, the attacker would need to be authenticated as an user within your tenant. This makes pre-auth attacks more difficult.",
    "parent": 44851391,
    "depth": 2
  },
  {
    "id": 44852882,
    "by": "motorest",
    "timeISO": "2025-08-10T05:05:06.000Z",
    "textPlain": "> Move to the cloud they said. It will be more secure then your intranet they said. Only fools pay for their own Ops team they said.It seems that the fundamental issue surfaced in the blog post is that developers who work on authorizarion in resource servers are failing to check basic claims in tokens such as the issuer, the audience, and subject.If your developers are behind this gross oversight, do you honestly expect an intranet to make a difference?Listen, the underlying issue is not cloud vs self-hosted. The underlying issue is that security is hard and in general there is no feedback loop except security incidents. Placing your apps in a intranet, or VPN, does nothing to mitigate this issue.",
    "parent": 44851391,
    "depth": 2
  },
  {
    "id": 44855284,
    "by": "xtajv",
    "timeISO": "2025-08-10T14:07:26.000Z",
    "textPlain": "I guess the term \"defense in depth\" has fallen out of fashion?",
    "parent": 44851391,
    "depth": 2
  },
  {
    "id": 44852878,
    "by": "tomjen3",
    "timeISO": "2025-08-10T05:03:46.000Z",
    "textPlain": "That is probably still good advice for most companies. Joe's roof fixing business may be the best roof fixing business in 3 states, but would you want them to run their own server for their website, email, and booking?Anyone who is on this forum is capable of building their own stuff, and running their own server, but that is not most people.",
    "parent": 44851391,
    "depth": 2
  },
  {
    "id": 44855199,
    "by": "netruk44",
    "timeISO": "2025-08-10T13:50:52.000Z",
    "textPlain": "I was a windows build engineer at Microsoft. I am unfamiliar with this specific UI for managing build tools (I think it may have been added after I left), however I would be surprised if it was actually RCE-capable.I notice that it requires the tool to be pulled from NuGet. While it looks like you could enter any package and NuGet source, I would be very surprised if there wasn’t a locked down whitelist of allowed sources (limited to internal Microsoft NuGet feeds).Locking down NuGet packages was one of the primary things we (the Windows Engineering System team) were heavily focusing on when I left years ago. We were explicitly prevented from using public NuGet packages at all. We had to repackage them and upload them to the internal source to be used.",
    "parent": 44853363,
    "depth": 2
  },
  {
    "id": 44855246,
    "by": "moulick",
    "timeISO": "2025-08-10T14:00:32.000Z",
    "textPlain": "> engineers begging GPT in PRs to do stuffThis about donet/runtime?",
    "parent": 44854565,
    "depth": 2
  },
  {
    "id": 44854132,
    "by": "aprilnya",
    "timeISO": "2025-08-10T10:15:24.000Z",
    "textPlain": "IMO “Azure AD” implies it is literally just AD hosted in Azure, when it’s become much more than that",
    "parent": 44853189,
    "depth": 2
  },
  {
    "id": 44857940,
    "by": "will4274",
    "timeISO": "2025-08-10T20:14:55.000Z",
    "textPlain": "It's ok to use Entra for AuthZ. Just click the box that says \"Require users to be assigned to this application\" and assign them [1]. However - that's really the only AuthZ feature Entra has. If you don't enable AuthZ, you should not expect Entra to just magically do AuthZ for you.Edit: I would add - simple allow/deny authz is only relevant for the very simplest of apps (where all users have the same permissions). For any complex application, users will have different levels of access, which usually requires the application to do AuthZ.[1] https://learn.microsoft.com/en-us/entra/identity/enterprise-...",
    "parent": 44853189,
    "depth": 2
  },
  {
    "id": 44854921,
    "by": "ExoticPearTree",
    "timeISO": "2025-08-10T13:04:44.000Z",
    "textPlain": "> Entra ID doesn’t allow you to blacklist or whitelist specific tenants for multi tenant apps.This one very annoying \"feature\" where I could say this app is available for the following tenants. No, only \"my tenant\" or \"all tenants in Azure\".One workaround I use is to set up apps with \"only this tenant\" and invite users from other tenants into my tenant. The other approach is to say \"all tenants\" and then use a group to enforce who can actually use the app.I don't know if there are any reasons behind this limitation or just an oversight or no client big enough asked for this feature.",
    "parent": 44852939,
    "depth": 2
  },
  {
    "id": 44852073,
    "by": "koakuma-chan",
    "timeISO": "2025-08-10T01:37:32.000Z",
    "textPlain": "I just say auth. You decide which one I mean.",
    "parent": 44852020,
    "depth": 2
  },
  {
    "id": 44852303,
    "by": "excalibur",
    "timeISO": "2025-08-10T02:23:04.000Z",
    "textPlain": "If their rules say this doesn't deserve a bounty their bounty program is a sham.",
    "parent": 44851537,
    "depth": 2
  },
  {
    "id": 44853796,
    "by": "sofixa",
    "timeISO": "2025-08-10T08:49:24.000Z",
    "textPlain": "If Azure's horrific security track record (tens of exploits, often cross-tenant, often trivial) over the past few years doesn't give you pause, their joke of a bug bounty definitely should.Obviously nobody with power cares about security in Microsoft's Azure branch. Why does anyone trust continue trusting them? (I mean, I know that Azure is not something you buy by choice, you do because you got a good deal on it or were a Microsoft shop before, but still).",
    "parent": 44851537,
    "depth": 2
  },
  {
    "id": 44853228,
    "by": "indrora",
    "timeISO": "2025-08-10T06:35:32.000Z",
    "textPlain": "Having done two rounds at different Fortune 10s (one being Microsoft) I can tell you: This isn't AI, this is the result of years of \"make it work\" and duct tape.This is \"It'll be safe if we leave it on the intranet\" and then someone says \"Zero trust!\" and then all the sudden things that had authentication on the inside are also going through a new and different layer of authentication. A stack of totally reasonable expectations stack tolerance on tolerance, and just like the Sig Sauer P320, it has a habit of shooting you in the foot when you least expect it.",
    "parent": 44851285,
    "depth": 2
  },
  {
    "id": 44851567,
    "by": "jychang",
    "timeISO": "2025-08-10T00:09:06.000Z",
    "textPlain": "To be fair, I’m pretty sure the code here was written before modern AI was a thing, back when dinosaurs roamed the earth.",
    "parent": 44851285,
    "depth": 2
  },
  {
    "id": 44851418,
    "by": "inquirerGeneral",
    "timeISO": "2025-08-09T23:43:44.000Z",
    "textPlain": "[dead]",
    "parent": 44851285,
    "depth": 2
  }
]