[
  {
    "id": 44852903,
    "by": "svschannak",
    "timeISO": "2025-08-10T05:08:03.000Z",
    "textPlain": "Our process is fairly simple:1. 60 minutes interview with the CTO.2. At home coding challenge. Candidates can pick one from 2 coding challenges. But we try to keep them engaging and fun, but still complex in details. Sometimes people don’t want to invest this time. That’s acceptable, but in this case you have to show os some of your work from the past, so we can discuss this.3. Interview with 2 engineers from the team. We are doing coding challenges as a base for this interview. It’s just a way to get people talking with each other on technology and how they work.4. Make an offer or say no to the candidate. Everyone involved in this process from our side has a veto right. So if one person says no - it’s a No.5. Send contract to the candidate, if they accept the offer. This is the first time in the process where HR is involved. Everything else before was done by the Dev Team.I think this is the most important part, show respect by taking care of the process by yourself and communicating with the candidate.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44851713,
    "by": "joshuamoyers",
    "timeISO": "2025-08-10T00:33:39.000Z",
    "textPlain": "> companies often over-index on crystallized knowledge over fluid intelligence.another way to say this: focus on aptitude. in my hiring funnel, this is a core tenet. you need to be able to capture polyglots and systems thinkers. its still pretty hard to design a process that balances this all very well. combine that with an absolute glut of applicants and you have a very challenging problem.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44845843,
    "by": "roland35",
    "timeISO": "2025-08-09T11:59:22.000Z",
    "textPlain": "I don't mean to be harsh, but as an engineer you owe it to yourself to try and get better at interviewing.  Does it suck?  Yeah absolutely.  Is it an annoying process?  Definitely.  But even if you have an easy and stable job things can change quickly at any company.  You're only closing doors on yourself.If you get nervous, the main thing you can do is more interviews.  My personal anxiety peaks right before the start time, luckily my bathroom is next door to my office!  But after doing dozens of interviews I settle in once it gets rolling.If you hate leetcode, well just get good at it.  Yeah it is kinda dumb but it is straightforward to practice.  And there is a lot more to a leetcode interview than knowing tricks - you need to communicate well.Take homes?  Yeah they are time consuming.  If you really need a job do them, otherwise pass on the company!Overall as a candidate you really need to try and go one level up on selling yourself - not just why you are a great candidate (which you are of course!), but why you would succeed at this role in particular.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44845820,
    "by": "shahbaby",
    "timeISO": "2025-08-09T11:54:06.000Z",
    "textPlain": "As much as I dislike leetcode style interviews, if I fail one of those, I learn what I can and move on.Failing a take-home is an entirely different thing. It's a huge loss in time and mental energy.I've only done 3 of those in my career and only because the projects sounded interesting. 1 of those 3 resulted in a job offer which I can now confidently say in hindsight was the worst job in my career (...so far!).I'm now leaning towards just filtering out companies that do take-homes because it signals to me that they don't care about their candidate's time and how a company treats its candidates is usually a good indicator of how they treat their employees.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44846400,
    "by": "pxeger1",
    "timeISO": "2025-08-09T13:45:03.000Z",
    "textPlain": "> interviews should: be applicable. reflect the actual job dutiesNo, it doesn't matter that much what task the candidate is doing in the interview. It matters what the interviewer is looking at. I'm sure plenty of interviewers don't understand this, and I think this is often missed when people debate about Leetcode interviews - including in this article.> most interview questions have very little to do with day-to-day responsibilitiesYou're missing what the interview questions are. Yes, one part of the interview is \"here is a puzzle, can you solve it?\", but many of the other questions should be things like \"explain why this doesn't work\", \"why did you start with this approach?\" and \"are you sure that is the best name for that function?\"Leetcode interviews are perfectly \"applicable\", as long as the interviewer is using them as a convenient frame to see how you think, communicate, and write/read/edit code and isn't trying purely to assess your skill at quickly solving leetcode puzzles.> cannot distinguish a senior programmer from a marketer using chatGPTThis is empirically false, because companies haven't suddenly lost all their hiring signal since ChatGPT came out. But if a company has this problem, they suck at interviewing.(I admit the style of interviewing I'm describing has its own problems, and in particular doesn't address what I think is the biggest issue: the fact you're partly testing people's ability to (appear to) perform under acute pressure.)",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44850646,
    "by": "tomquirk",
    "timeISO": "2025-08-09T21:54:44.000Z",
    "textPlain": "Not sure if they're still doing it, but GitLab does the code review interview, and I too really liked it.Before the interview, you clone the repo and get the app running on your machine.For the first half of the interview, you review a pull request in real time. There's a mix of obvious and non-obvious callouts. And the second half, you actually implement your suggestions.Honestly the code review portion alone is a great indicator of a dev's experience and soft skills.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44846408,
    "by": "ozgung",
    "timeISO": "2025-08-09T13:46:46.000Z",
    "textPlain": "Everyone calls them Interviews but they are not really interviews. They are exams.Oral exams, live coding exams, system architecture exams, take-home exams, behavioral examinations, code review exams, extended essay writing exams, case study exams, sample work trials.You can't be a real professional if you have to take exams in every job change.In serious professions, people take exams early in their careers for being certified. Sometimes they take additional exams to renew their certificates. And that's all.They don't take exams from random people in random companies that know nothing about evaluating knowledge. They take official, standardized exams prepared by professional testers/educators.Engineering jobs can't be standardized. Engineering and required skills and knowledge is too broad for that.An interview is not an exam. It's a meeting. The interviewer asks questions to learn about the candidate. The interviewer may ask some questions to learn about the company and the position. That's all. That's the universal definition of a job interview. All the other things are additional tests and exams.Do they need to do those exams for better selection? Probably not. Their \"hiring process\"es are not backed by any science. Then why are they doing that? They have to filter somehow. If there are 1 to 100s ratio of candidates for each position, they need to filter hard. Exams are the standard method for ranking and filtering.But we are professional engineers, not students.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44845520,
    "by": "erehweb",
    "timeISO": "2025-08-09T10:58:02.000Z",
    "textPlain": "The OP thinks that candidates spending a lot of time on applications is OK, as long as the company shows respect by spending a lot of time themselves. I think this is mistaken - I care about how much time I have to spend, and am a lot less concerned about how much time the company takes.There's a trade-off: if a company spends more time / requires more effort on an interview process, they can get a better signal on the candidate's abilities, but then they'll lose out on candidates who are unwilling / unable to commit this time. This might just be a hard trade-off in recruiting.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44845455,
    "by": "0x264",
    "timeISO": "2025-08-09T10:41:14.000Z",
    "textPlain": "The situation is not going to improve as long as business stakeholders and engineering managers (some closer to MBAs than actual engineers) think of software engineers as construction workers. They think we are fungible, they don't understand the craft of programming etc, and have very short term mindsets. Took me a while but then I realised that I needed to interview my prospective employers as much as they were interviewing me, and to just ignore those not worth working for.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44852114,
    "by": "0x20cowboy",
    "timeISO": "2025-08-10T01:47:10.000Z",
    "textPlain": "It's crazy, I've been trying to hire an architect to build a house for me, but I don't trust them (they're all liars) so I asked them to draw up blueprints in front of me and describe everything they are doing in great detail. I need to understand what they are doing. This building is important and I don't want a bad hire. They should be able to do this in 10-15 minutes. If they knew what they were doing, this request wouldn't be an issue.Then I was trying to get someone to do my taxes. So I've been asking every applicant to do my taxes from last year so I can see if they really know what they are doing. I mean sure, they've done taxes for years, but these are my taxes. I've even tried giving them math puzzles around asset depreciation, but people just keep hanging up the phone.And then, I wanted to add a wing added to my house and I've been trying to get these entitled contractors to come build a shed in my backyard so I can see if they really know how to use nail guns. I've heard people are just big'ol lairs lately, and I need to see how they work. I mean, sure these guys have built many houses in the past, but we have high standards here and only hire A players.I've only been getting horrible candidates! No one is worth hiring! There is a huge shortage of qualified people.If only there was a way to fix this.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44850735,
    "by": "billy99k",
    "timeISO": "2025-08-09T22:05:07.000Z",
    "textPlain": "My best job (for the last decade) for a software engineering job was a 1 hour technical interview followed by a 1 hour interview with the director.It helped that it was 90 days contract to hire.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44851987,
    "by": "derivagral",
    "timeISO": "2025-08-10T01:20:36.000Z",
    "textPlain": "> this also loses you tasteI won't forget the in-person interview round where I coded a frontend visualization for a data graph (tracking global shipping), then fielded a post-work general interview round from the whole company (~10 ppl) about specifics and \"choices\" made during a rush to finish. I ended up not going due to comp, but they were acquired months later. Life is funny.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44851587,
    "by": "liampulles",
    "timeISO": "2025-08-10T00:11:52.000Z",
    "textPlain": "If I can get a person talking about tradeoffs - be it speaking to a past project, or a hypothetical I give them - then I think I can tell who the serious developers are fairly quickly.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44845826,
    "by": "donatj",
    "timeISO": "2025-08-09T11:55:57.000Z",
    "textPlain": "At my first employer circa 2005 we had a simple 1-2 hour interview and a 90 day probationary period. Respected people's time, gave everyone a fair chance to prove themselves. I don't know why it's not more common in the industry.Part of what lead to it I think is we hired largely straight out of college and doing a 9-hour interview with someone with little experience is a waste of time.It worked great. In my five years there we only had a couple people not make it past the probationary period.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44848583,
    "by": "vedmakk",
    "timeISO": "2025-08-09T17:54:57.000Z",
    "textPlain": "I agree with the article. Discussing previously created code and do code reviews live covers a lot of ground. Whereas live coding is just meaningless for the stated reasons.But a 9-hours interview process seems just too much... I think you will only ever know a candidates true fit once you start actually working together and 2-3 short sessions with someone is enough to get that go/no go feeling.You can't hire without taking risks.Where I live, you usually have a 3-months probation time in which both sides can quit within a 7 days period... so the risk is manageable.Just feel a candidates fit and then go for it... and adjust when necessary. Don't overthink it.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44845581,
    "by": "austin-cheney",
    "timeISO": "2025-08-09T11:10:14.000Z",
    "textPlain": "The primary problem with hiring is that developers are a single status with not performance benchmark. The solution is to segment need by capability.Let’s face the reality that most developers will never be able to write original software and just put text to screen using a tool or framework. Don’t call these people engineers. These people are the assembly line of software. Measure them according to desired patterns. They are copy/paste but smarter than data entry and understand some of the restrictions in place. Expectations are low and compatibility and replacement are the key business values.Next are the people who test software, the QA. We expect more from these people and then work them harder for less money at a lower level of reputation.Next are the people who evaluate software. These people are closer to engineers. These people include accessibility, security, and performance experts. These people are more like a combination of QA and senior developers. Evaluate these people on these criteria: written essay, technical knowledge, force them to measure things in real time and see how they perform.Next are the people who actually write software applications. Let’s call these people solution delivery. These people are similar to junior architects and actually build things. These people should be evaluated only on the basis of organizational capabilities above that of the engineers that measure things.Finally are the software owners. These people resemble a combination of project management and junior architects. They must have the experience to know how to build original software, like the junior architects, but also a planning vision to push though demands from competing stakeholders. There is busy savvy to this comes from a solid engineering planning vision plus superior communication skills most lesser software people never honed. Think of these people as senior principals with real authority. Evaluate these people on their delivery experience, using numbers,",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44851501,
    "by": "jbmsf",
    "timeISO": "2025-08-09T23:57:52.000Z",
    "textPlain": "Early in my career, most of the people I interviewed were not very good.Eventually, enough time passed that the talent pool grew considerably and most people are baseline competent.Consequently, I now find that respect and time efficiency matter a lot more.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44852675,
    "by": "flappyeagle",
    "timeISO": "2025-08-10T04:06:37.000Z",
    "textPlain": "The best interview process I’ve ever done is sitting down with the team for 3 days, crashing on the founders couch for the weekend and shipping codeThe worst ones were the leetcode interviews I couldn’t pass",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44845786,
    "by": "zdw",
    "timeISO": "2025-08-09T11:48:18.000Z",
    "textPlain": "Duplicate: https://news.ycombinator.com/item?id=44843256",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44845770,
    "by": "dijit",
    "timeISO": "2025-08-09T11:45:41.000Z",
    "textPlain": "I don't want to give away my secrets, because this has actually worked really well for me and I'm afraid that I'll lose my edge as an employer - however I have a very small neck of the woods and HN seems very US-centric so I think I'll be ok.What has worked for me, honestly, is being directly involved with my hiring pipeline and having conversations.It seems like common sense, but there's a lot of reasons not to do this and people will make good arguments to prevent it. \"What about bias\", \"your time is more important\" etc;However, bias is an unfortunate consequence of selecting for value fit anyway and I can't think of a more important task than selecting the members that will be the future of the company.I've had some positions that were open for a weekend where I got 400 applicants, and yes, it was daunting to go through and give each of them an honest shot, but you know: I had to do it. What's the alternative? I might miss a fantastic candidate because someone didn't understand what I actually need.Evaluating programmers and \"devops\" people is just insanely hard, technologies are mostly fungible. If you can write one C-like language you can learn the others in about a month, but what can't be taught is what your values are, if you think in a systemic way, if you're easy to work with and respect others.So, my solution is to have a conversation, challenge what they know, see how they react when challenged, see how they react when they reach the end of their knowledge and see what they're most proud of and if they get excited by it.No gotchas, no esoteric internal handshake, just: are you defensive? Are you curious? Are you passionate? Can you communicate effectively and are you intelligent.If you hit those, you can do anything.\"How do you even know who to interview?\"This is a hard question, for me there's not a lot of candidates that are physically located in my region, so those go through as long as they have something on the CV that looks relevant. For others it'",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44845567,
    "by": "Esophagus4",
    "timeISO": "2025-08-09T11:06:58.000Z",
    "textPlain": "> most interview questions have very little to do with day-to-day responsibilities. all good software engineers are generalist and live coding does not select for generalistsIf I had a dollar for every time I heard this (flawed) argument, I’d be rich and would no longer have to sell ads on my Hacker News comments. I’m going to get hate for this unpopular opinion but here we go.So often, “But Leetcode isn’t like REAL programming” is the siren song of the programmer who probably overestimates their coding skills and experience.Yes, I hate to say it - live coding is actually one of the best signals you can get on a candidate’s seniority and ability to program  a computer (and more importantly, their core computer science skills). A good interviewer is trained to know how to probe your CS knowledge during this, and will watch how you structure code, break down problems, debug, and think about testing. They will even ask you to make changes to see how coachable you are and what you might be like to work with. It’s not about inverting a binary tree while sharing your screen, it’s about showing me how you solve a problem, then translate what’s in your head to code.Take home exercises provide  little to no signal, and screen out people who have families (who wouldn’t bother with a 4 hour take home exercise after work). I don’t want to see how you Google, I want to see how you think.These candidates always want some version of, “But trust me, bro! Hire me: I’m a senior engineer, I don’t remember how to Leetcode! I’m good, I promise!” But what they won’t admit to themselves is that a good senior engineer is able to do all the things a junior can do PLUS all the things a senior can do.It’s not perfect, but I won’t hire anyone that can’t pass a live coding round.This comment brought to you by Poppi. Poppi: it’s soda for people who are silly enough to believe soda can be healthy.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44846193,
    "by": "paulcole",
    "timeISO": "2025-08-09T13:07:17.000Z",
    "textPlain": "> select for applicants who will be good employees for years to comeWhy would you do this given the expected average tenure is probably like 18 months to 2 years?",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44846333,
    "by": "globalnode",
    "timeISO": "2025-08-09T13:33:02.000Z",
    "textPlain": "So glad I changed industries after my first s/w job out of uni wanted 2 hrs unpaid overtime per day and the boss ran the office like he was lord of the manner, swearing and blowing up whenever it suited him. If I had the skills these people want for the price they're willing to pay I'd just start my own business and reap the rewards myself. Most people aren't worth working for. Perhaps the pool of employers is far larger in the US which makes it easier to shop around for a good one.",
    "parent": 44845251,
    "depth": 1
  },
  {
    "id": 44851916,
    "by": "jamboca",
    "timeISO": "2025-08-10T01:05:20.000Z",
    "textPlain": "i am a data engineer (2 yoe) who speaks multiple languages and thinks in systems. i am looking to switch jobs as the problems i work on at my job are not as interesting as i would hope. also i am underpaid. can you point me to your hiring funnel?",
    "parent": 44851713,
    "depth": 2
  },
  {
    "id": 44851512,
    "by": "tayo42",
    "timeISO": "2025-08-09T23:59:32.000Z",
    "textPlain": "It's hard to get better when you don't get feedback",
    "parent": 44845843,
    "depth": 2
  },
  {
    "id": 44846277,
    "by": "bryanrasmussen",
    "timeISO": "2025-08-09T13:24:55.000Z",
    "textPlain": "I don't get it, every job I have interviewed for since 2013 has had a take home. A couple of them waived it in my case but otherwise they all had take homes. Where are these jobs where people don't get given take homes?",
    "parent": 44845820,
    "depth": 2
  },
  {
    "id": 44846315,
    "by": "apwell23",
    "timeISO": "2025-08-09T13:31:19.000Z",
    "textPlain": "Agree. leetcode is the greatest thing that happened to tech interviews.Get good at it and you can do hundreds of interviews with no prep.Take homes are a proxy for hiring most desperate ppl who can spend most time on it.",
    "parent": 44845820,
    "depth": 2
  },
  {
    "id": 44852747,
    "by": "zanderwohl",
    "timeISO": "2025-08-10T04:26:16.000Z",
    "textPlain": "> but many of the other questions should be things like \"explain why this doesn't work\", \"why did you start with this approach?\" and \"are you sure that is the best name for that function?\"This is important and something more interviewers should do. The blind adherence to leetcode doesn't tell you much, especially if you're silent during the interview instead of having a short back-and-forth every 15 minutes or so. The problem solving process is more important than the problem solved.",
    "parent": 44846400,
    "depth": 2
  },
  {
    "id": 44851239,
    "by": "simpaticoder",
    "timeISO": "2025-08-09T23:12:12.000Z",
    "textPlain": ">you're partly testing people's ability to (appear to) perform under acute pressureYou are also testing people's endurance. I once did an on-site interview with Google, and it was a solid 6 hours of leet-style puzzles, one after the other.",
    "parent": 44846400,
    "depth": 2
  },
  {
    "id": 44852760,
    "by": "zanderwohl",
    "timeISO": "2025-08-10T04:28:58.000Z",
    "textPlain": "> In serious professions, people take exams early in their careers for being certified. Sometimes they take additional exams to renew their certificates. And that's all.The field of programming emerged from mathematics, not engineering unfortunately. So we lack any useful certification processes.",
    "parent": 44846408,
    "depth": 2
  },
  {
    "id": 44850756,
    "by": "master_crab",
    "timeISO": "2025-08-09T22:07:10.000Z",
    "textPlain": "The only issue is that Software Engineering (is that the term we use?) does have more churn and change than other types that have PEs like Civil.Not saying it’s not possible to focus on fundamentals that have only changed superficially in decades (like the networking stack or data structures), but it is more difficult in this field.",
    "parent": 44846408,
    "depth": 2
  },
  {
    "id": 44847709,
    "by": "Henchman21",
    "timeISO": "2025-08-09T16:14:27.000Z",
    "textPlain": "Sounds like you’re arguing for a professional licensing regime to exist",
    "parent": 44846408,
    "depth": 2
  },
  {
    "id": 44845587,
    "by": "Esophagus4",
    "timeISO": "2025-08-09T11:11:34.000Z",
    "textPlain": "Excellent point. And for anyone who’s been a hiring manager / recruiter, you know how many candidates you will have to sort through. And you want to waste as little of your engineers’ time making them do interviews if possible.Internet applications have made it so easy to apply to a position, companies have to find (usually arbitrary) ways of filtering the pipeline.It’s a very difficult problem to solve - Coinbase had 500k applications for 500 positions.Edit: I’m very concerned about AI tools flooding the pipelines even more by sending out tons of automated applications. This is going to cause an arms race where the companies have to use more arbitrary methods to sort through candidates, and it will only make it harder to find good ones.",
    "parent": 44845520,
    "depth": 2
  },
  {
    "id": 44846308,
    "by": "bryanrasmussen",
    "timeISO": "2025-08-09T13:30:23.000Z",
    "textPlain": ">The OP thinks that candidates spending a lot of time on applications is OK, as long as the company shows respect by spending a lot of time themselvesif I spend 6 hours and the company has 1000 employees does that mean they spend 6000 hours? If so I might consider it a reasonable line of argument, but I guess they don't spend anywhere near that.",
    "parent": 44845520,
    "depth": 2
  },
  {
    "id": 44852445,
    "by": "ThrowawayR2",
    "timeISO": "2025-08-10T02:57:18.000Z",
    "textPlain": "> \"They think we are fungible\"Most software people do web front end or web back end or CRUD.  Most of the rest do apps, whether mobile or desktop.   What's non-fungible about us?",
    "parent": 44845455,
    "depth": 2
  },
  {
    "id": 44847143,
    "by": "nouveaux",
    "timeISO": "2025-08-09T15:11:43.000Z",
    "textPlain": "It sounds like what you're arguing for is that companies ought to have employees that are irreplaceable. Wouldn't that impose a huge risk to the company? If said employee gets hit by the proverbial bus or leaves, the company should just fold?Companies need to build systems where everyone is replaceable to de-risk the business and not because they don't get programmers.",
    "parent": 44845455,
    "depth": 2
  },
  {
    "id": 44845959,
    "by": "lsdforme",
    "timeISO": "2025-08-09T12:22:00.000Z",
    "textPlain": "> I realised that I needed to interview my prospective employers as much as they were interviewing meThis is so important, and most of the “fit” problems working I’ve experienced are because I didn’t weigh something heavily enough in the interview.If you are even the slightest bit concerned with an employer, that is a red flag in your long-term prospects there.For example:- If your future boss seems even a little clueless about the job itself, you may be lucky to find adequate structure or information available to do your job well.- If your future boss seems guarded, they may be hiding something; they may not be equipped for the job or could be a psychopath.- If they have greater than average benefits or the recruiter calls you a rockstar, it may be some form of hell, and you won’t find that out until a few weeks in.- If more than one person seemed like they were afraid to say something during the interview and were very quiet, either the environment there will be weird or it may be a serious hell and/or there is no chance to be able to fill the shoes of the person that left.- If you sense that they overestimated your ability or you overstate something accidentally in the interview, you may not overcome that as much as you want to believe in yourself. No, you can’t make up for years of experience with hard work. Your LinkedIn profile description must be essentially you, with the burrs removed and buffed up a little; It’s not just to get past a machine or recruiter.- If anyone you interview with is an arse, even if they work in a different team, that’s not a good sign.- If you are ___, and no one else there is, that may be a serious problem. This is age, sex, religion, politics, number of kids and ages, pets, what they do/don’t do socially, emotion, humor, tech stack, clothing, what vehicles they drive, style of workplace, and everything else that either you won’t like or they won’t like about you. Diversity is a sham if you’re the only one different, though I know t",
    "parent": 44845455,
    "depth": 2
  },
  {
    "id": 44845888,
    "by": "ghaff",
    "timeISO": "2025-08-09T12:07:11.000Z",
    "textPlain": "Well, historically, taking a new job often meant relocating which is a big expense for the employer (who typically paid relo for engineering jobs) and is hugely disruptive for the employee. Definitely not just a shrug for everyone concerned if things don't work out after a bit.Less true in hotbeds for a given industry. But I've had relocation paid twice in my career and it was just a given.",
    "parent": 44845826,
    "depth": 2
  },
  {
    "id": 44849321,
    "by": "ghaff",
    "timeISO": "2025-08-09T19:23:31.000Z",
    "textPlain": "As long as someone isn't relocating, it's possibly reasonable. As long as someone is moving, there's a lot bigger barrier to taking a job. Mind you, there's is a barrier in any case if someone has a decent-paying job but just isn't loving it.",
    "parent": 44848583,
    "depth": 2
  },
  {
    "id": 44845722,
    "by": "j1elo",
    "timeISO": "2025-08-09T11:38:37.000Z",
    "textPlain": "Now the issue is to identify them. All those types of workers will present themselves as Software Developers (or Software Engineers), so the interview process is not only an entry filter, but a classification filter too. You (as a company, or as an interviewer) need to discern which are the strengths of a candidate, and also the skill level within each of those categories.",
    "parent": 44845581,
    "depth": 2
  }
]