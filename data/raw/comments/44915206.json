[
  {
    "id": 44916712,
    "by": "btbuildem",
    "timeISO": "2025-08-15T19:58:49.000Z",
    "textPlain": "Cool venture! I've resigned myself to accept that the generic \"coding\" LLMs only work well with the most default tasks and the most common languages -- and as soon as you stray from the well-trodden paths, there be hallucinations of dragons. It seems projects like that could be the solution -- narrower, domain-specific models. I think it still poses challenges in cross-domain projects, and I'm still waiting for a model that can handle spatial reasoning (eg, for circuit board design, blueprint layout, etc).",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44922745,
    "by": "westurner",
    "timeISO": "2025-08-16T12:33:46.000Z",
    "textPlain": "One test case that I've used with LLMs that generate code: generate a stop light.In short,Generate a stoplight with unit tests.I have not yet found a model that produces sufficiently safe code. I haven't tested this in awhile; but I don't expect any current LLM to be sufficient at this task.Maybe an LLM could generate a safe stop light with formal methods as a primary meta procedure? From \nhttps://news.ycombinator.com/item?id=44889967 re: formal methods:> We should not expect an LLM trained solely on formally-verified code to produce formally-verified code. I don't think that also training on specs and hateful training material will fix that.",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44922286,
    "by": "sudopsuedo",
    "timeISO": "2025-08-16T11:25:17.000Z",
    "textPlain": "Is there a way to authenticate without a browser? (For when we're developing on a headless machine or a remote machine via vscode->ssh, and the callback to localhost can't fire from our client machine)I've tried launching via\n`NO_BROWSER=true embedder` but this doesn't seem to change the auth flow",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44919400,
    "by": "pedalpete",
    "timeISO": "2025-08-16T01:54:57.000Z",
    "textPlain": "Earlier this week our team were talking about how AI coding tools for our services is great, but we didn't think it was great for firmware development.This may be just because there isn't as much embedded training data. I'm not sure if you have thoughts on that.I've passed it onto the team. Congrats on the launch. Clearly solving a great niche.",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44915854,
    "by": "bangaladore",
    "timeISO": "2025-08-15T18:27:13.000Z",
    "textPlain": "This is a more general question, but:What company would be comfortable with giving out schematics, source code, etc... to third parties like this or AI Model providers like Anthropic, etc...Privacy policy aside, this just seems like a statistical guarantee at some point to leaks sensitive IP (not specifically pointing at this company, but in this space in general). Or does nobody care?",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44919608,
    "by": "mrheosuper",
    "timeISO": "2025-08-16T02:30:58.000Z",
    "textPlain": "Is it capable of debugging the macro-hell of Zephyr ?",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44917113,
    "by": "general1726",
    "timeISO": "2025-08-15T20:52:54.000Z",
    "textPlain": "Honestly good luck with that. I have tried DeepSeek and Claude and random pulling of registers out of LLMs butt is a thing.What you will soon find out is that different companies are describing registers in radically different ways in their datasheets and I don't believe that LLM will be able to cope with it. If I can give you an advice, download Tasking compiler for a target processor and you will find SFD files which are essentially XML files describing registers and their bitfields. You can then add context on those SFD from the datasheet / reference manual and now you have 100% correct data with a register-first structure for LLM.Obviously it would be better to figure where those SFD files came out to avoid IP problems. I sincerely doubt that Tasking wrote it itself, it should come from IC manufacturers because this is just distilled VHDL.So getting these structured data instead of datasheets will more likely result in a valid answer.",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44918256,
    "by": "dsalzman",
    "timeISO": "2025-08-15T23:00:27.000Z",
    "textPlain": "This looks awesome. Embedded programming doesn’t get enough love. Did you think about making this an MCP (aka plugin) service that general agents a la claude code can leverage?",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44915990,
    "by": "NotBoolean",
    "timeISO": "2025-08-15T18:38:13.000Z",
    "textPlain": "I’ve found AI agents always a bit lacking in embedded but I’ll test this out.You said in your demo that by uploading the data sheet you completely remove hallucinations. How have you achieved this as I found AI’s still hallucinate even when given documentation.",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44917587,
    "by": "brunohaid",
    "timeISO": "2025-08-15T21:42:44.000Z",
    "textPlain": "Definitely a need, kudos for tackling it!I’d still look into fine tuning.  One of the main issues I’m struggling with is that even reasonably simple drivers often need to be aware of Application Notes etc that would single handedly blow past any context window. So giving the model a fighting chance by narrowing the space might be worthwhile here. Top 20 vendors datasheets/docs, handpicked sites and forums etc.",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44921288,
    "by": "CheeseFromLidl",
    "timeISO": "2025-08-16T08:08:44.000Z",
    "textPlain": "Just yesterday I was both hindered and helped by Google in modifying a 32 bit bootloader to load and executes 64 bit code.- Google search was utterly useless, giving me no relevant results (which I found later by searching around github). It mainly returned results for a different archtecture, padded with results on a different topic.- Gemini only wanted to give workflow hints sparsely dotted with actual (correct) asm.- but then I found out that Gemini had a full grasp of the 6500 page datasheet and it happily reviewed my code, pulling out 2 errors and suggesting some optimisation.We’ve come to the point were google search is worse than github search. And I haven’t given up on Gemini yet.",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44919800,
    "by": "rao-v",
    "timeISO": "2025-08-16T03:16:11.000Z",
    "textPlain": "How good is your esp32 support? This could make a lot of home automation hobbyists very happy!",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44915978,
    "by": "btown",
    "timeISO": "2025-08-15T18:37:16.000Z",
    "textPlain": "You’ll probably hear people say things like “this could just be an MCP server and a prompt to use it.” To that I’d say: just remember that infamous 2007 Dropbox comment: https://news.ycombinator.com/item?id=9224If you can make the developer experience simple enough that it becomes standard practice, you can go really far. Good luck!",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44917871,
    "by": "ExtraKaylee",
    "timeISO": "2025-08-15T22:13:08.000Z",
    "textPlain": "I've been building a set of tools to help with speeding up the reprogramming cycle of embedded, getting it down to about 500ms and not requiring a restart, for logic changes.Combining that with AI, and the \"futz factor\" of changing and trying things rapidly mirrors a spreadsheet.",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44915831,
    "by": "lennxa",
    "timeISO": "2025-08-15T18:25:31.000Z",
    "textPlain": "how are you going about this? do you intend to train/finetune your own models, or scaffold frontier models with prompts+tools?",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44920203,
    "by": "svnt",
    "timeISO": "2025-08-16T04:34:29.000Z",
    "textPlain": "I’ve honestly been having a pretty good time with embedded dev and claude code, including board bring up and rtos dev.As you mention providing the context is the key. I also have a fair bit of embedded dev/management experience so know intuitively how things should go.As with everything, organization seems to win.",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44917979,
    "by": "point5xdev",
    "timeISO": "2025-08-15T22:24:40.000Z",
    "textPlain": "wow this is awesome",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44916547,
    "by": "foltik",
    "timeISO": "2025-08-15T19:35:28.000Z",
    "textPlain": "The system prompt:You are an interactive CLI agent specialising in embedded-systems software engineering tasks using C and C++. You must adopt a rigerous and zero trust approach to reading documentationa and code. \nTreat every line of code with suspension until proven correct through reading documentation and code. Create citations from documentation for all values and operations used in the code. \nYour primary objective is to help users design, implement, verify and optimise firmware safely and efficiently while adhering to strict hardware constraints.\nIf you have any questions or need clarification, ask the user for clarification or confirmation. Do not make design decisions without user confirmation.# Core Mandates- *Repository Understanding:* Use the interactive query tools (FindDefinition, FindReferences, FindDependencies) to understand the repository structure and codebase before executing any tools to understand the codebase- *Conventions:* Rigorously adhere to existing project conventions when reading or modifying code. Analyse surrounding code, tests and configuration first.- *Style & Structure:* Mimic the existing formatting, naming and architectural patterns of the codebase.- *Comments:* Write comments sparingly, focusing on why complex logic is necessary.- *Path Construction:* Before using any file-system tools (e.g., ReadFile or WriteFile), construct the full absolute path.- *Do Not Revert Changes:* Never revert code unless explicitly asked to or to correct errors you introduced.- *Resource Awareness:* Always account for limitations in RAM, Flash and CPU cycles. Prefer static allocation; avoid dynamic allocation unless absolutely necessary and explicitly allowed.- *Hardware-Centric Mindset:* Demonstrate deep understanding of micro-controller peripherals (GPIO, SPI, I²C, ADC, DMA, timers, interrupts) and memory-mapped registers. Interact with hardware deterministically.- *Real-Time Behaviour:* When working with an RTOS, use its primitives correctly (task",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44917761,
    "by": "erohead",
    "timeISO": "2025-08-15T22:01:26.000Z",
    "textPlain": "Pebble 2 _Duo_ ;)",
    "parent": 44915206,
    "depth": 1
  },
  {
    "id": 44917139,
    "by": "etgibbs",
    "timeISO": "2025-08-15T20:54:39.000Z",
    "textPlain": "there are some other companies trying to solve for PCB design. long term we want to build end-to-end AI automation for those cross-domain projects. this was a good place to start based on our personal/work experience",
    "parent": 44916712,
    "depth": 2
  },
  {
    "id": 44919865,
    "by": "rancar2",
    "timeISO": "2025-08-16T03:28:16.000Z",
    "textPlain": "Check out https://xnilio.com/",
    "parent": 44916712,
    "depth": 2
  },
  {
    "id": 44916064,
    "by": "etgibbs",
    "timeISO": "2025-08-15T18:44:47.000Z",
    "textPlain": "great question. we've found most code/docs are offline in the embedded space (for good reason) so our approach going forward is going to be more FDE/on-prem for enterprise users. they asked for self-hosted, BYOK, local indexing, etc. and I think this is something that can differentiate usfor consumer users we have a zero-retention policy with the model providers, and we use repo mapper to index your code locally, but as you pointed out these APIs are a black box so no guarantees",
    "parent": 44915854,
    "depth": 2
  },
  {
    "id": 44916155,
    "by": "NotBoolean",
    "timeISO": "2025-08-15T18:53:01.000Z",
    "textPlain": "Embedder’s privacy policy is very clear that they keep your information.https://embedder.dev/privacy-policy“Content DataWhen you use our services, we collect:Any files or data you upload\nAny generated code or data”",
    "parent": 44915854,
    "depth": 2
  },
  {
    "id": 44920023,
    "by": "etgibbs",
    "timeISO": "2025-08-16T04:01:17.000Z",
    "textPlain": "we are working with this consumer electronics company debug their zephyr project right now, would be worth trying out. if it doesn't work, email founders@embedder.dev we'll help you out",
    "parent": 44919608,
    "depth": 2
  },
  {
    "id": 44918306,
    "by": "etgibbs",
    "timeISO": "2025-08-15T23:08:44.000Z",
    "textPlain": "exposing the context layer as an MCP is a very interesting idea that I did not consider; could be a good way to drive adoption. great suggestion.",
    "parent": 44918256,
    "depth": 2
  },
  {
    "id": 44916089,
    "by": "etgibbs",
    "timeISO": "2025-08-15T18:46:45.000Z",
    "textPlain": "strict grounding protocol + planning phase, mostly by prompting and forcing attention through citations. it tends to think longer than other coding agents but the results are usually better. let me know what you think.",
    "parent": 44915990,
    "depth": 2
  },
  {
    "id": 44917772,
    "by": "etgibbs",
    "timeISO": "2025-08-15T22:02:50.000Z",
    "textPlain": "we are talking to a some of the larger vendors about getting first-party support for documentation. once we scale up a bit I think it could make sense to have multiple fine tuned models based on the docs they provide (or we crawl the web for public ones, at minimum)",
    "parent": 44917587,
    "depth": 2
  },
  {
    "id": 44921347,
    "by": "ta12653421",
    "timeISO": "2025-08-16T08:20:59.000Z",
    "textPlain": ">>\nWe’ve come to the point were google search is worse than github search\n<<LOL\n++1..which you couldnt ever imagine to happen 10+ years ago :)",
    "parent": 44921288,
    "depth": 2
  },
  {
    "id": 44920012,
    "by": "etgibbs",
    "timeISO": "2025-08-16T03:59:27.000Z",
    "textPlain": "you can upload the esp32 docs to your own project, but we are working with espressif to have first party support for the docs baked in",
    "parent": 44919800,
    "depth": 2
  },
  {
    "id": 44916151,
    "by": "0x457",
    "timeISO": "2025-08-15T18:52:28.000Z",
    "textPlain": "Well, it depends if it does anything novel under the hood and not just Model + System Prompt + Tools + User Input...like 99% of agents being build right now.",
    "parent": 44915978,
    "depth": 2
  },
  {
    "id": 44917967,
    "by": "etgibbs",
    "timeISO": "2025-08-15T22:23:26.000Z",
    "textPlain": "interesting, would you be open to chatting?",
    "parent": 44917871,
    "depth": 2
  },
  {
    "id": 44916008,
    "by": "etgibbs",
    "timeISO": "2025-08-15T18:39:26.000Z",
    "textPlain": "currently we scaffold frontier models. the product is basically a context layer with custom tools that enable hardware interaction. we've tossed around the idea of pre-training/fine tuning but new models are being released so fast it doesn't make sense to build anything other than a wrapper",
    "parent": 44915831,
    "depth": 2
  },
  {
    "id": 44918361,
    "by": "RainyDayTmrw",
    "timeISO": "2025-08-15T23:14:49.000Z",
    "textPlain": "Does this actually work? I always find it strange when a system prompt tells an LLM to do or not do something that requires domain knowledge to understand. Like, how does the underlying base model at all understand what it means to verify documentation?",
    "parent": 44916547,
    "depth": 2
  },
  {
    "id": 44916555,
    "by": "foltik",
    "timeISO": "2025-08-15T19:36:17.000Z",
    "textPlain": "The tools it can call:• DatasheetSearch — “Semantic search across authoritative datasheets, reference manuals and application notes to answer hardware-specific questions.”• StaticAnalysis — “Run cppcheck / clang-tidy static analysis with embedded-focused rules.”• Debugger — “AI-assisted interactive debugging leveraging GDB or simulator back-ends.”• ListDir — “List files and directories within a specified path, respecting ignore patterns. Use the full absolute path of the file to read.”• ReadFile — “Read the content (or portion) of a single file with line-range support. Use the full absolute path of the file to read.”• ReadManyFiles — “Batch-read multiple files or glob patterns, returning combined results. Use the full absolute path of the file to read.”• Grep — “Exact regex search across file contents, capped results, supports include patterns. Use the full absolute path of the file to read.”• Glob — “Find files by path pattern (e.g., */*.c) rapidly, sorted by recency. Use the full absolute path of the file to read.”• Edit — “Precise in-file text replacement with contextual validation. Use the full absolute path of the file to edit.”• WriteFile — “Create or overwrite files with exact content, diff-aware. Use the full absolute path of the file to write.”• Shell — “Execute shell commands in project context with safety confirmations.”• FindDefinition — “Find the definition of a specific identifier (function, variable, class, etc.) in the codebase.”• FindReferences — “Find all references to a specific identifier (function, variable, class, etc.) in the codebase.”• FindDependencies — “Find dependencies and relationships between files in the codebase.”• WebSearch — “Performs a web search using Google Search (via the Gemini API) and returns the results. This tool is useful only when we can’t find the documentation using document search or in the code base. We can use this tool for finding information on the internet based on a query.”• ProcessUrls — “Processes content from",
    "parent": 44916547,
    "depth": 2
  },
  {
    "id": 44917789,
    "by": "etgibbs",
    "timeISO": "2025-08-15T22:05:12.000Z",
    "textPlain": "post cannot be edited, unfortunately...thanks for the dev kit :)",
    "parent": 44917761,
    "depth": 2
  }
]