[
  {
    "id": 44864527,
    "by": "epiccoleman",
    "timeISO": "2025-08-11T14:30:57.000Z",
    "textPlain": "I love this article just for the spirit of fun and experimentation on display. Setting up a VPS where Claude is just asked to go nuts - to the point where you're building a little script to keep Claude humming away - is a really fun idea.This sort of thing is a great demonstration of why I remain excited about AI in spite of all the hype and anti-hype. It's just fun to mess with these tools, to let them get friction out of your way. It's a revival of the feelings I had when I first started coding: \"wow, I really can do anything if I can just figure out how.\"Great article, thanks for sharing!",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44864673,
    "by": "hungryhobbit",
    "timeISO": "2025-08-11T14:41:45.000Z",
    "textPlain": ">1) Have faith (always run it with 'dangerously skip permissions', even on important resources like your production server and your main dev machine.I thought the article was a satire after I read this ... but it wasn't!",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44865102,
    "by": "tptacek",
    "timeISO": "2025-08-11T15:16:30.000Z",
    "textPlain": "You run a coding agent with no permissions checks on a production server anywhere I'm involved in security and I will strike down upon thee with great vengeance and furious anger.Really, any coding agent our shop didn't write itself, though in those cases the smiting might be less theatrical than if you literally ran a yolo-mode agent on a prod server.",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44865119,
    "by": "mdasen",
    "timeISO": "2025-08-11T15:17:39.000Z",
    "textPlain": "Is Claude Code better than the Gemini CLI? I've been using the Gemini CLI with Gemini 2.5 Pro and haven't been impressed. Maybe these LLMs aren't as good with Rust codebases? I'm guessing there are a lot more people looking to use these tools with JS and Python.",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44864609,
    "by": "dabedee",
    "timeISO": "2025-08-11T14:37:09.000Z",
    "textPlain": "This article feels like it was written as a dialectical exercise between an AI and a human. It would probably benefit from some more heavy human editing to make it more succinct and to give the overall article a structure. As it is, it's very difficult to follow along.",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44865071,
    "by": "_pdp_",
    "timeISO": "2025-08-11T15:13:52.000Z",
    "textPlain": "I've asked copilot (Claude Sonnet 4) to edit some specific parts of a project. It removed the lines that specifically have comments that say \"do not remove\" with long explanation why. Then it went ahead and modified the unit tests to ensure 100% coverage.Using coding agent is great btw, but at least learn how to double check their work cuz they are also quite terrible.",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44864601,
    "by": "chaosprint",
    "timeISO": "2025-08-11T14:36:44.000Z",
    "textPlain": "The title is a bit exaggerated. The depth of the projects covered in the article is clearly not representative of \"all\".In fact, I now prefer to use a purely chat window to plan the overall direction and let LLM provide a few different architectural ideas, rather than asking LLM to write a lot of code whose detail I have no idea about.",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44865172,
    "by": "esafak",
    "timeISO": "2025-08-11T15:22:25.000Z",
    "textPlain": "We really need an agent benchmark to explore their ability-efficiency frontier.",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44864956,
    "by": "lvl155",
    "timeISO": "2025-08-11T15:04:31.000Z",
    "textPlain": "If Anthropic is smart they would open it up to other models now to make it default for everyone. Otherwise you are banking on Sonnet remaining the best coding model.",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44864913,
    "by": "alberth",
    "timeISO": "2025-08-11T15:00:18.000Z",
    "textPlain": "OT: my 14-year old nephew would like to use Claude Code. How do they signup for an account given they don’t have a cellphone?(Sure, I could let them use my credentials but that isn’t really legit/fair use.)",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44864908,
    "by": "jofer",
    "timeISO": "2025-08-11T15:00:01.000Z",
    "textPlain": "I appreciate this writeup.  I live in the terminal and work primarily in vim, so I always appreciate folks talking about tooling from that perspective. Little of the article is that, but it's still interesting to see the workflow outlined here, and it gives me a few ideas to try more of.However, I disagree that LLMs are anywhere near as good as what's described here for most things I've worked with.So far, I'm pretty impressed with Cursor as a toy.  It's not a usable tool for me, though.  I haven't used Claude a ton, though I've seen co-workers use it quite a bit. Maybe I'm just not embracing the full \"vibe coding\" thing enough and not allowing AI agents to fully run wild.I will concede that Claude and Cursor have gotten quite good at frontend web development generation.  I don't doubt that there are a lot of tasks where they make sense.However, I still have yet to see a _single_ example of any of these tools working for my domain.  Every single case, even when the folks who are trumpeting the tools internally run the prompting/etc, results in catastrophic failure.The ones people trumpet internally are cases where folks can't be bothered to learn the libraries they're working with.The real issue is that people who aren't deeply familiar with the domain don't notice the problems with the changes LLMs make.  They _seem_ reasonable. Essentially by definition.Despite this, we are being nearly forced to use AI tooling on critical production scientific computing code.  I have been told I should never be editing code directly and been told I must use AI tooling by various higher level execs and managers.  Doing so is 10x to 100x slower than making changes directly.  I don't have boilerplate. I do care about knowing what things do because I need to communicate that to customers and predict how changes to parameters will affect output.I keep hearing things described as an \"overactive intern\", but I've never seen an intern this bad, and I've seen a _lot_ of interns.  Interns ",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44865032,
    "by": "not_a_bot_4sho",
    "timeISO": "2025-08-11T15:09:57.000Z",
    "textPlain": "Perhaps I'm a bit of a cynic but I'm no longer impressed by the AI slop websites and demo apps, like those showcased in the article.",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44864233,
    "by": "doppelgunner",
    "timeISO": "2025-08-11T14:07:59.000Z",
    "textPlain": "Is Claude Code really that good? I'm currently using Cursor and I let it pick the LLM model to use.",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44864984,
    "by": "siva7",
    "timeISO": "2025-08-11T15:06:21.000Z",
    "textPlain": "> I watched the autonomous startup builder a bit more.I think i'm done with this community in the age of vibe coding. The line between satire, venture capitalism, business idea guys and sane tech enthusiasts is getting too blurry.",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44864585,
    "by": "ramesh31",
    "timeISO": "2025-08-11T14:35:04.000Z",
    "textPlain": "Particularly with the VSCode extension. I was a loyal Cline user until recently because of how good the editor experience was, but the ability for Claude to go off and run for 10+ minutes effectively autonomously, and show me the diffs in realtime is a gamechanger. The token usage has also gotten much more efficient in the last few months. With proper IDE support now I don't see any reason at all to use anything else, especially not the \"credit\" based middle-man providers (Windsurf/Cursor et. al).",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44864829,
    "by": "devmor",
    "timeISO": "2025-08-11T14:53:33.000Z",
    "textPlain": "This article seems fun, and it's interesting, but I was waiting for the point and it never came.The author didn't do anything actually useful or impactful, they played around with a toy and mimicked a portion of what it's like to spin up pet projects as a developer.But hey, it could be that this says something after all. The first big public usages of AI were toys and vastly performed as a sideshow attraction for amused netizens. Maybe we haven't come very far at all, in comparison to the resources spent. It seems like all of the truly impressive and useful applications of this technology are still in specialized private sector work.",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44865002,
    "by": "zb3",
    "timeISO": "2025-08-11T15:07:21.000Z",
    "textPlain": "Umm, not really, you also need spare money to burn..",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44864543,
    "by": "burntpineapple",
    "timeISO": "2025-08-11T14:31:38.000Z",
    "textPlain": "if I don't see aider in the first sentence, I send it back",
    "parent": 44864185,
    "depth": 1
  },
  {
    "id": 44864661,
    "by": "pyrale",
    "timeISO": "2025-08-11T14:40:56.000Z",
    "textPlain": "On one hand, I agree with you that there is some fun in experimenting with silly stuff. On the other hand...> Claude was trying to promote the startup on Hackernews without my sign off. [...] Then I posted its stuff to Hacker News and Reddit....I have the feeling that this kind of fun experiments is just setting up an automated firehose of shit to spray places where fellow humans congregate. And I have the feeling that it has stopped being fun a while ago for the fellow humans being sprayed.",
    "parent": 44864527,
    "depth": 2
  },
  {
    "id": 44864878,
    "by": "bubblyworld",
    "timeISO": "2025-08-11T14:58:07.000Z",
    "textPlain": "Haha, well at least they warned you!> If you're from infosec, you might want to stop reading now — the rest of this article isn't going to make you any happier. Keep your medication close at hand if you decide to continue...",
    "parent": 44864673,
    "depth": 2
  },
  {
    "id": 44865196,
    "by": "sylens",
    "timeISO": "2025-08-11T15:24:22.000Z",
    "textPlain": "Author kindly asked you to stop reading:> 1) Have faith (always run it with 'dangerously skip permissions', even on important resources like your production server and your main dev machine. If you're from infosec, you might want to stop reading now—the rest of this article isn't going to make you any happier. Keep your medication close at hand if you decide to continue).",
    "parent": 44865102,
    "depth": 2
  },
  {
    "id": 44865210,
    "by": "risho",
    "timeISO": "2025-08-11T15:25:37.000Z",
    "textPlain": "i've tried codex, cursor, and a few other agentic tools and nothing compares to claude code when it comes to UX. The other service's models are quickly catching up to claude, but the claude code ux is just magical to me. i havent used it with rust personally. like you suggested would be the average user, i've mostly stuck with js and python.",
    "parent": 44865119,
    "depth": 2
  },
  {
    "id": 44865131,
    "by": "aaomidi",
    "timeISO": "2025-08-11T15:19:30.000Z",
    "textPlain": "Claude Code is insanely good with Rust.",
    "parent": 44865119,
    "depth": 2
  },
  {
    "id": 44864778,
    "by": "skerit",
    "timeISO": "2025-08-11T14:49:40.000Z",
    "textPlain": "I like using Claude-Code, it can be a real timesaver in certain cases.But it's far from perfect. Really difficult things/big projects are nearly impossible. Even if you break it down into hundred small tasks.I've tried to make it port an existing, big codebase from one language to another. So it has all of the original codebase in one folder, and a new project in another folder. No matter how much guidance you give it, or how clear you make your todos, it will not work.",
    "parent": 44864601,
    "depth": 2
  },
  {
    "id": 44864723,
    "by": "NitpickLawyer",
    "timeISO": "2025-08-11T14:45:41.000Z",
    "textPlain": "Most harnesses provide this as a \"plan\" vs. \"act\" mode now. You first \"chat\" in plan mode (no access to tools, no instructions to write any code basically), you then can optionally write those plans in a memorybank / plan.md, and then say \"now go implement it\", and it moves to the \"act\" mode where it goes through and does it, updating progress in plan.md as it goes.",
    "parent": 44864601,
    "depth": 2
  },
  {
    "id": 44865174,
    "by": "tommy_axle",
    "timeISO": "2025-08-11T15:22:37.000Z",
    "textPlain": "This piece is also covered by a bunch of other cli/tui agents (like codex-cli and opencode) allowing you to switch between Claude and other models (comes in handy depending on the task) so it really all depends on the setup you like. As mentioned in the sibling comment there are ways to get it to work with Claude Code too.",
    "parent": 44864956,
    "depth": 2
  },
  {
    "id": 44865051,
    "by": "CuriouslyC",
    "timeISO": "2025-08-11T15:12:00.000Z",
    "textPlain": "There's Claude Code Router, that lets you use any model with Claude Code. Claude is a really good model for agents though, even though Gemini 2.5 and GPT5 are better models overall, Claude uses tools and plans tasks more effectively.  A better pattern is to provide sub agents in Claude Code that call out to other LLMs as tools for planning/architecture.",
    "parent": 44864956,
    "depth": 2
  },
  {
    "id": 44865106,
    "by": "traceroute66",
    "timeISO": "2025-08-11T15:16:51.000Z",
    "textPlain": "Surely your love for your nephew is priceless ?Do the right thing, sign up for an API account and put some credits on there...(and keep topping up those credits ;-)",
    "parent": 44864913,
    "depth": 2
  },
  {
    "id": 44865001,
    "by": "colechristensen",
    "timeISO": "2025-08-11T15:07:17.000Z",
    "textPlain": "Have someone who isn't ever going to use claude code sign up for him and then give him the credentials.  (do you have a partner or other relative not in tech?)",
    "parent": 44864913,
    "depth": 2
  },
  {
    "id": 44865154,
    "by": "smithkl42",
    "timeISO": "2025-08-11T15:21:10.000Z",
    "textPlain": "This is roughly my experience with LLMs. I've had a lot of friends that have had good experience vibe coding very small new apps. And occasionally I've had AI speed things up for me when adding a specific feature to our main app. But at roughly 2 million lines of code, and with 10 years of accumulated tribal knowledge, LLMs really seem to struggle with our current codebase.The last task I tried to get an LLM to do was a fairly straightforward refactor of some of our C# web controllers - just adding a CancellationToken to the controller method signature whenever the underlying services could accept one. It struggled so badly with that task that I eventually gave up and just did it by hand.The widely cited study that shows LLMs slow things down by 20% or so very much coheres with my experience, which is generally: fight with the LLM, give up, do it by hand.",
    "parent": 44864908,
    "depth": 2
  },
  {
    "id": 44864989,
    "by": "suninsight",
    "timeISO": "2025-08-11T15:06:28.000Z",
    "textPlain": "I think if you use Cursor, using Claude Code is a huge upgrade. The problem is that Cursor was a huge upgrade from the IDE, so we are still getting used to it.The company I work for builds a similar tool - NonBioS.ai. It is in someways similar to what the author does above - but packaged as a service. So the nonbios agent has a root VM and can write/build all the software you want. You access/control it through a web chat interface - we take care of all the orchestration behind the scene.Its also in free Beta right now, and signup takes a minute if you want to give it a shot. You can actually find out quickly if the Claude code/nonbios experience is better than Cursor.",
    "parent": 44864233,
    "depth": 2
  },
  {
    "id": 44864644,
    "by": "vemv",
    "timeISO": "2025-08-11T14:39:29.000Z",
    "textPlain": "When it comes to diffs (edits), Cursor is batch-oriented, while CC suggests one edit at a time and can be steered in real time.That's a critical feature for keeping a human in the loop, preventing big detours and token waste.",
    "parent": 44864233,
    "depth": 2
  },
  {
    "id": 44864781,
    "by": "cyprien_g",
    "timeISO": "2025-08-11T14:49:52.000Z",
    "textPlain": "I'm a long-time GitHub Copilot subscriber, but I have also tested many alternatives, such as Cursor.Recently, I tried using Claude Code with my GitHub Copilot subscription (via unofficial support through https://github.com/ericc-ch/copilot-api), and I found it to be quite good. However, in my opinion, the main difference comes down to your preferred workflow. As someone who works with Neovim, I find that a tool that works in the terminal is more appropriate for me.",
    "parent": 44864233,
    "depth": 2
  },
  {
    "id": 44864316,
    "by": "sixhobbits",
    "timeISO": "2025-08-11T14:15:16.000Z",
    "textPlain": "Most of these are Anthropic models under the hood, so I think 'whatever fits your workflow best' is the main deciding factor. That's definitely Claude Code for me, and I do think there's some 'secret sauce' in the exact prompting and looping logic they use, but I haven't tried Cursor a lot to be sure.",
    "parent": 44864233,
    "depth": 2
  },
  {
    "id": 44864791,
    "by": "bfeynman",
    "timeISO": "2025-08-11T14:50:55.000Z",
    "textPlain": "there is no reason to pay for cursor when claude is definitely the best coding model and you are paying essentially for just a bigger middle man.",
    "parent": 44864233,
    "depth": 2
  },
  {
    "id": 44864712,
    "by": "perryizgr8",
    "timeISO": "2025-08-11T14:44:54.000Z",
    "textPlain": "I feel like as tool Claude code is superior to \"regular code editor with ai plugin\". This method of having the ai do your tasks feels like the future.",
    "parent": 44864233,
    "depth": 2
  },
  {
    "id": 44864574,
    "by": "CodingJeebus",
    "timeISO": "2025-08-11T14:34:22.000Z",
    "textPlain": "If Cursor works for you, then stick with it. Claude Code is great for terminal-based workflows. Whatever makes you more productive is the better tool.I’m just glad we’re getting past the insufferable “use Cursor or get left behind” attitude that was taking off a year ago.",
    "parent": 44864233,
    "depth": 2
  },
  {
    "id": 44864775,
    "by": "monkpit",
    "timeISO": "2025-08-11T14:49:32.000Z",
    "textPlain": "Same here, I was convinced Cline+OpenRouter was the way to go. But with Claude code I’m getting better results and saving money, even compared to planning with Sonnet and transitioning to act mode with DeepSeek, I was still using more than $20/mo easily.",
    "parent": 44864585,
    "depth": 2
  }
]