[
  {
    "id": 44860585,
    "by": "BeastMachine",
    "timeISO": "2025-08-11T03:36:42.000Z",
    "textPlain": "Anyone who's trying to secure workloads running in any EC2 instance should know about this, there's nothing special about it being an ECS instance. You could do the same thing with EKS.",
    "parent": 44818501,
    "depth": 1
  },
  {
    "id": 44858763,
    "by": "RainyDayTmrw",
    "timeISO": "2025-08-10T22:14:50.000Z",
    "textPlain": "At the risk of being overly reductive, isn't this exactly the expected behavior: With ECS on EC2, the EC2 VM is a security boundary, and the container is not?",
    "parent": 44818501,
    "depth": 1
  },
  {
    "id": 44860555,
    "by": "ranger_danger",
    "timeISO": "2025-08-11T03:28:56.000Z",
    "textPlain": "IAM is the bane of my existance. I once had to delegate spot fleet request/launch capabilities to a third party... it took me two weeks just to figure out how to add all the right permissions to make that happen without giving too much extra power.",
    "parent": 44818501,
    "depth": 1
  },
  {
    "id": 44859452,
    "by": "slowdog",
    "timeISO": "2025-08-10T23:40:31.000Z",
    "textPlain": "As a heavy EC2 user who hasn't used ECS, the behavior makes perfect sense as ECS is running on EC2 but unless I sat and thought about it my first instinct would be that AWS would make it \"secure by default\" on a container level since containers often have different permission requirements and so the container would be the security boundary.That said, I'm guessing it would have been obvious to anyone once they start setting up IAM permissions and therefore not much of a pitfall.So it's a good reminder, but I agree with you, maybe the article doesn't need to be so long to get to the same point.",
    "parent": 44858763,
    "depth": 2
  },
  {
    "id": 44858781,
    "by": "easton",
    "timeISO": "2025-08-10T22:16:53.000Z",
    "textPlain": "Expected, yes, but it’s not something you’d necessarily think about I guess. I never thought about the containers being able to access the EC2 metadata endpoint since ECS exposes a container specific one (although they obviously could, in hindsight).",
    "parent": 44858763,
    "depth": 2
  }
]