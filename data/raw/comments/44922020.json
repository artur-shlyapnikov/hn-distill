[
  {
    "id": 44923495,
    "by": "FFFXXX",
    "timeISO": "2025-08-16T13:57:39.000Z",
    "textPlain": "The part about C# volatile accesses using release-acquire ordering seems to be wrong if I read the C# docs correctly.\"There is no guarantee of a single total ordering of volatile writes as seen from all threads of execution\"https://learn.microsoft.com/en-us/dotnet/csharp/language-ref...",
    "parent": 44922020,
    "depth": 1
  },
  {
    "id": 44922938,
    "by": "skobes",
    "timeISO": "2025-08-16T12:52:35.000Z",
    "textPlain": "The first \"trap\" on the page says \"min-width: auto makes min width determined by content\", but this is false outside of flex/grid.From MDN: \"For block boxes, inline boxes, inline blocks, and all table layout boxes auto resolves to 0.\"https://developer.mozilla.org/en-US/docs/Web/CSS/min-width",
    "parent": 44922020,
    "depth": 1
  },
  {
    "id": 44922737,
    "by": "ngruhn",
    "timeISO": "2025-08-16T12:33:10.000Z",
    "textPlain": "A recent trap for me:Regex semantics is subtly different across languages. E.g. a{,3} matches between 0 and 3 \"a\" characters in Python. In JavaScript it matches the literal string \"a{,3}\".",
    "parent": 44922020,
    "depth": 1
  },
  {
    "id": 44922705,
    "by": "andunie",
    "timeISO": "2025-08-16T12:28:40.000Z",
    "textPlain": "That's a nice compendium of tips and useful information.I wonder if anyone can learn from this. I feel like I only understood what I already knew, or at least was very close to knowing. That's the same thing that happens with teaching manuals about any topic: they're organized in a way that makes sense and it's easy for people who already know the topics, but often very bad at teaching the same topics to an audience that doesn't know anything.",
    "parent": 44922020,
    "depth": 1
  },
  {
    "id": 44922803,
    "by": "QuadmasterXLII",
    "timeISO": "2025-08-16T12:39:53.000Z",
    "textPlain": "CSS and C++ both have the “pick a subset and enforce that, or suffer” nature. On my to-do list: make a github action that requires manual override to merge any pull request with a css attribute not already present",
    "parent": 44922020,
    "depth": 1
  },
  {
    "id": 44923584,
    "by": "charleslmunger",
    "timeISO": "2025-08-16T14:08:38.000Z",
    "textPlain": ">A volatile write operation prevents earlier memory operations on the thread from being reordered to occur after the volatile write. A volatile read operation prevents later memory operations on the thread from being reordered to occur before the volatile readLooks like release/acquire to me? A total ordering would be sequential consistency.",
    "parent": 44923495,
    "depth": 2
  },
  {
    "id": 44923030,
    "by": "diggan",
    "timeISO": "2025-08-16T13:04:22.000Z",
    "textPlain": "I guess the first trap should really be: \"You cannot read any CSS property in isolation, as just like what the name implies, defaults and what values end up doing cascades through all the rules your document ends up using\"",
    "parent": 44922938,
    "depth": 2
  },
  {
    "id": 44922820,
    "by": "skydhash",
    "timeISO": "2025-08-16T12:41:18.000Z",
    "textPlain": "Regex is more a technique than an actual specification. It would be best to find the time to go and read an introductory book about Theory of Computation where they explain the underlying mechanism.",
    "parent": 44922737,
    "depth": 2
  },
  {
    "id": 44922933,
    "by": "danhau",
    "timeISO": "2025-08-16T12:51:54.000Z",
    "textPlain": "I always use regex101 to develop my regexes. It allows you to switch between different engines.",
    "parent": 44922737,
    "depth": 2
  },
  {
    "id": 44923066,
    "by": "PhilipRoman",
    "timeISO": "2025-08-16T13:08:15.000Z",
    "textPlain": "Honorable mention to [a-z], gotta be my favorite trap",
    "parent": 44922737,
    "depth": 2
  },
  {
    "id": 44922777,
    "by": "skydhash",
    "timeISO": "2025-08-16T12:37:12.000Z",
    "textPlain": "> with teaching manuals about any topic: they're organized in a way that makes sense and it's easy for people who already know the topicI think that the reason for a manual existence. To have a written record so we don't have to trust our memory. This is what most unix manuals are. You already know what the software can do, you just need to remember the specificity on how to get something done.> often very bad at teaching the same topics to an audience that doesn't know anything.What you need then is a tutorial (beginner seeking to learn) or a guide (beginner/intermediate seeking to do). Manuals in this case only serve to have better questions (Now you know what you don't know).",
    "parent": 44922705,
    "depth": 2
  }
]