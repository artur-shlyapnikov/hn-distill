[
  {
    "id": 44857244,
    "by": "CobrastanJorji",
    "timeISO": "2025-08-10T18:38:36.000Z",
    "textPlain": "This is Web 2.0. You're in the process of rediscovering mashups. Before it was SOAP and REST/HTTP and now it's...well, it's still kind of REST/HTTP because MCP is JSON-RPC. There was this brief, beautiful period where every \"learn to code\" book ended with a couple of chapters of how to make your app do google searches and throw the results into a word graph or something before all the big tech companies locked that sort of access down.Weirdly, I'm a little optimistic that it might work this time. AI is hot, which means that suddenly we don't care about IP anymore, and if AIs are the ones that are mostly using this protocol, providers will perhaps be in less of a rush to block everybody from doing cool things.",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44856403,
    "by": "cowmix",
    "timeISO": "2025-08-10T16:47:59.000Z",
    "textPlain": "I’m just getting into MCP (building my own server and trying some canned ones), and one thing I’ve noticed — some servers seem to devour your context window before you’ve even typed a single token / question.My favorite example is the public Atlassian one —\nhttps://www.atlassian.com/blog/announcements/remote-mcp-serv...Even with Claude or Gemini CLI (both with generous limits), I run out of context and resources fast.With local LLMs via LM Studio? Forget it — almost any model will tap out before I can get even a simple question in.",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44855844,
    "by": "do_anh_tu",
    "timeISO": "2025-08-10T15:25:56.000Z",
    "textPlain": "I think MCP is awesome, mainly because it forces devs to design the simplest possible tools/APIs/functions so even an average-performance LLM can use them correctly to get things done.As developers, we often want everything to be rich, verbose, and customizable — but the reality is that for most users (and now for AIs acting on their behalf), simplicity wins every time. It’s like designing a great UI: the fewer ways you can get lost, the more people (or models) can actually use it productively.If MCP ends up nudging the ecosystem toward small, well-defined, composable capabilities, that’s a win far beyond just “AI integration.”",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44855948,
    "by": "_pdp_",
    "timeISO": "2025-08-10T15:43:31.000Z",
    "textPlain": "The way the function is described to the LLM matter. Even when the parameters are the same and the effect is the same the title and description can fundamentally influence how the task is performed.The other issue is that you cannot think of MCP servers as universal pluggable systems that can fit into every use-case with minimal wrapping. Real world scenarios require pulling a lot of tricks. Caching can be done at higher or lower level depending on the use-case. Communication of different information from the MCP server also is different depending on the use-case (should we replace these long IDs for shorter IDs that are automatically translated to longer ones). Should we automatically tinyurl all the links to reduce hallucination? Which operations can be effectively solved with pure algorithms (compress 2-3 operations into one) because doing this with LLMs is not only error-prone but also not optimal (imagine using LLM to grep for strings in many files one by one using tool calls rather than using grep to search for strings - not the same)There are so many things to consider. MCP is nice abstraction but it is not a silver bullet.Speaking from experience with actual customers and real use-case.",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44855873,
    "by": "turlockmike",
    "timeISO": "2025-08-10T15:31:59.000Z",
    "textPlain": "MCP is just JSON rpc with one useful command (list-tools). Turns out that's probably all we ever needed.",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44855965,
    "by": "pjmlp",
    "timeISO": "2025-08-10T15:46:09.000Z",
    "textPlain": "Everyone keeps rediscovering OS IPC extensions via RPC.Not only that, apparently we finally got Jini and Agent Tcl back!https://www.usenix.org/conference/fourth-annual-usenix-tcltk...https://www.eetimes.com/jini-basics-interrelating-with-java/",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44856522,
    "by": "Alex_L_Wood",
    "timeISO": "2025-08-10T17:02:09.000Z",
    "textPlain": "The more I look into MCP, the less I understand the hype. It's an OK API that describes how to fetch list of tools and resources and retrieve them, somehow this is supposed to be the standard for AI and environment communication, and...that's it? Am I missing something vital there?",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44857291,
    "by": "firasd",
    "timeISO": "2025-08-10T18:46:27.000Z",
    "textPlain": "I've been doing some really fun things with MCPFirst of all I think this kind of localhost/stdio MCP is kind of not 'The Way' besides for playing around. I've been working on SSE/remote/cloud-based MCPHere's a fun example: https://x.com/firasd/status/1945233853414826060(\"my landing page is in a text editor with iframe preview. I ask Claude to edit it—the doc gets transcluded into the AI chat, gets surgically edited. I reload. (All on mobile!)\")I'm working on a starter template like a DevTools MCP that people can deploy on Cloudflare and oAuth with their github account and it provides tools like url_fetch for people to use privately in their AI chats/tools. First I have to figure out the oAuth stuff myself but will make it a public repo after that and post on herePS. I also think tool use is really underrated and stuff like MCP unlocks a kind of agentic behavior 99% of AI users have never seen.",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44855311,
    "by": "eitland",
    "timeISO": "2025-08-10T14:11:29.000Z",
    "textPlain": "How long before companies start closing this \"loophole\"?And with the cynicism out of the way, what an insightful and refreshing article!",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44855899,
    "by": "crazygringo",
    "timeISO": "2025-08-10T15:35:42.000Z",
    "textPlain": "Previous discussion (43 days ago, 355 comments):https://news.ycombinator.com/item?id=44404905",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44856017,
    "by": "gtirloni",
    "timeISO": "2025-08-10T15:52:41.000Z",
    "textPlain": "Relevant: https://news.ycombinator.com/item?id=44846871",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44856982,
    "by": "ricardobeat",
    "timeISO": "2025-08-10T18:00:08.000Z",
    "textPlain": "Made a similar comment [1] a while back. Universal, open APIs might be one of the best things to come out of this AI wave.[1] https://news.ycombinator.com/item?id=44405187",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44855649,
    "by": "827a",
    "timeISO": "2025-08-10T15:01:03.000Z",
    "textPlain": "> MCP thinks it's for giving context to AI models. But really? It's just a really good protocol for making things talk to other things.MCP has very little utility outside of LLMs. The article begins by saying \"but what if we remove the AI\", then goes back on that thesis by saying \"but if there was an AI between these things, then it becomes a universal plugin system\". Which is true, but its missing the critical bit: The AI itself is the universal plugin system, not MCP. And, beyond that, its not even the AI: Its natural language. Language is the universal plugin system.Its not unbelievable that there exists an alternate reality where the Anthropic researchers that invented MCP instead simply leveraged a slightly extended form of OpenAPI specs. The only functional difference is that MCP was a stdin/stdout format first, and added HTTPS later, but sister problems in this domain like LSP just skipped stdin/stdout and went straight to locally-hosted HTTPS anyway. What matters isn't MCP, OpenAPI, or anything like that; what matters is the LLM itself, its tool calling capability, and the tool calling harness. The catalogue of available tools can be in any format; and, truly, the LLM does not care what format its in.",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44855405,
    "by": "shredprez",
    "timeISO": "2025-08-10T14:25:32.000Z",
    "textPlain": "Has anyone tried Basement's typed xmcp framework [1]? I rolled my own mcp server implementation earlier this summer and it works but it's very basic.I'm considering migrating, but time is limited and I'd love to avoid a dead-end if I can :p[1] https://github.com/basementstudio/xmcp",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44856792,
    "by": "theusus",
    "timeISO": "2025-08-10T17:33:23.000Z",
    "textPlain": "MCP has barely given me satisfactory results. LLMs just keep fighting with it and fill up a lot of their context.",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44855566,
    "by": "behnamoh",
    "timeISO": "2025-08-10T14:47:59.000Z",
    "textPlain": "Is it just me who absolutely hates this much hype around AI while still getting value from AI models? I get it, MCP is useful, but it's neither new nor safe and well thought-out. It feels like everyone now has to write a mandatory MCP article...",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44856083,
    "by": "nnnnico",
    "timeISO": "2025-08-10T16:01:13.000Z",
    "textPlain": "how does this hypeblog spam keep getting to the top?",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44857912,
    "by": "revskill",
    "timeISO": "2025-08-10T20:10:19.000Z",
    "textPlain": "There's nothing about \"model\" in MCP at all, they're just json rpc ?",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44856191,
    "by": "sexyman48",
    "timeISO": "2025-08-10T16:17:46.000Z",
    "textPlain": "I'm a well-designed hole. Put something here.You asked for it.",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44857676,
    "by": "stevenhuang",
    "timeISO": "2025-08-10T19:40:44.000Z",
    "textPlain": "Accidentally? Generic interoperability was the whole point of mcp, it was not an accident.",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44856733,
    "by": "belter",
    "timeISO": "2025-08-10T17:26:55.000Z",
    "textPlain": "MCP \"universal plugin system\" claims are oversold. It is really just a  standardized tool calling for AI agents. If you are not building agents that need to dynamically discover and choose tools, traditional APIs are simpler and better.The \"system integration\" benefits only matter when you have an LLM in the loop making decisions about which tools to use.",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44857987,
    "by": "russellbeattie",
    "timeISO": "2025-08-10T20:20:07.000Z",
    "textPlain": "> \"Your car doesn't care if you're charging a phone or running a personal pizza oven. The hole is the same size. The power is there.\"This is an inadvertently great and amusing analogy, because it shows how people can assume something about an API's capabilities without actually trying it.A 12V battery car battery can't power a pizza oven. It can barely boil water in a special rice cooker - very very slowly. And it risks depleting the battery and not being able to start your car.Like a new API, people get excited about what it can do, but the reality is very different.I have a portable fan with a power bank that charges over USB with a USB-micro plug. For some reason I can't fathom, it's an absolute power hog. I've killed my van's battery using it for just a few hours. (In theory it should be using at max 2.5W, but that's not the point).Again, that shows how trying to extend an APIs design can have unexpected side effects which tax the system in ways that are hard to predict.MCP has a lot of excitement around it now, but it will inevitably reach its limits. The lesson is to test your system under load before assuming anything.",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44855849,
    "by": "giantrobot",
    "timeISO": "2025-08-10T15:27:14.000Z",
    "textPlain": "I love that MCP servers are rediscovering the old idea of public web APIs mash-ups from the early days of Web 2.0. Of course we don't need any icky XML with its namespace and schemas. Just some vibe-heavy JSON.Snark aside it's, autonomous agents were one of the more interesting justifications for web APIs back in the day. I don't think people necessarily envisioned LLMs but some sort of agent you could send off to grab data or book flights or whatever. Specs like WSDL do what MCP does today letting the autonomous system figure out how to use a service.Oh well, schemas and the ability to do browser-native style transforms were lame! Lets transition to YAML so no one can say \"no\" to Norway.",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44854910,
    "by": "cranberryturkey",
    "timeISO": "2025-08-10T13:03:00.000Z",
    "textPlain": "checkout my MCP server platform: https://github.com/profullstack/mcp-serverI built it and have added several modules, but I'm always looking for people to add more modules. See ./mcp_modules in the root folder.",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44856287,
    "by": "back2dafucha",
    "timeISO": "2025-08-10T16:30:26.000Z",
    "textPlain": "[dead]",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44857020,
    "by": "tonetheman",
    "timeISO": "2025-08-10T18:04:05.000Z",
    "textPlain": "[dead]",
    "parent": 44854860,
    "depth": 1
  },
  {
    "id": 44857898,
    "by": "madrox",
    "timeISO": "2025-08-10T20:08:07.000Z",
    "textPlain": "You’re totally right, and that’s why I think this era will fail.Web 2.0 failed because eventually people realized to make money they needed to serve ads, and to do that they needed to own the UI. Making it easy to exfiltrate data meant switching cost was low, too. Can’t have that when you’re trying to squeeze value out of users. Look at the evolution of the twitter API over the 2.0 era. That was entirely motivated by Twitter’s desperate need to make money through ads.Only way we avoid that future is if we figure out new business models, but I doubt that will happen. Ads are too lucrative and people too resistant to pay for things.",
    "parent": 44857244,
    "depth": 2
  },
  {
    "id": 44857340,
    "by": "torginus",
    "timeISO": "2025-08-10T18:54:46.000Z",
    "textPlain": "They don't care about using your IP rights, I doubt it also works the other way around.",
    "parent": 44857244,
    "depth": 2
  },
  {
    "id": 44858061,
    "by": "1659447091",
    "timeISO": "2025-08-10T20:29:57.000Z",
    "textPlain": "Did you mean this is Web 3.0? (semantic web)Where the goal was to have a site's data as machine readable so that could be mashed up into something new? Instead of making it easier to gather the big sites locked the bulk of their data down so it never gained widespread adoptionWeb 2.0 is what we mostly have now -- social, user generated content and interaction",
    "parent": 44857244,
    "depth": 2
  },
  {
    "id": 44857812,
    "by": "fmbb",
    "timeISO": "2025-08-10T19:58:18.000Z",
    "textPlain": "Web 2.0 was also hot.",
    "parent": 44857244,
    "depth": 2
  },
  {
    "id": 44856671,
    "by": "jameshart",
    "timeISO": "2025-08-10T17:19:44.000Z",
    "textPlain": "There’s very little actual engineering going in to designing MCP interfaces to actually efficiently work with the way LLM workflows actually operate. Many MCPs offer tools that allow an LLM to retrieve a list of ‘things that exist’ with the expectation the LLM will then pick something out of that list for further action with a different tool. There’s very little evidence that LLMs are actually good at using tools that work like that, and massive lists of ‘things that exist’ eat tokens and context.Many businesses are rushing to put out something that fits the MCP standard but not taking the time to produce something that lets an LLM achieve things with their tool.",
    "parent": 44856403,
    "depth": 2
  },
  {
    "id": 44858149,
    "by": "britannio",
    "timeISO": "2025-08-10T20:48:08.000Z",
    "textPlain": "I discovered the \"Layered Tool Pattern\" a few days ago which exposes three tools to discover and execute an arbitrary number of service endpoints.\nhttps://engineering.block.xyz/blog/build-mcp-tools-like-ogre...",
    "parent": 44856403,
    "depth": 2
  },
  {
    "id": 44856605,
    "by": "markerz",
    "timeISO": "2025-08-10T17:12:47.000Z",
    "textPlain": "MCPs are the most basic solution possible.  Shoving the tool definitions into a vector store and having a subagent search for relevant tools, then another subagent to run the tools would greatly reduce impact on context.  I think it’d work in theory, but it’s so annoying to have to do something like this.  We’re still in a world where we have some building blocks rather than full fledged toolboxes.",
    "parent": 44856403,
    "depth": 2
  },
  {
    "id": 44856595,
    "by": "jjani",
    "timeISO": "2025-08-10T17:11:16.000Z",
    "textPlain": "Love how the MCPs mimic the company they represent in that sense.",
    "parent": 44856403,
    "depth": 2
  },
  {
    "id": 44856669,
    "by": "dragonwriter",
    "timeISO": "2025-08-10T17:19:40.000Z",
    "textPlain": "Most UIs currently are unsophisticated and let you turn on or off the tools on server-by-server basis. For some large servers (especially if they act as aggrgeators) this approach isn't going to be desirable and you are going to want to select individual tools to activate, not servers. But that's a UI issue more than a protocol issue.",
    "parent": 44856403,
    "depth": 2
  },
  {
    "id": 44856073,
    "by": "brookst",
    "timeISO": "2025-08-10T15:58:51.000Z",
    "textPlain": "I don’t like MCP because it relies on good faith from the plugin provider. It works great in closed, trusted environments but it cannot scale across trust boundaries.It just begs for spam and fraud, with badly-behaving services advertising lowest-cost, highest-quality, totally amazing services. It feels like the web circa 1995… lots of implicit trust that isn’t sustainable.",
    "parent": 44855844,
    "depth": 2
  },
  {
    "id": 44856069,
    "by": "nlawalker",
    "timeISO": "2025-08-10T15:58:28.000Z",
    "textPlain": "Totally agree - the true source of all of the value here is the new incentive to write very simple services with very simple documentation and to make that documentation easily discoverable.It fills a gap that exists in most service documentation: an easily discoverable page for developers (specifically, those who already know how to use their ecosystem of choice's HTTP APIs) that has a very short list of the service's most fundamental functionality with a simplified specification so they can go and play around with it.",
    "parent": 44855844,
    "depth": 2
  },
  {
    "id": 44858072,
    "by": "croes",
    "timeISO": "2025-08-10T20:31:55.000Z",
    "textPlain": "Too bad that the S in MCP stands for security",
    "parent": 44855844,
    "depth": 2
  },
  {
    "id": 44856643,
    "by": "derwiki",
    "timeISO": "2025-08-10T17:16:51.000Z",
    "textPlain": "WSDL has entered the chat",
    "parent": 44855873,
    "depth": 2
  },
  {
    "id": 44856145,
    "by": "cube00",
    "timeISO": "2025-08-10T16:12:04.000Z",
    "textPlain": "I wouldn't call it cynicism.Web services started as the same open utopia. Once everyone was in they jacked up the prices so high it killed the initial consumer apps (eg. Google Maps and Reddit)Nobody is giving access to their walled garden for the good of open-anything. It's what the VCs and stockholders demand and they're the ones putting up the cash to keep this AI hype funded in spite of it running at a loss.Given they haven't put security into MCP yet, I guess they'll need to do that first before they move on reinventing API keys so they can charge for access and hailing that as the next reason the line will go up.",
    "parent": 44855311,
    "depth": 2
  },
  {
    "id": 44856772,
    "by": "dragonwriter",
    "timeISO": "2025-08-10T17:31:21.000Z",
    "textPlain": "Some remote MCPs will get locked down to know client endpoints, same as any other HTTP service, so if companies are really concerned about them being AI-use-only and don't mind cutting off some AI use to preserve that exclusivity, they’ll lock it down to the big known hosted AI frontends (assuming those end up supporting MCP; the only one I know of that does currently is ChatGPT Deep Research, and only for very limited shapes of servers.)OTOH, that only effects those services, it won't stop people from leveraging MCP as, say, a generic local plugin model for non-AI apps.",
    "parent": 44855311,
    "depth": 2
  },
  {
    "id": 44855673,
    "by": "ecocentrik",
    "timeISO": "2025-08-10T15:03:31.000Z",
    "textPlain": "If MPC develops as an open standard and this \"loophole\" gains enough popularity, then companies can only really limit access to their services. This seems like a generally good thing that will enhance automation. In some cases it doesn't really matter if the automation comes from agents, hard coded software or a combination of the two.",
    "parent": 44855311,
    "depth": 2
  },
  {
    "id": 44856754,
    "by": "moduspol",
    "timeISO": "2025-08-10T17:29:03.000Z",
    "textPlain": "And even then: the key value of MCP is that it's \"simplified.\" Few servers are implementing anything you couldn't already do for years with their REST APIs.And why? Because it dumbs it down to the point that the LLM can understand it (often, in part, by removing security concerns). But these are LLMs! They're supposed to be smart! Isn't it a supposedly temporary failure that I can't just point the LLM at an OpenAPI spec (or use HATEOAS) and be good to go?Will this be doable in the next few months with better models? If so, why bother with MCP? If this won't be doable in the next few months / years, then how smart do we really expect these LLMs to be?",
    "parent": 44855649,
    "depth": 2
  },
  {
    "id": 44855884,
    "by": "radixdiaboli",
    "timeISO": "2025-08-10T15:33:26.000Z",
    "textPlain": "> but if there was an AI between these things, then it becomes a universal plugin systemI've reread the article a couple times and I can't see where it says that you need to use an LLM to make it universal. I'm going to go so far as to say that it doesn't say that.",
    "parent": 44855649,
    "depth": 2
  },
  {
    "id": 44857085,
    "by": "dragonwriter",
    "timeISO": "2025-08-10T18:12:43.000Z",
    "textPlain": "> then goes back on that thesis by saying \"but if there was an AI between these things, then it becomes a universal plugin system\".This is neither an accurate quote of the article, nor an accurate paraphrase of something the article says, nor an accurate description of something subtly implied by the article without directly being said.The article, in fact, gives an example without AI in the middle.",
    "parent": 44855649,
    "depth": 2
  },
  {
    "id": 44855882,
    "by": "ethan_smith",
    "timeISO": "2025-08-10T15:33:19.000Z",
    "textPlain": "MCP's key innovation isn't the format but its unidirectional, stateless design pattern that makes it fundamentally easier to implement than bidirectional protocols like OpenAPI, which is why it's gaining traction as a universal connector beyond just LLM contexts.",
    "parent": 44855649,
    "depth": 2
  },
  {
    "id": 44856986,
    "by": "dragonwriter",
    "timeISO": "2025-08-10T18:00:27.000Z",
    "textPlain": "> MCP has barely given me satisfactory results.It's done a good job for me with the tools I've written and connected to LM Studio. I suspect the issue with whether you get satisfactory results is less about MCP qua MCP and more about particular servers and tools.",
    "parent": 44856792,
    "depth": 2
  },
  {
    "id": 44856171,
    "by": "cube00",
    "timeISO": "2025-08-10T16:15:29.000Z",
    "textPlain": "> It feels like everyone now has to write a mandatory MCP article...Like this one you can bet every blogspam article is also trying to push something...> The Part Where I Tell You I'm Building Something",
    "parent": 44855566,
    "depth": 2
  },
  {
    "id": 44856976,
    "by": "arrowsmith",
    "timeISO": "2025-08-10T17:58:36.000Z",
    "textPlain": "People don't read the article, they just comment based on the title. In that respect HN is no different from Reddit.",
    "parent": 44856083,
    "depth": 2
  },
  {
    "id": 44856951,
    "by": "th0ma5",
    "timeISO": "2025-08-10T17:55:08.000Z",
    "textPlain": "This community has no ability to separate researched information from conjecture, and especially on this topic since neural nets are a black box where we can never know if any behavior is fully intentional or not.",
    "parent": 44856083,
    "depth": 2
  }
]