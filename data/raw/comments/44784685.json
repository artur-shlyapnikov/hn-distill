[
  {
    "id": 44837675,
    "by": "rs186",
    "timeISO": "2025-08-08T14:49:15.000Z",
    "textPlain": "Clicked the article because my blurry eyes read \"on Windows Activation\", and I was like \"huh, what's interesting about Windows activation?\"Read the first paragraph and it was really confusing. Still the same after reading it again.Until I looked at the title. Oh, window activation is what we are actually talking about.",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44836873,
    "by": "dmart",
    "timeISO": "2025-08-08T13:45:37.000Z",
    "textPlain": "As a recent Linux (and Wayland) switcher, I love this behavior. It has always felt insane to me that macOS will just let some random auto-updater steal focus and eat your keystrokes while trying to work on something.",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44836277,
    "by": "nh2",
    "timeISO": "2025-08-08T12:35:24.000Z",
    "textPlain": "This mechanism sounds worth it.So many times on X11 do I type some chat message, and then some popup from another program comes up, which I accidentally confirm by my typing containing a space which presses the confirmation button, and I don't even know what the popup was.Or my password being typed in a popup.I once patched some code into i3 to prevent this for myself, but it wasn't a clean solution.",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44836989,
    "by": "nottorp",
    "timeISO": "2025-08-08T13:54:17.000Z",
    "textPlain": "I don't understand who historically has thought it's a good idea to allow applications to steal focus in the first place. It should be the window manager's decision, and the window manager should only switch focus if the user decides that.",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44837008,
    "by": "sho_hn",
    "timeISO": "2025-08-08T13:56:47.000Z",
    "textPlain": "Earlier discussion with comments from devs https://news.ycombinator.com/item?id=44784312",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44844159,
    "by": "chmod775",
    "timeISO": "2025-08-09T05:06:29.000Z",
    "textPlain": "On my my glorified gaming console (Windows desktop PC) it drives me absolutely nuts when I'm in the middle of some competitive game and a random auto-updater pops up, minimizing my current current fullscreen application. Bonus points if it happens again 30 seconds later because it launches the application after updating it (Why? I didn't even have it open before!)In some cases this had to get past QA at two billion-dollar companies, and neither did something about it.But that's far from the only way we've regressed in software quality. Really not worth mentioning. A drop of piss in an ocean of sewage.I'm glad that at least on my actual computer I get to focus on work distraction free - likely because most of the software running on there is designed by its users and survived by merit, rather than being the brainfart of some corporate committee more concerned with other things.",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44837806,
    "by": "treve",
    "timeISO": "2025-08-08T14:59:31.000Z",
    "textPlain": "Great idea, but pretty painful at the moment. I guess not everything uses this protocol yet, so I often can't find (for example) my password pops under other windows. Hoping this gets a bit better over time, it's one of the last remaining Wayland pains.",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44836702,
    "by": "burnt-resistor",
    "timeISO": "2025-08-08T13:29:10.000Z",
    "textPlain": "I can only barely appreciate or fathom the endless masochistic self-abuse of maintaining functional, useful semi-headless UI automation testing for various Linux distros.",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44838411,
    "by": "wronex",
    "timeISO": "2025-08-08T15:47:47.000Z",
    "textPlain": "Wait, hold on. Is this actually an issue that needs a solution? It feels like Wayland is doing something very stupid here. Why not let apps control their windows? I cannot remember when an app stole focus last time. The only time this makes sense is while entering a password. But that is a very specific case that can be solved by having the password dialog on a protected desktop (ie. one with only that single window.)",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44839501,
    "by": "eqvinox",
    "timeISO": "2025-08-08T17:25:24.000Z",
    "textPlain": "> Well, you probably know by now that Wayland, unlike X, doesn’t let one application force its idiot wishes on everyone else.…I thought {not allowing,managing} this on X11 is the window manager's job? (kwin certainly doesn't allow it on my X11 session…)Or is this arguing about \"uncooperative\"/\"hostile\" applications?",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44837680,
    "by": "jovial_cavalier",
    "timeISO": "2025-08-08T14:49:41.000Z",
    "textPlain": "Stealing focus is possible in X11, but the window manager needs to implement it. For instance, my dwm build does not refocus for any reason other than the user moving the mouse or pressing a key",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44842098,
    "by": "josteink",
    "timeISO": "2025-08-08T21:57:51.000Z",
    "textPlain": "> In essence, an application cannot take focus, it can only receive focus. In the example above, your chat app would request an XDG Activation token from the compositorTo be fair, the same is mostly true on Windows, but through some different APIs.Applications being able to put themselves in front unconditionally was for a long time a huge source of pain for the user, due to abusive/malicious software, and probably a reason Windows was malware platform #1.This is honestly a reasonable design.",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44840513,
    "by": "imchillyb",
    "timeISO": "2025-08-08T19:05:26.000Z",
    "textPlain": "The power of a system does not lie within its mechanisms, systems, and strategies.The power of a system allows one -near infinite- ability to create and manipulate those mechanisms, systems, and strategies.The most powerful systems have few safeguards or rails, and user beware.The most restrictive systems we hand to grandma and grandpa, knowing there is little they can actually do with them.",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44837726,
    "by": "andrewmcwatters",
    "timeISO": "2025-08-08T14:53:02.000Z",
    "textPlain": "It's not just windows that I love popping up in my face actively! interrupting what I'm doing, but also ones that have autofocus elements, doubly stealing my attention and not having a debounce for ignoring actions, as others here have mentioned.Type-type-type...HEY THIS APPLICATION HAS SOME UPDATES HERES A CHANGEL-keypress closes windowI wanted to read that, damn it!",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44836174,
    "by": "zb3",
    "timeISO": "2025-08-08T12:22:05.000Z",
    "textPlain": "Umm.. thanks to this logic I had to write an extension just so I could open firefox using a keystroke, because otherwise the browser did not receive focus..",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44837690,
    "by": "rekabis",
    "timeISO": "2025-08-08T14:50:11.000Z",
    "textPlain": "This title seems click-baity, as the term is most frequently used for registering Windows. That was my curiosity when I clicked through. I somehow doubt it would have gotten as many clicks had it been “Window Focus”.",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44836583,
    "by": "webdevver",
    "timeISO": "2025-08-08T13:14:10.000Z",
    "textPlain": "the pragmatic thing to do is just let the Free Market decide. as far as i understand, windows just lets apps grab whatever window they want, whatever input they want, right? and everything Just Works(tm). app writers are discouraged to make things too clever by virtue of users having the choice of not using the app in question.why cant linux guys just... copy windows?android-ifying this space with permissions, channels, protocols etc, and pretending that apps are insecure is adding friction that benefits nobody imo.",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44837024,
    "by": "anonym29",
    "timeISO": "2025-08-08T13:58:19.000Z",
    "textPlain": "[flagged]",
    "parent": 44784685,
    "depth": 1
  },
  {
    "id": 44841341,
    "by": "eirikbakke",
    "timeISO": "2025-08-08T20:25:18.000Z",
    "textPlain": "If that's the topic you were looking for, you may like this \"Dave's Garage\" episode, where a retired Microsoft engineer talks about implementing... Windows Activation. https://www.youtube.com/watch?v=FpKNFCFABp0",
    "parent": 44837675,
    "depth": 2
  },
  {
    "id": 44838612,
    "by": "xp84",
    "timeISO": "2025-08-08T16:06:58.000Z",
    "textPlain": "Don't feel bad -- the other frontpage story \"ultra thin business card runs fluid simulation\" I thought it said \"...RUINS fluid simulation.\"",
    "parent": 44837675,
    "depth": 2
  },
  {
    "id": 44845990,
    "by": "fn-mote",
    "timeISO": "2025-08-09T12:28:11.000Z",
    "textPlain": "Yes, appending “in Wayland” would have 1000% clarified the topic for me.",
    "parent": 44837675,
    "depth": 2
  },
  {
    "id": 44838734,
    "by": "DonHopkins",
    "timeISO": "2025-08-08T16:16:28.000Z",
    "textPlain": "They used to have whole conferences on window management!\"Methodology of Window Management\": http://www.chilton-computing.org.uk/inf/literature/books/wm/...By F R A Hopgood, D A Duce, E V C Fielding, K Robinson, A S Williams. 29 April 1985. This is the Proceedings of the Alvey Workshop at Cosener's House, Abingdon that took place from 29 April 1985 until 1 May 1985. It was input into the planning for the MMI part of the Alvey Programme. The Proceedings were later published by Springer-Verlag in 1986.My favorite chapters:\"Ten Years of Window Systems - A Retrospective View\" by Warren Teitelman: http://www.chilton-computing.org.uk/inf/literature/books/wm/...\"SunDew - A Distributed and Extensible Window System\" by Games Gosling: http://www.chilton-computing.org.uk/inf/literature/books/wm/...\"User Interface Working Group Discussions\": http://www.chilton-computing.org.uk/inf/literature/books/wm/...\"User Interface Working Group Final Report\": http://www.chilton-computing.org.uk/inf/literature/books/wm/...",
    "parent": 44837675,
    "depth": 2
  },
  {
    "id": 44843876,
    "by": "zulu-inuoe",
    "timeISO": "2025-08-09T03:42:59.000Z",
    "textPlain": "I thought exactly the same thing",
    "parent": 44837675,
    "depth": 2
  },
  {
    "id": 44839455,
    "by": "heraldgeezer",
    "timeISO": "2025-08-08T17:20:17.000Z",
    "textPlain": "Haha exactly why I am here too. I need glasses.",
    "parent": 44837675,
    "depth": 2
  },
  {
    "id": 44837742,
    "by": "andrewmcwatters",
    "timeISO": "2025-08-08T14:54:04.000Z",
    "textPlain": "I too was hoping for something like a deep dive into key management reverse engineering. lol",
    "parent": 44837675,
    "depth": 2
  },
  {
    "id": 44840443,
    "by": "mdavid626",
    "timeISO": "2025-08-08T18:58:38.000Z",
    "textPlain": "Same.",
    "parent": 44837675,
    "depth": 2
  },
  {
    "id": 44836948,
    "by": "vbezhenar",
    "timeISO": "2025-08-08T13:51:14.000Z",
    "textPlain": "Powerful permissions are needed for powerful apps.I don't know about this particular issue, but for example, KiCAD has multiple issues with wayland being overly protective: [0]. For example KiCAD needs the ability to move cursor to provide good user experience. KiCAD needs the ability to move and place windows wherever it likes. KiCAD needs to control focus. KiCAD needs to prevent OpenGL throttling on inactive windows. These issues led KiCAD developers to reduce support for Wayland configurations to a bare minimum.So it's a delicate balance for operating systems to both allow powerful apps to implement complicated UI and to prevent badly written apps to do inconvenient things.[0]: https://www.kicad.org/blog/2025/06/KiCad-and-Wayland-Support...",
    "parent": 44836873,
    "depth": 2
  },
  {
    "id": 44840504,
    "by": "bityard",
    "timeISO": "2025-08-08T19:04:57.000Z",
    "textPlain": "I have either approved or denied about a dozen things on my MacOS work laptop and have no idea what they were because I was in the middle of typing a sentence and happened to hit the spacebar when the dialog popped up. Hope none of them were too important!",
    "parent": 44836873,
    "depth": 2
  },
  {
    "id": 44845503,
    "by": "throwaway2037",
    "timeISO": "2025-08-09T10:52:54.000Z",
    "textPlain": "Seriously question about focus stealing: What is state of the art at the moment for desktop windowing systems?  Is the \"correct\" action when a window wants to steal focus: Pop under the active window and give a non-focus stealing hint (UI balloon?) to the user that this window needs attention?I can think of two real world examples: (1) debugger hits breakpoint and steals focus (this is sometimes configurable), (2) WiFi needs re-/auth.",
    "parent": 44836873,
    "depth": 2
  },
  {
    "id": 44838230,
    "by": "mayoff",
    "timeISO": "2025-08-08T15:32:08.000Z",
    "textPlain": "Supposedly this was improved in macOS 14 (Sonoma, late 2023) with \"cooperative app activation\". It's discussed in this WWDC 2023 video:https://developer.apple.com/videos/play/wwdc2023/10054/?time...",
    "parent": 44836873,
    "depth": 2
  },
  {
    "id": 44842023,
    "by": "mmis1000",
    "timeISO": "2025-08-08T21:48:12.000Z",
    "textPlain": "If it does just let anything get the focus than it is still somewhat okay. The worst thing is you open a folder from some other app and nothing happens, the desktop did not switch to finder at all. And after you switched it manually. The whole ten windows opened at same time.",
    "parent": 44836873,
    "depth": 2
  },
  {
    "id": 44837552,
    "by": "dataflow",
    "timeISO": "2025-08-08T14:39:15.000Z",
    "textPlain": "> It has always felt insane to me that macOS and Windows will both just let some random auto-updater steal focus and eat your keystrokes while trying to work on something.Wait, what? Hasn't Windows prevented focus stealing for literally decades at this point?https://devblogs.microsoft.com/oldnewthing/20090220-00/?p=19...",
    "parent": 44836873,
    "depth": 2
  },
  {
    "id": 44838470,
    "by": "Defletter",
    "timeISO": "2025-08-08T15:53:36.000Z",
    "textPlain": "Yup. I used to use a Macbook Pro as my daily driver and played League of Legends on it... and the amount of forced-focus was infuriating. You just locked in and are messaging your friend on Discord about something? Well, there's 10 seconds left until the game starts and that's more important so you're focusing the League client now.",
    "parent": 44836873,
    "depth": 2
  },
  {
    "id": 44842024,
    "by": "pmarreck",
    "timeISO": "2025-08-08T21:48:17.000Z",
    "textPlain": "Windows was worse at this than the Mac was.",
    "parent": 44836873,
    "depth": 2
  },
  {
    "id": 44839518,
    "by": "eqvinox",
    "timeISO": "2025-08-08T17:26:50.000Z",
    "textPlain": "KDE: Settings → Window Management → Window Behavior → Focus → Focus stealing preventionEven on \"Low\" (the options are None, Low, Medium, High, Extreme) I'm not seeing this behavior.  Might be an i3 problem.",
    "parent": 44836277,
    "depth": 2
  },
  {
    "id": 44844666,
    "by": "iforgotpassword",
    "timeISO": "2025-08-09T07:13:03.000Z",
    "textPlain": "Huh I'm also on i3 but I never run into this problem. If any program would start stealing focus I'd just uninstall it and yell at the author/vendor.",
    "parent": 44836277,
    "depth": 2
  },
  {
    "id": 44837017,
    "by": "guardian5x",
    "timeISO": "2025-08-08T13:57:28.000Z",
    "textPlain": "Well, sometimes the user expects the focus to shift, like the example mentioned when you click a link in one application and your browser in the background should come into focus when it opens a new tab.\nSome applications just decide to steal focus when the user does not expect it, and that is the problem.",
    "parent": 44836989,
    "depth": 2
  },
  {
    "id": 44840739,
    "by": "SoftTalker",
    "timeISO": "2025-08-08T19:28:35.000Z",
    "textPlain": "You think that's bad, back in the day when I was in an office where everyone used X terminals off of a common unix server, you could open a window on someone else's screen by just changing your DISPLAY environment variable. Fun pranks were fairly common.",
    "parent": 44836989,
    "depth": 2
  },
  {
    "id": 44839528,
    "by": "eqvinox",
    "timeISO": "2025-08-08T17:27:48.000Z",
    "textPlain": "KDE has KWin settings controlling this.  I have no idea if this is some kind of a fixup after the fact or whether the window manager always controls this, but at least it does on a KDE X11 session.",
    "parent": 44836989,
    "depth": 2
  },
  {
    "id": 44838989,
    "by": "OsrsNeedsf2P",
    "timeISO": "2025-08-08T16:37:13.000Z",
    "textPlain": "If you did have UI automation, you probably would do it at the DE level, and not swap things like X11 for Wayland. If you don't update (or use something like XFCE), it would probably remain functional for decades",
    "parent": 44836702,
    "depth": 2
  }
]