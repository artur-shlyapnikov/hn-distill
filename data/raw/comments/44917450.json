[
  {
    "id": 44917844,
    "by": "arthurofbabylon",
    "timeISO": "2025-08-15T22:11:10.000Z",
    "textPlain": "> TextKit2 is implemented to be used by UITextViewThis is the key insight that makes TextKit2 workable. I personally would not attempt to build an alternative to UITextView on TextKit (1 or 2). Instead, TextKit2 is all about very sensible intervention points for customizing UITextView (eg, Markdown-style parsing, typography, interactions, layout).I recently rebuilt Minimal’s editor with TextKit2 (see minimal.app/#beta to experience it), and found Kryzanowskim’s deep dives very fruitful. He explores the edges of the API, so his writing helped me identify a nice bounds of safe-space to work in, and helped clarify what areas are too complex to safely build custom functionality within. (So thank you, author!)I would not dismiss TextKit2; it is an incredible improvement over TextKit1. It remains a complicated and challenging field.",
    "parent": 44917450,
    "depth": 1
  },
  {
    "id": 44917884,
    "by": "refulgentis",
    "timeISO": "2025-08-15T22:14:23.000Z",
    "textPlain": "Interesting read.I have to wonder if the scrollbar problem is inescapable, given the shape of the problem.Flutter has dealt with similar issues, perhaps by virtue of more eyeballs / being slightly older, there are solutions. SuperSliverList in particular completely erased the jumpy-jank that happened when estimates changed to concrete values.",
    "parent": 44917450,
    "depth": 1
  },
  {
    "id": 44917942,
    "by": "lapcat",
    "timeISO": "2025-08-15T22:19:57.000Z",
    "textPlain": "> I would not dismiss TextKit2; it is an incredible improvement over TextKit1.It's an absolute disaster on macOS. Even TextEdit app is now buggy as hell.It's incredible how Apple broke plain text display on the Mac, which was a solved problem since forever.",
    "parent": 44917844,
    "depth": 2
  }
]