[
  {
    "id": 44914579,
    "by": "vlovich123",
    "timeISO": "2025-08-15T16:44:46.000Z",
    "textPlain": "All I took away from this is how more and more complicated C++ as a language becomes to make the syntax slightly more convenient.",
    "parent": 44872584,
    "depth": 1
  },
  {
    "id": 44915870,
    "by": "mgaunard",
    "timeISO": "2025-08-15T18:28:24.000Z",
    "textPlain": "Every new version of C++ (and sometimes even new versions of C++ compilers) can break code in subtle ways.You should always do extensive testing before upgrading.",
    "parent": 44914579,
    "depth": 2
  },
  {
    "id": 44914866,
    "by": "twoodfin",
    "timeISO": "2025-08-15T17:07:54.000Z",
    "textPlain": "It’s less about convenient syntax and more about simplifying the construction of abstractions.You could argue that the latter is the core drive to evolve the standard.",
    "parent": 44914579,
    "depth": 2
  },
  {
    "id": 44915067,
    "by": "immibis",
    "timeISO": "2025-08-15T17:25:10.000Z",
    "textPlain": "It's not slightly, it's substantially more complicated to become substantially more convenient. The leap from C to C++ is similar to the leap from assembly code to C. As you add features, the language becomes more complex. That's just how it is.Most languages deal with this by limiting the features they have - but not C++! (or Scala, which is like Java's C++)",
    "parent": 44914579,
    "depth": 2
  }
]