[
  {
    "id": 44890666,
    "by": "Shank",
    "timeISO": "2025-08-13T16:37:35.000Z",
    "textPlain": "> The current preview implementation supports HTTP-01 challenges to verify the client’s domain ownership.DNS-01 is probably the most impactful for users of nginx that isn't public facing (i.e., via Nginx Proxy Manager). I really want to see DNS-01 land! I've always felt that it's also one of the cleanest because it's just updating some records and doesn't need to be directly tethered to what you're hosting.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44890497,
    "by": "dizhn",
    "timeISO": "2025-08-13T16:23:35.000Z",
    "textPlain": "This is pretty big. Caddy had this forever but not everybody wants to use caddy. It'll probably eat into the user share of software like Traefik.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44896967,
    "by": "Humphrey",
    "timeISO": "2025-08-14T05:16:18.000Z",
    "textPlain": "Anybody know how this would work for multiple nginx backends or failover machines - as I assume it's only possible to auto-fetch certificates for the live machine.  Is it expected that you would use scp or similar to copy certs from the live machine to the failover / new server?",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44894943,
    "by": "kocial",
    "timeISO": "2025-08-13T23:07:28.000Z",
    "textPlain": "The problem with the big open-source companies is that they are always very late to understand and implement the most basic innovations that come out.Caddy & Traefik did it long, long ago (half a decade ago), and after half a decade, we finally have ngxin supporting it too. Great move though, finally I won't have to manually run certbot :pray:",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44891203,
    "by": "josegonzalez",
    "timeISO": "2025-08-13T17:22:48.000Z",
    "textPlain": "This is great. Dokku (of which I am the maintainer) has a hokey solution for this with our letsencrypt plugin, but thats caused a slew of random issues for users. Nginx sometimes gets \"stuck\" reloading and then can't find the endpoint for some reason. The fewer moving knobs, the better.That said, its going to take quite some time for this to land in stable repositories for Ubuntu and Debian, and it doesn't (yet?) have DNS challenge support - meaning no wildcards - so I don't think it'll be useful for Dokku in the short-term at least.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44896753,
    "by": "makaking",
    "timeISO": "2025-08-14T04:33:41.000Z",
    "textPlain": "The fact that certificate management is still evolving makes me realize how young the web still is in the big scheme of things.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44896550,
    "by": "vivzkestrel",
    "timeISO": "2025-08-14T03:47:28.000Z",
    "textPlain": "Not gonna lie, setting up Nginx, Certbot inside docker is the biggest PITA ever. you need certificates to start the NGINX server but you need the NGINX server to issue certificates? see the problem? It is made infinitely worse by a tonne of online solutions and blog posts none of which I could ever get to work. I would really appreciate if someone has documented this extensively for docker compose. I dont want to use libraries like nginx-proxy as customizing that library is another nightmare alltogether",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44891105,
    "by": "thaumaturgy",
    "timeISO": "2025-08-13T17:13:18.000Z",
    "textPlain": "Good to see this. For those that weren't aware, there's been a low-effort solution with https://github.com/dehydrated-io/dehydrated, combined with a pretty simple couple of lines in your vhost config:    location ^~ /.well-known/acme-challenge/ {\n        alias <path-to-your-acme-challenge-directory>;\n    }\n\nDehydrated has been around for a while and is a great low-overhead option for http-01 renewal automation.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44893042,
    "by": "idoubtit",
    "timeISO": "2025-08-13T19:55:12.000Z",
    "textPlain": "A little mistake with this release: they packaged the ngx_http_acme_module for many Linux distributions, but \"forgot\" Debian stable. Oldstable and oldoldstable are listed in https://nginx.org/en/linux_packages.html (packages built today) but Debian 13 Trixie (released 4 days ago) is not there.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44891335,
    "by": "RagnarD",
    "timeISO": "2025-08-13T17:34:06.000Z",
    "textPlain": "After discovering Caddy, I don't use Nginx any longer. Just a much better development experience.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44894228,
    "by": "metafunctor",
    "timeISO": "2025-08-13T21:44:41.000Z",
    "textPlain": "I never saw it as a problem for nginx to just serve web content and let certbot handle cert renewals. Whatever happened to doing one thing well and making it composable? Fat tools that try to do everything inevitably suck at some important part.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44890726,
    "by": "aorth",
    "timeISO": "2025-08-13T16:42:20.000Z",
    "textPlain": "Oh this is exciting! Caddy's support is very convenient and it does a lot of other stuff right out of the box which is great.One thing keeping me from switching to Caddy in my places is nginx's rate limiting and geo module.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44891078,
    "by": "stego-tech",
    "timeISO": "2025-08-13T17:10:19.000Z",
    "textPlain": "The IT Roller Coaster in two reactions:> Nginx Introduces Native Support for Acme ProtocolIT: “It’s about fucking time!”> The current preview implementation supports HTTP-01 challenges to verify the client’s domain ownership.IT: “FUCK. Alright, domain registrar, mint me a new wildcard please, one of the leading web infrastructure providers still can’t do a basic LE DNS-01 pull in 2025.”Seriously. PKI in IT is a PITA and I want someone to SOLVE IT without requiring AD CAs or Yet Another Hyperspecific Appliance (YAHA). If your load balancer, proxy server, web server, or router appliance can’t mint me a basic Acme certificate via DNS-01 challenges, then you officially suck and I will throw your product out for something like Caddy the first chance I get.While we’re at it, can we also allow DNS-01 certs to be issued for intermediate authorities, allowing internally-signed certificates to be valid via said Intermediary? That’d solve like, 99% of my PKI needs in any org, ever, forever.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44891278,
    "by": "miggy",
    "timeISO": "2025-08-13T17:28:35.000Z",
    "textPlain": "It seems HAProxy also added ACME/DNS-01 challenge support in haproxy-3.3-dev6 very recently. https://www.mail-archive.com/haproxy@formilux.org/msg46035.h...",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44896024,
    "by": "st3fan",
    "timeISO": "2025-08-14T02:08:19.000Z",
    "textPlain": "Basically the only reason I install Caddy instead of Nginx as a reverse proxy is the one-liner to get TLS & ACME going. Maybe this will change that? Not sure.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44892841,
    "by": "ilaksh",
    "timeISO": "2025-08-13T19:38:09.000Z",
    "textPlain": "Just to check, this means we can use some extra lines in the nginx configuration as an alternative to installing and running certbot, right?Also does it make it easier for there to be alternatives to Let's Encrypt?",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44891119,
    "by": "samgranieri",
    "timeISO": "2025-08-13T17:14:35.000Z",
    "textPlain": "This is a good first start. One less moving part.\nThey should match caddy for feature parity on this, and also add dns01 challenges as well.I'm not using nginx these days because of this.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44892034,
    "by": "smarx007",
    "timeISO": "2025-08-13T18:27:01.000Z",
    "textPlain": "When will this land in mainline distros (no PPAs etc)? Given that a new stable version of Debian was released very recently, I would imagine August 2027 for Debian and maybe April 2026 for Ubuntu?In this very thread some people complain that certbot uses snap for distribution. Imagine making a feature release and having to wait 1-2 years until your users will get it on a broad scale.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44896660,
    "by": "themafia",
    "timeISO": "2025-08-14T04:09:59.000Z",
    "textPlain": "We had about 100 domains or so that needed to be redirected to their new homes.  The previous person in my position set it all up using GoDaddy domains and redirects.  I was gobsmacked at how much effort it took,  and when browsers switched to HTTPS first,  how badly it broke the setup.That's when I found \"golang.org/x/crypto/acme/autocert\" and then I built a custom redirect server using it.  It implements TLS-ALPN-01 which works fantastically with Let's Encrypt.Now we can just add a domain to our web configuration,  setup it's target and redirect style,  and then push the configuration out the EC2 instance providing the public facing service.   As soon as the first client makes a request,  they're effectively put \"on hold,\"  while the server then arranges for the certificate in the background.  As soon as it's issued and installed on the server the server continues with the original client.It's an absolute breeze and it makes me utterly detest going backwards to DNS-01 or HTTP-01 challenges.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44892711,
    "by": "ugh123",
    "timeISO": "2025-08-13T19:27:09.000Z",
    "textPlain": "How does something like this work for a fleet of edge services, load balancing in distinct areas, but all share a certificate.  Does each nginx instance go through the same protocol/setup steps?",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44892873,
    "by": "ExoticPearTree",
    "timeISO": "2025-08-13T19:40:20.000Z",
    "textPlain": "It is a start. Maybe this will serve as a proof of concept that it can be done and then other protocols could be implemented.Probably like many others here, I would very much like to see Cloudflare DNS support.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44891745,
    "by": "tialaramex",
    "timeISO": "2025-08-13T18:03:57.000Z",
    "textPlain": "It's good to see this, it surprised me that this didn't happen to basically everything, basically immediately.I figured either somehow Let's Encrypt doesn't work out, or, everybody bakes in ACME within 2-3 years. The idea that you can buy software in 2025 which has TLS encryption but expects you to go sort out the certificate. It's like if cars had to be refuelled periodically by taking them to a weird dedicated building which is not useful to anything else rather than just charging while you're asleep like a phone and... yeah you know what I get it now. You people are weird.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44894769,
    "by": "arjie",
    "timeISO": "2025-08-13T22:45:31.000Z",
    "textPlain": "Neat, that'll be nice to have. Currently I just use certbot and it does a pretty damn good job. I just set the HTTP:80 configuration and certbot will migrate it to HTTPS:443 and take care of the certificates and so on. For the moment, I'll probably stick to that till this is mature.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44893231,
    "by": "breadwinner",
    "timeISO": "2025-08-13T20:09:46.000Z",
    "textPlain": "But can it generate self-signed certificate for intranet use? Often on the intranet you want to encrypt traffic, to prevent casual snooping using Wireshark.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44890599,
    "by": "cobbzilla",
    "timeISO": "2025-08-13T16:31:04.000Z",
    "textPlain": "There’s a section on renewals but no description of how it works. Is there a background thread/process? Or is it request-driven? If request-driven, what about some hostname that’s (somehow) not seen traffic in >90 days?",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44894924,
    "by": "drchaim",
    "timeISO": "2025-08-13T23:04:35.000Z",
    "textPlain": "I’ve already migrated to caddy ;)",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44890604,
    "by": "adontz",
    "timeISO": "2025-08-13T16:31:21.000Z",
    "textPlain": "certbot has an plugin for nginx, so I'm not sure why people think is was hard to use LetsEncrypt with nginx.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44891796,
    "by": "zaik",
    "timeISO": "2025-08-13T18:08:06.000Z",
    "textPlain": "Is there a way to notify other services, if renewal has succeed? My XMPP server also needs to use the certificate.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44892439,
    "by": "aoe6721",
    "timeISO": "2025-08-13T19:02:57.000Z",
    "textPlain": "It was introduced long time ago in Angie fork with much better support.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44891550,
    "by": "andrewstuart",
    "timeISO": "2025-08-13T17:49:54.000Z",
    "textPlain": "It was this that sent me from nginx to caddy.But I’m not going back. Nginx was a real pain to configure with so many puzzles and surprises and foot guns.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44890493,
    "by": "johnisgood",
    "timeISO": "2025-08-13T16:23:30.000Z",
    "textPlain": "For now I will stick to what works (nginx + certbot), but I will give this a try. Anyone tried it?Caddy sounds interesting too, but I am afraid of switching because what I have works properly. :/",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44890618,
    "by": "do_not_redeem",
    "timeISO": "2025-08-13T16:32:39.000Z",
    "textPlain": "It looks like this isn't included by default with the base nginx, but requires you to install it as a separate module. Or am I wrong?https://github.com/nginx/nginx-acme",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44892089,
    "by": "thway15269037",
    "timeISO": "2025-08-13T18:31:54.000Z",
    "textPlain": "Does nginx still lock prometheus metrics and active probing behind $$$$$ (literal hundreds of thousands)? Forgot third most important thing. I think is was re-resolving upstreams.Anyway, good luck staying competitive lol. Almost everyone I knew either jumped to something more saner or in process of migrating away.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44892722,
    "by": "burnt-resistor",
    "timeISO": "2025-08-13T19:28:36.000Z",
    "textPlain": "Yeah, I don't want my webserver to turn into systemd and changing certificates. This is excessive functionality for something that should be handled elsewhere and drive the coordination of rolling certs.",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44891084,
    "by": "andrewmcwatters",
    "timeISO": "2025-08-13T17:10:34.000Z",
    "textPlain": "It seems like if you commit your NGINX config with these updates, you can have one less process to your deployment if you're doing something like:    # https://certbot.eff.org/instructions?ws=other&os=ubuntufocal\n    sudo apt-get -y install certbot\n    # sudo certbot certonly --standalone\n    \n    ...\n    \n    # https://certbot.eff.org/docs/using.html#where-are-my-certificates\n    # sudo chmod -R 0755 /etc/letsencrypt/{live,archive}\n\nSo, unfortunately, this support still seems more involved than using certbot, but at least one less manual step is required.Example from https://github.com/andrewmcwattersandco/bootstrap-express",
    "parent": 44889941,
    "depth": 1
  },
  {
    "id": 44890818,
    "by": "clvx",
    "timeISO": "2025-08-13T16:50:11.000Z",
    "textPlain": "But you have to have your dns api key loaded and many dns providers don’t allow api keys per zone.\nI do like it but a compromise could be awful.",
    "parent": 44890666,
    "depth": 2
  },
  {
    "id": 44892428,
    "by": "uncleJoe",
    "timeISO": "2025-08-13T19:02:02.000Z",
    "textPlain": "no need to wait: https://en.angie.software/angie/docs/configuration/modules/h...(angie is the nginx fork lead by original nginx developers that left f5)",
    "parent": 44890666,
    "depth": 2
  },
  {
    "id": 44891511,
    "by": "chaz6",
    "timeISO": "2025-08-13T17:46:41.000Z",
    "textPlain": "One of Traefik's shortcomings with ACME is that you can only use one api key per DNS provider. This is problematic if you want to restrict api keys to a domain, or use domains belonging to two different accounts. I hope Nginx will not have the same constraint.",
    "parent": 44890666,
    "depth": 2
  },
  {
    "id": 44891135,
    "by": "samgranieri",
    "timeISO": "2025-08-13T17:15:20.000Z",
    "textPlain": "I use dns01 in my homelab with step-ca with caddy. It's a joy to use",
    "parent": 44890666,
    "depth": 2
  },
  {
    "id": 44891761,
    "by": "attentive",
    "timeISO": "2025-08-13T18:05:16.000Z",
    "textPlain": "Yes, ACME-DNS please - https://github.com/joohoi/acme-dnsLego supports it.",
    "parent": 44890666,
    "depth": 2
  },
  {
    "id": 44891707,
    "by": "kijin",
    "timeISO": "2025-08-13T18:00:45.000Z",
    "textPlain": "A practical problem with DNS-01 is that every DNS provider has a different API for creating the required TXT record. Certbot has more than a dozen plugins for different providers, and the list is growing. It shouldn't be nginx's job to keep track of all these third-party APIs.It would also be unreasonable to tell everyone to move their domains to a handful of giants like AWS and Cloudflare who already control so much of the internet, just so they could get certificates with DNS-01. I like my DNS a bit more decentralized than that.",
    "parent": 44890666,
    "depth": 2
  },
  {
    "id": 44892448,
    "by": "aoe6721",
    "timeISO": "2025-08-13T19:03:36.000Z",
    "textPlain": "Switch to Angie then. It supports DNS-01 very well.",
    "parent": 44890666,
    "depth": 2
  },
  {
    "id": 44896336,
    "by": "klysm",
    "timeISO": "2025-08-14T03:03:40.000Z",
    "textPlain": "How does NGINX fit into that though?",
    "parent": 44890666,
    "depth": 2
  },
  {
    "id": 44890982,
    "by": "creatonez",
    "timeISO": "2025-08-13T17:02:26.000Z",
    "textPlain": "Why would nginx ever need support for the DNS-01 challenge type? It always has access to `.well-known` because nginx is running an HTTP server for the entire lifecycle of the process, so you'd never need to use a lower level way of doing DV. And that seems to violate the principle of least privilege, since you now need a sensitive API token on the server.",
    "parent": 44890666,
    "depth": 2
  },
  {
    "id": 44892244,
    "by": "altairprime",
    "timeISO": "2025-08-13T18:46:28.000Z",
    "textPlain": "Does DNS-01 support DNS-over-HTTPS to the registered domain name servers? If so, then it should be extremely simple to extend nginx to support DNS claims; if not, perhaps DNS-01 needs improvements.",
    "parent": 44890666,
    "depth": 2
  },
  {
    "id": 44890872,
    "by": "Spivak",
    "timeISO": "2025-08-13T16:54:24.000Z",
    "textPlain": "I don't even know why anyone wouldn't use the DNS challenge unless they had no other option. I've found it to be annoying and brittle, maybe less so now with native web server support. And you can't get wildcards.",
    "parent": 44890666,
    "depth": 2
  },
  {
    "id": 44890654,
    "by": "elashri",
    "timeISO": "2025-08-13T16:36:52.000Z",
    "textPlain": "What I really like about Caddy is their better syntax. I actually use nginx (via nginx proxy manager) and Traefik but recently I did one project with Caddy and found it very nice. I might get the time to change my selfhosted setup to use Caddy in the future but probably will go with something like pangolin [1] because it provides alternative to cloudflare tunnels too.[1] https://github.com/fosrl/pangolin",
    "parent": 44890497,
    "depth": 2
  },
  {
    "id": 44891303,
    "by": "tgv",
    "timeISO": "2025-08-13T17:31:09.000Z",
    "textPlain": "I switched over to caddy recently. Nginx' non-information about the http 1 desync problem drove me over. I'm not going to wait for something stupid to happen or an auditor ask me questions nginx doesn't answer.Caddy is really easier than nginx. For starters, I now have templates that cover the main services and their test services, and the special service that runs for an education institution. Logging is better. Certificate handling is perfect (for my case, at least). And it has better metrics.Now I have to figure out plugins though, because caddy doesn't have rate limiting and some stupid bug in powerbi makes a single user hit certain images 300.000 times per day. That's a bit of a downside.",
    "parent": 44890497,
    "depth": 2
  },
  {
    "id": 44897229,
    "by": "fastball",
    "timeISO": "2025-08-14T06:09:20.000Z",
    "textPlain": "I felt the same but switched to Caddy for my reverse proxy last year and have had a great experience.Admittedly this was on the back of trying to use nginx-unit, which was an overall bad experience, but ¯\\_(ツ)_/¯",
    "parent": 44890497,
    "depth": 2
  },
  {
    "id": 44890795,
    "by": "thrown-0825",
    "timeISO": "2025-08-13T16:48:41.000Z",
    "textPlain": "Definitely. I use traefik for some stuff at home and will likely swap it out now.",
    "parent": 44890497,
    "depth": 2
  }
]