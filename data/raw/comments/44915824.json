[
  {
    "id": 44916909,
    "by": "Const-me",
    "timeISO": "2025-08-15T20:23:22.000Z",
    "textPlain": "Not sure if that’s relevant, but when I do micro-benchmarks like that measuring time intervals way smaller than 1 second, I use __rdtsc() compiler intrinsic instead of standard library functions.On all modern processors, that instruction measures wallclock time with a counter which increments at the base frequency of the CPU unaffected by dynamic frequency scaling.Apart from the great resolution, that time measuring method has an upside of being very cheap, couple orders of magnitude faster than an OS kernel call.",
    "parent": 44915824,
    "depth": 1
  },
  {
    "id": 44917320,
    "by": "GTP",
    "timeISO": "2025-08-15T21:12:51.000Z",
    "textPlain": "By leaving my finger on the screen, I accidentally triggered an easter egg of two \"cannons\" shooting squares. Did anyone else notice it?",
    "parent": 44915824,
    "depth": 1
  },
  {
    "id": 44916819,
    "by": "sweetjuly",
    "timeISO": "2025-08-15T20:12:56.000Z",
    "textPlain": "A better title: a pathological test program meant for Linux does not trigger pathological behavior on OpenBSD",
    "parent": 44915824,
    "depth": 1
  },
  {
    "id": 44915925,
    "by": "rurban",
    "timeISO": "2025-08-15T18:33:12.000Z",
    "textPlain": "No, generally Linux is at least 3x faster than OpenBSD, because they don't care much for optimizations.",
    "parent": 44915824,
    "depth": 1
  },
  {
    "id": 44916702,
    "by": "cout",
    "timeISO": "2025-08-15T19:57:32.000Z",
    "textPlain": "Interesting. I tried to follow the discussion in the linked thread, and the only takeaway I got was \"something to do with RCU\". What id the simplified explanation?",
    "parent": 44915824,
    "depth": 1
  },
  {
    "id": 44916798,
    "by": "themafia",
    "timeISO": "2025-08-15T20:10:05.000Z",
    "textPlain": "Yea,  well,  I had to modify your website to make it readable.  Why do people do this?",
    "parent": 44915824,
    "depth": 1
  },
  {
    "id": 44917334,
    "by": "M_r_R_o_b_o_t_",
    "timeISO": "2025-08-15T21:14:38.000Z",
    "textPlain": "Ye",
    "parent": 44915824,
    "depth": 1
  },
  {
    "id": 44916623,
    "by": "the_plus_one",
    "timeISO": "2025-08-15T19:45:46.000Z",
    "textPlain": "Is it just me, or is there some kind of asteroid game shooting bullets at my cursor while I try to read this [1]? I hate to sound mean, but it's a bit distracting. I guess it's my fault for having JavaScript enabled.[1]: https://flak.tedunangst.com/script.js",
    "parent": 44915824,
    "depth": 1
  },
  {
    "id": 44916631,
    "by": "haunter",
    "timeISO": "2025-08-15T19:47:02.000Z",
    "textPlain": "In my\nmind faster  = the same game with the same graphics settings have more FPS(I don’t even know you could actually start mainstream games on BSD or not)",
    "parent": 44915824,
    "depth": 1
  },
  {
    "id": 44916757,
    "by": "asveikau",
    "timeISO": "2025-08-15T20:03:39.000Z",
    "textPlain": "My guess is it has something to do with the file descriptor table having a lot of empty entries (the dup2(0, 666) line.)Now time to read the actual linked discussion.",
    "parent": 44915824,
    "depth": 1
  },
  {
    "id": 44916685,
    "by": "dang",
    "timeISO": "2025-08-15T19:55:42.000Z",
    "textPlain": "The article title is too baity to fit HN's guidelines (https://news.ycombinator.com/newsguidelines.html) so I replaced it with a phrase from the article that's hopefully just baity enough.",
    "parent": 44915824,
    "depth": 1
  },
  {
    "id": 44916743,
    "by": "agambrahma",
    "timeISO": "2025-08-15T20:02:48.000Z",
    "textPlain": "So ... essentially testing file descriptor allocation overhead",
    "parent": 44915824,
    "depth": 1
  },
  {
    "id": 44916562,
    "by": "jedberg",
    "timeISO": "2025-08-15T19:37:38.000Z",
    "textPlain": "\"It depends\"Faster is all relative.  What are you doing?  Is it networking?  Then BSD is probably faster than Linux.  Is it something Linux is optimized for?  Then probably Linux.A general benchmark?  Who knows, but does it really matter?At the end of the day, you should benchmark your own workload, but also it's important to realize that in this day and age, it's almost never the OS that is the bottleneck.  It's almost always a remote network call.",
    "parent": 44915824,
    "depth": 1
  },
  {
    "id": 44917047,
    "by": "znpy",
    "timeISO": "2025-08-15T20:42:58.000Z",
    "textPlain": "the first step in benchmarking software is to use the same hardware.the author failed the first step.everything that follows is then garbage.",
    "parent": 44915824,
    "depth": 1
  },
  {
    "id": 44917042,
    "by": "sa46",
    "timeISO": "2025-08-15T20:42:16.000Z",
    "textPlain": "Isn't gettimeofday implemented with vDSO to avoid kernel context switching (and therefore, most of the overhead)?My understanding is that using tsc directly is tricky. The rate might not be constant, and the rate differs across cores. [1][1]: https://www.pingcap.com/blog/how-we-trace-a-kv-database-with...",
    "parent": 44916909,
    "depth": 2
  },
  {
    "id": 44917339,
    "by": "evanjrowley",
    "timeISO": "2025-08-15T21:14:54.000Z",
    "textPlain": "I also saw it, and it happened on a non-touch computer screen.",
    "parent": 44917320,
    "depth": 2
  },
  {
    "id": 44916901,
    "by": "apgwoz",
    "timeISO": "2025-08-15T20:21:39.000Z",
    "textPlain": "Surely you must be new to tedu posts…",
    "parent": 44916819,
    "depth": 2
  },
  {
    "id": 44916830,
    "by": "farhaven",
    "timeISO": "2025-08-15T20:14:08.000Z",
    "textPlain": "OpenBSD is a lot faster in some specialized areas though. Random number generation from `/dev/urandom`, for example. When I was at university (in 2010 or so), it was faster to read `/dev/urandom` on my OpenBSD laptop and pipe it over ethernet to a friend's Linux laptop than running `cat /dev/urandom > /dev/sda` directly on his.Not by just a bit, but it was a difference between 10MB/s and 100MB/s.",
    "parent": 44915925,
    "depth": 2
  },
  {
    "id": 44916549,
    "by": "shmerl",
    "timeISO": "2025-08-15T19:35:32.000Z",
    "textPlain": "It's talking about a specific case: https://infosec.exchange/@jann/115022521451508325",
    "parent": 44915925,
    "depth": 2
  },
  {
    "id": 44916551,
    "by": "kleiba",
    "timeISO": "2025-08-15T19:35:54.000Z",
    "textPlain": "Pretty broad statement(s).",
    "parent": 44915925,
    "depth": 2
  },
  {
    "id": 44917222,
    "by": "bobby_big_balls",
    "timeISO": "2025-08-15T21:03:48.000Z",
    "textPlain": "The file descriptor table (fdtable) starts with a minimum of 256 slots. Two threads creating 256 sockets each, which uses 512 fds, requires that the fdtable be expanded about halfway through. This is done by expand_fdtable() in the kernel. It contains the following code:        if (atomic_read(&files->count) > 1)\n          synchronize_rcu();\n\nThe field files->count is a reference counter. As there are two threads, which share a set of open files between them, the value of this is 2, meaning that synchronize_rcu() is called here during fdtable expansion. This waits until a full RCU grace period has elapsed, causing a delay in acquiring a new fd for the socket currently being created.If the fdtable is expanded prior to creating a new thread, as the test program optionally will do by calling dup(0, 666) if supplied a command line argument, this avoids the synchronize_rcu() call because at this point files->count == 1. Therefore, if this is done, there will be no delay later on when creating all the sockets as the fdtable will have sufficient capacity.",
    "parent": 44916702,
    "depth": 2
  },
  {
    "id": 44917030,
    "by": "viraptor",
    "timeISO": "2025-08-15T20:40:52.000Z",
    "textPlain": "When 2 threads are allocating sockets sequentially, they fight for the locks. If you preallocate a bigger table by creating fd 666 first, the lock contention goes away.",
    "parent": 44916702,
    "depth": 2
  },
  {
    "id": 44916658,
    "by": "nomel",
    "timeISO": "2025-08-15T19:51:08.000Z",
    "textPlain": "And, if it hits, your cursor disappears! I wish there was some explosion.",
    "parent": 44916623,
    "depth": 2
  },
  {
    "id": 44916916,
    "by": "bigstrat2003",
    "timeISO": "2025-08-15T20:24:05.000Z",
    "textPlain": "No, it's the website's fault for doing stupid cutesy stuff that makes the page harder to read. Don't victim-blame yourself here.",
    "parent": 44916623,
    "depth": 2
  },
  {
    "id": 44916654,
    "by": "nine_k",
    "timeISO": "2025-08-15T19:50:29.000Z",
    "textPlain": "Isn't it mostly limited by GPU hardware, and by binary blobs that are largely independent from the host platform?",
    "parent": 44916631,
    "depth": 2
  },
  {
    "id": 44916765,
    "by": "JdeBP",
    "timeISO": "2025-08-15T20:04:51.000Z",
    "textPlain": "I was just about to point Ian Betteridge at the original title.  (-:",
    "parent": 44916685,
    "depth": 2
  }
]